<?xml version="1.0" encoding="UTF-8"?>
<WindbotSettings>
    <Healer>
        <SpellHealer enabled="yes">
            <HealRule name="NewHealRule" spell="Light Healing" condition="Health Percent below" conditionMin="60" conditionMax="65" extraCondition="No Extra Condition" extraConditionMin="0" extraConditionMax="0" enabled="yes" spamMin="1000" spamMax="2000" triggerKey="&lt;no key&gt;" dontOverrideActions="no"/>
        </SpellHealer>
        <PotionHealer enabled="yes">
            <HealRule name="HP" spell="Health Potion" condition="Health Percent below" conditionMin="30" conditionMax="35" extraCondition="No Extra Condition" extraConditionMin="0" extraConditionMax="0" enabled="yes" spamMin="1000" spamMax="2000" triggerKey="&lt;no key&gt;" dontOverrideActions="no"/>
            <HealRule name="MP" spell="Mana Potion" condition="Mana below" conditionMin="35" conditionMax="40" extraCondition="No Extra Condition" extraConditionMin="0" extraConditionMax="0" enabled="no" spamMin="200" spamMax="500" triggerKey="&lt;no key&gt;" dontOverrideActions="no"/>
        </PotionHealer>
        <ConditionHealer enabled="no"/>
        <ManaTrainer manaTrainCondition="Mana Percent above" manaTrainMin="87" manaTrainMax="93" enabled="yes">
            <HealRule name="NewHealRule" spell="Wound Cleansing" extraCondition="No Extra Condition" extraConditionMin="0" extraConditionMax="0" enabled="yes" spamMin="1000" spamMax="2000" triggerKey="&lt;no key&gt;" dontOverrideActions="no"/>
        </ManaTrainer>
    </Healer>
    <Scripter>
        <HotkeyScripts>
            <HotkeyScript name="PauseHotkey" script="if not $cavebot or not $targeting then&#13;&#10;    listas('Enabling Cavebot and Targeting')&#13;&#10;    setcavebot('on')&#13;&#10;    settargeting('on')&#13;&#10;    wait(1000)&#13;&#10;else&#13;&#10;    listas('Disabling Cavebot and Targeting')&#13;&#10;    setcavebot('off')&#13;&#10;    settargeting('off')&#13;&#10;    stopattack()&#13;&#10;    wait(1000)&#13;&#10;end" triggerKey="Pause" hotkeyTriggerMode="0"/>
            <HotkeyScript name="Showbot" script="showbot()&#10;wait(2000)" triggerKey="Shift + F11" hotkeyTriggerMode="0"/>
        </HotkeyScripts>
        <PersistentScripts>
            <PersistentScript name="SafeReconnect" script="init start&#10;&#9;-- VERSION 2.1.0&#10;&#9;-- If ReopenBps is set to true then it'll try to reopen the visible backpacks on the main backpack&#10;&#9;-- setting it to false will just ignore your bps after you are logged in&#10;&#10;&#9;local ReopenBps = true&#10;&#10;&#9;-- If IgnoreServerSave is set to false it'll wait to relog if server save is occurring&#10;&#9;-- setting it to true will try to relog even on server saving time&#10;&#10;&#9;local IgnoreServerSave = false&#10;&#10;&#9;-- [[ ONLY EDIT SPECIAL CHECKS IF YOU KNOW WHAT YOU'RE DOING ]]--&#10;&#10;&#9;-- special checks are the checks it'll do after you login&#10;&#9;-- for example: if you are skulled, inside temple, etc ...&#10;&#10;&#9;local SpecialChecks = {&#10;&#9;&#9;{&#10;&#9;&#9;&#9;function()&#10;&#9;&#9;&#9;&#9;return isontemple()&#10;&#9;&#9;&#9;end,&#10;&#9;&#9;&#9;function()&#10;&#9;&#9;&#9;&#9;return messagebox('Reconnect Issue', 'Reconnect persistent was disabled because your character was inside a temple.\nThe reconnect will enable itself again when you login manually.')&#10;&#9;&#9;&#9;end&#10;&#9;&#9;},&#10;&#9;&#9;{&#10;&#9;&#9;&#9;function()&#10;&#9;&#9;&#9;&#9;return ($self.skull == SKULL_RED or $self.skull == SKULL_BLACK) and $pzone&#10;&#9;&#9;&#9;end,&#10;&#9;&#9;&#9;function()&#10;&#9;&#9;&#9;&#9;return messagebox('Reconnect Issue', 'Reconnect persistent was disabled because your character have gained a red/black skull.\nThe reconnect will enable itself again when you login manually.')&#10;&#9;&#9;&#9;end&#10;&#9;&#9;},&#10;&#9;&#9;{&#10;&#9;&#9;&#9;function()&#10;&#9;&#9;&#9;&#9;return $stamina &lt;= 14*60 and $pzone&#10;&#9;&#9;&#9;end,&#10;&#9;&#9;&#9;function()&#10;&#9;&#9;&#9;&#9;return messagebox('Reconnect Issue', 'Reconnect persistent was disabled because your character had less than 14 hours of stamina and was inside a protection zone.\nThe reconnect will enable itself again when you login manually.')&#10;&#9;&#9;&#9;end&#10;&#9;&#9;},&#10;&#9;}&#10;&#10;&#9;-- DO NOT EDIT BELOW --&#10;&#9;local reconState = 1&#10;&#10;&#9;if $curscript.type == 'cavebot' then&#10;&#9;&#9;reconState = -1&#10;&#9;&#9;messagebox('Reconnect Issue', 'Reconnect should be placed at Scripter/Persistents and not Cavebot/Scripter.\nChange this setting to run it properly.')&#10;&#9;end&#10;&#10;&#9;local openFunc = function()&#10;&#9;&#9;local lifeTime = $timems&#10;&#9;&#9;local reopenLogin = getsetting('Looting/OpenBPsAtLogin')&#10;&#10;&#9;&#9;setsetting('Looting/OpenBPsAtLogin', 'no')&#10;&#9;&#9;reopenwindows('small')&#10;&#10;&#9;&#9;while $openingbps do&#10;&#9;&#9;&#9;wait(100)&#10;&#10;&#9;&#9;&#9;if $timems - lifeTime &gt;= 10000 and not $pzone then&#10;&#10;&#9;&#9;&#9;&#9;setsetting('Looting/OpenBPsAtLogin', reopenLogin)&#10;&#9;&#9;&#9;&#9;return false&#10;&#9;&#9;&#9;end&#10;&#9;&#9;end&#10;&#10;&#9;&#9;setsetting('Looting/OpenBPsAtLogin', reopenLogin)&#10;&#9;&#9;return true&#10;&#9;end&#10;&#10;&#9;local randTimeSS = math.random(60, 660)&#10;&#10;init end&#10;&#10;auto(1000)&#10;&#10;if IgnoreSS or (sstime() &gt;= 600 and sstime() &lt;= 85800 - randTimeSS) and reconState == 1 and not $connected then&#10;&#9;randTimeSS = math.random(60, 660)&#10;&#9;setsetting('Targeting/Enabled', 'no')&#10;&#9;setsetting('Cavebot/Enabled', 'no')&#10;&#9;reconnect(true)&#10;&#10;&#9;if $connected then&#10;&#9;&#9;pausewalking(10000)&#10;&#9;else&#10;&#9;&#9;return&#10;&#9;end&#10;&#10;&#9;for _, callback in ipairs(SpecialChecks) do&#10;&#9;&#9;if callback[1]() then&#10;&#9;&#9;&#9;reconState = 0&#10;&#10;&#9;&#9;&#9;logout()&#10;&#10;&#9;&#9;&#9;return callback[2] ~= nil and callback[2]()&#10;&#9;&#9;end&#10;&#9;end&#10;&#10;&#9;if ReopenBps then&#10;&#9;&#9;local clientMin = $minimized&#10;&#10;&#9;&#9;if clientMin and not $addons.enabled then&#10;&#9;&#9;&#9;restoreclient() waitping()&#10;&#9;&#9;end&#10;&#10;&#9;&#9;local reopenSuccess = openFunc()&#10;&#10;&#9;&#9;if not reopenSuccess then&#10;&#9;&#9;&#9;messagebox('Reconnect Issue', 'Took too long to open them, they could be already opened but for safety reasons you were alerted. Please open them manually.')&#10;&#9;&#9;&#9;pausewalking(0)&#10;&#9;&#9;&#9;setsetting('Targeting/Enabled', 'yes')&#10;&#9;&#9;&#9;setsetting('Cavebot/Enabled', 'yes')&#10;&#10;&#9;&#9;&#9;for _ = 1, 10 do&#10;&#9;&#9;&#9;&#9;beep()&#10;&#9;&#9;&#9;&#9;wait(1000)&#10;&#9;&#9;&#9;end&#10;&#9;&#9;end&#10;&#10;&#9;&#9;if clientMin and not $minimized then&#10;&#9;&#9;&#9;minimizeclient()&#10;&#9;&#9;end&#10;&#9;end&#10;&#10;&#9;if not ($targeting and $cavebot) then&#10;&#9;&#9;setsetting('Targeting/Enabled', 'yes')&#10;&#9;&#9;setsetting('Cavebot/Enabled', 'yes')&#10;&#9;&#9;pausewalking(0)&#10;&#9;end&#10;end&#10;&#10;if $connected and reconState == 0 then&#10;&#9;messagebox(&quot;Reconnect&quot;, &quot;Reconnect hotkey as been enabled again because you have logged manually.&quot;)&#10;&#9;reconState = 1&#10;end" enabled="yes"/>
            <PersistentScript name="NewPersistentScript" script="cap = 80" enabled="yes"/>
            <PersistentScript name="openBps" script="auto(600)&#10;if windowcount() &lt; 2 and $wptsection == &quot;HUNTING&quot; then&#10;pausewalking(30000)&#10;&#9;local mainbp = getlootingdestination(&quot;mainbp&quot;)&#10;&#9;local rarebp = getlootingdestination(&quot;rarebp&quot;)&#10;&#9;&#10;&#9;while windowcount() &lt; 2 do&#10;&#9;closewindows()waitping()&#10;&#9;openitem(0,&quot;back&quot;)waitping()&#10;&#9;resizewindows()waitping()&#10;&#9;openitem(0,mainbp,true)waitping()&#10;&#9;resizewindows()waitping()&#10;&#9;end&#10;pausewalking(0)&#10;end" enabled="yes"/>
            <PersistentScript name="Furniture" script="    init start&#10;    local Weapon = &quot;steel axe&quot;&#10;    local MaxWait = 120&#10;&#10;    -- DO NOT EDIT BELOW --&#10;&#10;    AntiFurniture = AntiFurniture or {_data = {}, _houseitems = {}}&#10;&#10;    function AntiFurniture.Update()&#10;    AntiFurniture._data = {}&#10;&#10;    -- get all the tiles we can&#10;    for x = SCREEN_LEFT, SCREEN_RIGHT do&#10;    for y = SCREEN_TOP, SCREEN_BOTTOM do&#10;    local pos, house = {x = x + $posx, y = y + $posy, z = $posz}, false&#10;    local tile = gettile(pos.x, pos.y, pos.z)&#10;    local info = iteminfo(topitem(pos.x, pos.y, pos.z).id)&#10;&#10;    if info.isunpass and not info.isunmove and tilereachable(pos.x, pos.y, pos.z, false) then -- we got a valid block item&#10;    for _, item in ipairs(AntiFurniture._houseitems) do -- check if its not an item caught on a house earlier&#10;    if item.x == pos.x and item.y == pos.y and item.z == pos.z then&#10;    house = true&#10;    break&#10;    end&#10;    end&#10;    -- its a new house or valid item&#10;    if not house then&#10;    table.insert(AntiFurniture._data, {x = pos.x, y = pos.y, z = pos.z, id = info.id, tile = tile})&#10;    end&#10;    end&#10;    end&#10;    end&#10;&#10;    -- sort tiles for the closer one&#10;    table.sort(AntiFurniture._data, function(a, b)&#10;    if math.max(math.abs($posx - a.x), math.abs($posy - a.y)) == math.max(math.abs($posx - b.x), math.abs($posy - b.y)) then&#10;    if math.abs($posx - a.x) == math.abs($posx - b.x) then&#10;    if math.abs($posy - a.y) == math.abs($posy - b.y) then&#10;    return a.id &lt; b.id&#10;    else&#10;    return math.abs($posy - a.y) &lt; math.abs($posy - b.y)&#10;    end&#10;    else&#10;    return math.abs($posx - a.x) &lt; math.abs($posx - b.x)&#10;    end&#10;    else&#10;    return math.max(math.abs($posx - a.x), math.abs($posy - a.y)) &lt; math.max(math.abs($posx - b.x), math.abs($posy - b.y))&#10;    end&#10;    end)&#10;&#10;    end&#10;&#10;    Weapon = itemid(Weapon)&#10;&#10;    init end&#10;&#10;    auto(2000)&#10;&#10;    if clientitemhotkey(Weapon, &quot;crosshair&quot;) == '' and itemcount(Weapon) == 0 then&#10;    return&#10;    end&#10;&#10;    if $standtime &gt;= math.max(MaxWait or 0, 0) * 1000 then -- we're waited for too long!&#10;    AntiFurniture.Update()&#10;&#10;    for i, item in pairs(AntiFurniture._data) do -- check if we got something to break&#10;    local x, y, z, id, house = item.x, item.y, item.z, item.id, false&#10;&#10;    reachlocation(x, y, z) waitping()&#10;&#10;    while id == topitem(x, y, z).id and tilereachable(x, y, z, false) do -- dont stop till we rock it&#10;    useitemon(Weapon, id, ground(x, y, z)) waitping(1.9, 2.1)&#10;&#10;    foreach newmessage m do&#10;    if m.content:match(&quot;You are not invited&quot;) then -- we're entering a house, we should stop&#10;    house = table.remove(AntiFurniture._data, i)&#10;    break&#10;    end&#10;    end&#10;&#10;    if house then -- add our house to the known house items&#10;    return table.insert(AntiFurniture._houseitems, house)&#10;    end&#10;    end&#10;    end&#10;    end" enabled="yes"/>
        </PersistentScripts>
    </Scripter>
    <HUDs>
        <HUDScripts>
            <HUDScript name="MonitorMyStats" script="init start&#10;    --&#10;    --              88                                                                  &#10;    --              &quot;&quot;                                                ,d                &#10;    --                                                                88                &#10;    --   ,adPPYba,  88  8b,dPPYba,  88,dPYba,,adPYba,   ,adPPYYba,  MM88MMM  ,adPPYba,  &#10;    --   I8[    &quot;&quot;  88  88P'   &quot;Y8  88P'   &quot;88&quot;    &quot;8a  &quot;&quot;     `Y8    88    a8P_____88  &#10;    --    `&quot;Y8ba,   88  88          88      88      88  ,adPPPPP88    88    8PP&quot;&quot;&quot;&quot;&quot;&quot;&quot;  &#10;    --   aa    ]8I  88  88          88      88      88  88,    ,88    88,   &quot;8b,   ,aa  &#10;    --   `&quot;YbbdP&quot;'  88  88          88      88      88  `&quot;8bbdP&quot;Y8    &quot;Y888  `&quot;Ybbd8&quot;'  &#10;    --&#10;&#10;    --   Name: Monitor My Stats&#10;    --   Last Updated: 19/12/2013&#10;    --   Version: 1.0&#10;&#10;    local MMS = {&#10;        ShowInfo = false,&#10;&#10;        Title = &quot;SCRIPT INFO&quot;,&#10;        Creator = &quot;CREATOR NAME&quot;,&#10;        Info = 'Voc - Script Name',&#10;        Version = '1.0.0'&#10;    }&#10;&#10;    -- [[ Do not change anything below this line. ]] --&#10;&#10;    filterinput(false, true, false, false)&#10;&#10;    local HUD_Sections = {&#10;        {Name = 'OTHERS', State = true, Items = {&#10;                {'Ping', function() return $ping .. ' (avg: ' .. $pingaverage .. ')' end},&#10;                {'Bank Balance', function() return num($balance) end},&#10;            }&#10;        },&#10;&#10;        {Name = 'CHARACTER STATS', State = true, Items = {&#10;                {'Level', function() return $level .. ' (' .. 100 - math.floor(($exp - expatlvl($level)) * 100 / (expatlvl($level + 1) - expatlvl($level))) .. '%)' end},&#10;                {'Experience', function() return num($exp) end},&#10;                {'Magic Level', function() return $mlevel .. ' (' .. 100 - $mlevelpc .. '%)' end},&#10;                {'Weapon Skill', function() local _ = WeaponSkill() return _.skill .. ' (' .. 100 - _.skillpc .. '%)' end},&#10;                {'Shielding', function() return $shielding .. ' (' .. 100 - $shieldingpc .. '%)' end},&#10;                {'Fishing', function() return $fishing .. ' (' .. 100 - $fishingpc .. '%)' end}&#10;            }&#10;        },&#10;&#10;        {Name = 'ENGINE STATES', State = true, Items = {&#10;                {'Spell Healer', function() return getsetting('SpellHealer/Enabled') end, function() return toggle('SpellHealer/Enabled') end},&#10;                {'Potion Healer', function() return getsetting('PotionHealer/Enabled') end, function() return toggle('PotionHealer/Enabled') end},&#10;                {'Condition Healer', function() return getsetting('ConditionHealer/Enabled') end, function() return toggle('ConditionHealer/Enabled') end},&#10;                {'Mana Training', function() return getsetting('ManaTrainer/Enabled') end, function() return toggle('ManaTrainer/Enabled') end},&#10;                {'Cavebot', function() return getsetting('Cavebot/Enabled') end, function() return toggle('Cavebot/Enabled') end},&#10;                {'Looting', function() return getsetting('Looting/Enabled') end, function() return toggle('Looting/Enabled') end},&#10;                {'Targeting', function() return getsetting('Targeting/Enabled') end, function() return toggle('Targeting/Enabled') end}&#10;            }&#10;        },&#10;&#10;        {Name = 'BOTTING STATS', State = true, Items = {&#10;                {'Experience per Hour', function() return num($exphour) end},&#10;                {'Experience Left', function() return num(exptolevel()) end},&#10;                {'Experience Today', function() return num($expgained) end},&#10;                {'Time to Next Level', function() return time(timetolevel()) end},&#10;                {'Played Time', function() return time(math.floor($charactertime / 1000)) end},&#10;                {'Stamina', function() return time($stamina) end}&#10;            }&#10;        }&#10;    }&#10;&#10;    local HUD_Colors = {&#10;            Font = color(255, 255, 255, 0),&#10;            SectionHeaderBackground = {0.0, color(36, 68, 105, 20), 0.23, color(39, 73, 114, 20), 0.76, color(21, 39, 60, 20)},&#10;            EntryNameBackground = {0.0, color(75, 75, 75, 20), 0.23, color(45, 45, 45, 20), 0.76, color(19, 19, 19, 20)},&#10;            EntryValueBackground = {0.0, color(145, 95, 0, 20), 0.23, color(158, 104, 0, 20), 0.76, color(84, 55, 0, 20)},&#10;            EntryValueEnabledBackground = {0.0, color(65, 96, 12, 20), 0.23, color(67, 99, 13, 20), 0.76, color(36, 52, 6, 20)},&#10;            EntryValueDisabledBackground = {0.0, color(90, 12, 15, 20), 0.23, color(98, 13, 17, 20), 0.76, color(52, 6, 9, 20)},&#10;    }&#10;&#10;    function WeaponSkill()&#10;        local SkillTypes = {&#10;            ['axe'] = {type = 'axe', skill = $axe, skillpc = $axepc},&#10;            ['club'] = {type = 'club', skill = $club, skillpc = $clubpc},&#10;            ['sword'] = {type = 'sword', skill = $sword, skillpc = $swordpc},&#10;            ['bow'] = {type = 'distance', skill = $distance, skillpc = $distancepc},&#10;            ['distance weapon'] = {type = 'distance', skill = $distance, skillpc = $distancepc},&#10;            ['no weapon'] = {type = 'fist', skill = $fist, skillpc = $fistpc},&#10;            ['rod'] = {type = 'magic', skill = $mlevel, skillpc = $mlevelpc},&#10;            ['wand'] = {type = 'magic', skill = $mlevel, skillpc = $mlevelpc},&#10;        }&#10;&#10;        return SkillTypes[findweapontype()]&#10;    end&#10;&#10;    local Moving, Temp, Moved = false, {0, 0}, {0, 0}&#10;&#10;    function inputevents(e)&#10;        if (e.type == IEVENT_LMOUSEDOWN) then&#10;            for _, Section in ipairs(HUD_Sections) do&#10;                if (e.elementid == Section.StateSwitch) then&#10;                    Section.State = not Section.State&#10;                    return&#10;                end&#10;            end&#10;        for _, Section in ipairs(HUD_Sections) do&#10;                if (Section.Name == 'ENGINE STATES') then&#10;                    for _, SectionItem in ipairs(Section.Items) do&#10;                        if (e.elementid == SectionItem[4]) then&#10;                            SectionItem[3]()&#10;                            return&#10;                        end&#10;                    end&#10;                end&#10;            end&#10;        end&#10;&#10;        if (e.type == IEVENT_MMOUSEDOWN) then&#10;            Moving, Temp = true, {$cursor.x - Moved[1], $cursor.y - Moved[2]}&#10;        end&#10;&#10;        if (e.type == IEVENT_MMOUSEUP) then&#10;            Moving = false&#10;        end&#10;    end&#10;    &#10;    setmaskcolorxp(0)&#10;init end&#10;&#10;if (Moving) then&#10;    auto(10)&#10;    Moved = {$cursor.x - Temp[1], $cursor.y - Temp[2]}&#10;end&#10;&#10;setposition($clientwin.left + 5 + Moved[1], $worldwin.top + Moved[2])&#10;setfontstyle('Tahoma', 8, 75, 0xFFFFFF, 1, color(0, 0, 0, 20))&#10;&#10;local YPosition, SectionRow, SectionItemsRow = 0, 0, 0&#10;&#10;if MMS.ShowInfo then&#10;    local StringWidth, StringHeight = measurestring('TEMP')&#10;&#10;    setfillstyle('gradient', 'linear', 2, 0, 0, 0, 22)&#10;    addgradcolors(unpack(HUD_Colors.SectionHeaderBackground))&#10;    drawroundrect(0, 0, 240, 21, 2, 2)&#10;    drawtext(MMS.Title, 6, 21 / 2 - StringHeight * 0.5)&#10;&#10;    setfillstyle('gradient', 'linear', 2, 0, 0, 0, 22)&#10;    addgradcolors(unpack(HUD_Colors.EntryValueBackground))&#10;    drawroundrect(130, 0, 110, 21, 2, 2)&#10;    drawtext(MMS.Creator, 136, 21 / 2 - StringHeight * 0.5)&#10;&#10;    setfontsize(7)&#10;&#10;    local StringWidth, StringHeight = measurestring('TEMP')&#10;&#10;    setfillstyle('gradient', 'linear', 2, 0, 0, 0, 16)&#10;    addgradcolors(unpack(HUD_Colors.EntryNameBackground))&#10;    drawroundrect(0, 24 + 0 * 18, 240, 15, 2, 2)&#10;    drawtext(MMS.Info, 6, 24 + 0 * 18 + 15 / 2 - StringHeight * 0.5 + 1)&#10;     &#10;    setfillstyle('gradient', 'linear', 2, 0, 0, 0, 16)&#10;    addgradcolors(unpack(HUD_Colors.EntryNameBackground))&#10;    drawroundrect(0, 24 + 1 * 18, 240, 15, 2, 2)&#10;    drawtext('Script version:', 6, 24 + 1 * 18 + 15 / 2 - StringHeight * 0.5 + 1)&#10;     &#10;    setfillstyle('gradient', 'linear', 2, 0, 0, 0, 16)&#10;    addgradcolors(unpack(HUD_Colors.EntryValueBackground))&#10;    drawroundrect(130, 24 + 1 * 18, 110, 15, 2, 2)&#10;    drawtext(MMS.Version, 136, 24 + 1 * 18 + 15 / 2 - StringHeight * 0.5 + 1)&#10;    &#10;    YPosition = 22 + 2 * 19&#10;end&#10;&#10;for SectionIndex, Section in ipairs(HUD_Sections) do&#10;    setfontsize(8)&#10;&#10;    local StringWidth, StringHeight = measurestring('TEMP')&#10;&#10;    setfillstyle('gradient', 'linear', 2, 0, 0, 0, 21)&#10;    addgradcolors(unpack(HUD_Colors.SectionHeaderBackground))&#10;    drawroundrect(0, YPosition + (SectionRow * 23) + (SectionItemsRow * 19), 240, 20, 2, 2)&#10;    drawtext(Section.Name, 6, YPosition + (SectionRow * 23) + (SectionItemsRow * 19) + 20 / 2 - StringHeight * 0.5 + 1)&#10;&#10;    setfillstyle('gradient', 'linear', 2, 0, 0, 0, 21)&#10;    if (Section.State) then&#10;        addgradcolors(unpack(HUD_Colors.EntryValueEnabledBackground))&#10;    else&#10;        addgradcolors(unpack(HUD_Colors.EntryValueDisabledBackground))&#10;    end&#10;    Section.StateSwitch = drawroundrect(220, YPosition + (SectionRow * 23) + (SectionItemsRow * 19), 20, 20, 2, 2)&#10;    drawtext('X', 228, YPosition + (SectionRow * 23) + (SectionItemsRow * 19) + 20 / 2 - StringHeight * 0.5 + 1)&#10;&#10;    SectionRow = SectionRow + 1&#10;&#10;    if (Section.State) then&#10;        setfontsize(7)&#10;&#10;        local StringWidth, StringHeight = measurestring('TEMP')&#10;&#10;        for SectionItemIndex, SectionItem in ipairs(Section.Items) do&#10;            setfillstyle('gradient', 'linear', 2, 0, 0, 0, 17)     &#10;            addgradcolors(unpack(HUD_Colors.EntryNameBackground))&#10;            drawroundrect(0, YPosition + (SectionRow * 23) + (SectionItemsRow * 19), 240, 16, 2, 2)&#10;            drawtext(SectionItem[1], 6, YPosition + (SectionRow * 23) + (SectionItemsRow * 19) + 16 / 2 - StringHeight * 0.5 + 1)&#10;&#10;            if (Section.Name == 'ENGINE STATES') then&#10;                local EngineCurrentState = SectionItem[2]()&#10;&#10;                setfillstyle('gradient', 'linear', 2, 0, 0, 0, 17)&#10;                if (EngineCurrentState == 'yes') then&#10;                    addgradcolors(unpack(HUD_Colors.EntryValueEnabledBackground))&#10;                else&#10;                    addgradcolors(unpack(HUD_Colors.EntryValueDisabledBackground))&#10;                end&#10;                HUD_Sections[SectionIndex].Items[SectionItemIndex][4] = drawroundrect(130, YPosition + (SectionRow * 23) + (SectionItemsRow * 19), 110, 16, 2, 2)&#10;&#10;&#10;                drawtext((EngineCurrentState == 'yes' and ('On')) or ('Off'), 136, YPosition + (SectionRow * 23) + (SectionItemsRow * 19) + 16 / 2 - StringHeight * 0.5 + 1)&#10;            else&#10;                setfillstyle('gradient', 'linear', 2, 0, 0, 0, 17)&#10;                addgradcolors(unpack(HUD_Colors.EntryValueBackground))&#10;                drawroundrect(130, YPosition + (SectionRow * 23) + (SectionItemsRow * 19), 110, 16, 2, 2)&#10;                drawtext(SectionItem[2](), 136, YPosition + (SectionRow * 23) + (SectionItemsRow * 19) + 16 / 2 - StringHeight * 0.5 + 1)&#10;            end&#10;&#10;            SectionItemsRow = SectionItemsRow + 1&#10;        end&#10;    end&#10;end" enabled="yes" refreshRate="100"/>
            <HUDScript name="MonitorMyHunting" script="init start&#13;&#10;&#9;--&#13;&#10;&#9;--                        88                                                                  &#13;&#10;&#9;--                        &quot;&quot;                                                ,d                &#13;&#10;&#9;--                                                                          88                &#13;&#10;&#9;--             ,adPPYba,  88  8b,dPPYba,  88,dPYba,,adPYba,   ,adPPYYba,  MM88MMM  ,adPPYba,  &#13;&#10;&#9;--             I8[    &quot;&quot;  88  88P'   &quot;Y8  88P'   &quot;88&quot;    &quot;8a  &quot;&quot;     `Y8    88    a8P_____88  &#13;&#10;&#9;--              `&quot;Y8ba,   88  88          88      88      88  ,adPPPPP88    88    8PP&quot;&quot;&quot;&quot;&quot;&quot;&quot;  &#13;&#10;&#9;--             aa    ]8I  88  88          88      88      88  88,    ,88    88,   &quot;8b,   ,aa  &#13;&#10;&#9;--   Author:   `&quot;YbbdP&quot;'  88  88          88      88      88  `&quot;8bbdP&quot;Y8    &quot;Y888  `&quot;Ybbd8&quot;'  &#13;&#10;&#9;--   &#13;&#10;&#9;--   Monitor My Hunting!&#13;&#10;&#9;--&#13;&#10;&#9;--   Version: 1.0&#13;&#10;&#9;--   Created: 29.12.2013&#13;&#10;&#9;--   Last update: 29.12.2013&#13;&#10;&#9;--&#13;&#10;&#13;&#10;&#9;local MMH = {&#13;&#10;&#9;&#9;SHOW_ALL_ITEMS = false,&#13;&#10;&#9;&#9;SHOW_ALL_SUPPLIES = false,&#13;&#10;&#9;}&#13;&#10;&#13;&#10;&#9;-- [[ Do not change anything below this line. ]] --&#13;&#10;&#13;&#10;&#9;-- [[ COLORS ]] --&#13;&#10;&#9;MMH.COLORS = {}&#13;&#10;&#9;MMH.COLORS.FONT_COLOR = color(255, 255, 255, 0)&#13;&#10;&#9;MMH.COLORS.SECTION_HEADER_BACKGROUND = {0.0, color(36, 68, 105, 20), 0.23, color(39, 73, 114, 20), 0.76, color(21, 39, 60, 20)}&#13;&#10;&#9;MMH.COLORS.ENTRY_NAME_BACKGROUND = {0.0, color(75, 75, 75, 20), 0.23, color(45, 45, 45, 20), 0.76, color(19, 19, 19, 20)}&#13;&#10;&#9;MMH.COLORS.ENTRY_VALUE_BACKGROUND = {0.0, color(145, 95, 0, 20), 0.23, color(158, 104, 0, 20), 0.76, color(84, 55, 0, 20)}&#13;&#10;&#9;MMH.COLORS.RESULT_POSITIVE_BACKGROUND = {0.0, color(65, 96, 12, 20), 0.23, color(67, 99, 13, 20), 0.76, color(36, 52, 6, 20)}&#13;&#10;&#9;MMH.COLORS.RESULT_NEGATIVE_BACKGROUND = {0.0, color(90, 12, 15, 20), 0.23, color(98, 13, 17, 20), 0.76, color(52, 6, 9, 20)}&#13;&#10;&#9;MMH.COLORS.RESET_BUTTON_BACKGROUND = MMH.COLORS.RESULT_POSITIVE_BACKGROUND&#13;&#10;&#13;&#10;&#9;-- [[ ELEMENTS ]] --&#13;&#10;&#9;MMH.ELEMENTS = {}&#13;&#10;&#9;MMH.ELEMENTS.RESET_BUTTON = -1&#13;&#10;&#9;MMH.ELEMENTS.SWITCH_ITEMS_LOOTED = -1&#13;&#10;&#9;MMH.ELEMENTS.SWITCH_SUPPLIES_USED = -1&#13;&#10;&#13;&#10;&#9;-- [[ SECTION STATES ]] --&#13;&#10;&#9;MMH.SECTIONS = {}&#13;&#10;&#9;MMH.SECTIONS.ITEMS_LOOTED = true&#13;&#10;&#9;MMH.SECTIONS.SUPPLIES_USED = true&#13;&#10;&#13;&#10;&#9;-- [[ OTHERS ]] --&#9;&#13;&#10;&#9;filterinput(false, true, false, false)&#13;&#10;&#13;&#10;&#9;local MOVING, TEMP, MOVED = false, {0, 0}, {0, 0}&#13;&#10;&#13;&#10;&#9;function inputevents(e)&#13;&#10;&#9;&#9;if (e.type == IEVENT_LMOUSEDOWN) then&#13;&#10;&#9;&#9;&#9;if (e.elementid == MMH.ELEMENTS.RESET_BUTTON) then&#13;&#10;&#9;&#9;&#9;&#9;resetcharactertime()&#13;&#10;&#9;&#9;&#9;&#9;resetlootcounter()&#13;&#10;&#9;&#9;&#9;&#9;resetexpcounter()&#13;&#10;&#9;&#9;&#9;elseif (e.elementid == MMH.ELEMENTS.SWITCH_ITEMS_LOOTED) then&#13;&#10;&#9;&#9;&#9;&#9;MMH.SECTIONS.ITEMS_LOOTED = not MMH.SECTIONS.ITEMS_LOOTED&#13;&#10;&#9;&#9;&#9;elseif (e.elementid == MMH.ELEMENTS.SWITCH_SUPPLIES_USED) then&#13;&#10;&#9;&#9;&#9;&#9;MMH.SECTIONS.SUPPLIES_USED = not MMH.SECTIONS.SUPPLIES_USED&#13;&#10;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;end&#13;&#10;&#13;&#10;&#9;&#9;if (e.type == IEVENT_MMOUSEDOWN) then&#13;&#10;&#9;&#9;&#9;MOVING, TEMP = true, {$cursor.x - MOVED[1], $cursor.y - MOVED[2]}&#13;&#10;&#9;&#9;end&#13;&#10;&#13;&#10;&#9;&#9;if (e.type == IEVENT_MMOUSEUP) then&#13;&#10;&#9;&#9;&#9;MOVING = false&#13;&#10;&#9;&#9;end&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;setmaskcolorxp(0)&#13;&#10;init end&#13;&#10;&#13;&#10;if (MOVING) then&#13;&#10;    auto(10)&#13;&#10;    MOVED = {$cursor.x - TEMP[1], $cursor.y - TEMP[2]}&#13;&#10;end&#13;&#10;&#13;&#10;setposition($clientwin.right - 424 + MOVED[1], $worldwin.top + MOVED[2])&#13;&#10;setfontstyle('Tahoma', 8, 75, MMH.COLORS.FONT_COLOR, 1, color(0, 0, 0, 20))&#13;&#10;&#13;&#10;local ROW_QUANTITY, STRING_WIDTH, STRING_HEIGHT = 0, measurestring('TEMP')&#13;&#10;local ITEMS_LOOTED_WORTH, ITEM_LOOTED_QUANTITY, ITEM_LOOTED_WORTH = 0, 0, 0&#13;&#10;local SUPPLIES_USED_WORTH, SUPPLY_USED_QUANTITY, SUPPLY_USED_WORTH = 0, 0, 0&#13;&#10;&#13;&#10;setfillstyle('gradient', 'linear', 2, 0, 0, 0, 21)&#13;&#10;addgradcolors(unpack(MMH.COLORS.ENTRY_NAME_BACKGROUND))&#13;&#10;drawroundrect(0, 0, 240, 20, 2, 2)&#13;&#10;drawtext('Monitor My Hunting v1.0', 6, 20 / 2 - STRING_HEIGHT * 0.5)&#13;&#10;&#13;&#10;setfillstyle('gradient', 'linear', 2, 0, 0, 0, 21)&#13;&#10;addgradcolors(unpack(MMH.COLORS.RESET_BUTTON_BACKGROUND))&#13;&#10;MMH.ELEMENTS.RESET_BUTTON = drawroundrect(196, 0, 44, 20, 2, 2)&#13;&#10;drawtext('RESET', 202, 20 / 2 - STRING_HEIGHT * 0.5)&#13;&#10;&#13;&#10;setfontsize(7)&#13;&#10;&#13;&#10;STRING_WIDTH, STRING_HEIGHT = measurestring('TEMP')&#13;&#10;&#13;&#10;setfillstyle('gradient', 'linear', 2, 0, 0, 0, 16)&#13;&#10;addgradcolors(unpack(MMH.COLORS.ENTRY_NAME_BACKGROUND))&#13;&#10;drawroundrect(0, 23, 240, 15, 2, 2)&#13;&#10;drawtext('Looting Accuracy', 6, 23 + 15 / 2 - STRING_HEIGHT * 0.5 + 1)&#13;&#10;&#13;&#10;setfillstyle('gradient', 'linear', 2, 0, 0, 0, 16)&#13;&#10;addgradcolors(unpack(MMH.COLORS.ENTRY_VALUE_BACKGROUND))&#13;&#10;drawroundrect(130, 23, 110, 15, 2, 2)&#13;&#10;drawtext(string.format('%.2f', $lootaccuracy) .. '%', 136, 23 + 15 / 2 - STRING_HEIGHT * 0.5 + 1)&#13;&#10;&#13;&#10;setfontsize(8)&#13;&#10;&#13;&#10;STRING_WIDTH, STRING_HEIGHT = measurestring('TEMP')&#13;&#10;&#13;&#10;setfillstyle('gradient', 'linear', 2, 0, 0, 0, 21)&#13;&#10;addgradcolors(unpack(MMH.COLORS.SECTION_HEADER_BACKGROUND))&#13;&#10;drawroundrect(0, 41, 240, 20, 2, 2)&#13;&#10;drawtext('ITEMS LOOTED', 6, 41 + 20 / 2 - STRING_HEIGHT * 0.5)&#13;&#10;&#13;&#10;setfillstyle('gradient', 'linear', 2, 0, 0, 0, 21)&#13;&#10;if (MMH.SECTIONS.ITEMS_LOOTED) then&#13;&#10;&#9;addgradcolors(unpack(MMH.COLORS.RESULT_POSITIVE_BACKGROUND))&#13;&#10;else&#13;&#10;&#9;addgradcolors(unpack(MMH.COLORS.RESULT_NEGATIVE_BACKGROUND))&#13;&#10;end&#13;&#10;MMH.ELEMENTS.SWITCH_ITEMS_LOOTED = drawroundrect(220, 41, 20, 20, 2, 2)&#13;&#10;drawtext('X', 228, 41 + 20 / 2 - STRING_HEIGHT * 0.5)&#13;&#10;&#13;&#10;setfontsize(7)&#13;&#10;&#13;&#10;STRING_WIDTH, STRING_HEIGHT = measurestring('TEMP')&#13;&#10;&#13;&#10;foreach lootingitem ItemEntry do&#13;&#10;&#9;if (MMH.SHOW_ALL_ITEMS or ItemEntry.amountlooted &gt; 0) then&#13;&#10;&#9;&#9;ITEM_LOOTED_QUANTITY = ItemEntry.amountlooted&#13;&#10;&#9;&#9;ITEM_LOOTED_WORTH = ItemEntry.sellprice * ITEM_LOOTED_QUANTITY&#13;&#10;&#13;&#10;&#9;&#9;if (MMH.SECTIONS.ITEMS_LOOTED) then&#13;&#10;&#9;&#9;&#9;setfillstyle('gradient', 'linear', 2, 0, 0, 0, 16)&#13;&#10;&#9;&#9;&#9;addgradcolors(unpack(MMH.COLORS.ENTRY_NAME_BACKGROUND))&#13;&#10;&#9;&#9;&#9;drawroundrect(0, 64 + ROW_QUANTITY * 18, 240, 15, 2, 2)&#13;&#10;&#9;&#9;&#13;&#10;&#9;&#9;&#9;setcompositionmode(CompositionMode_SourceOver)&#13;&#10;&#9;&#9;&#9;drawitem(ItemEntry.id, 6, 64 + ROW_QUANTITY * 18, 50, 100)&#13;&#10;&#9;&#9;&#9;setcompositionmode(CompositionMode_Automatic)&#13;&#10;&#13;&#10;&#9;&#9;&#9;drawtext(((#ItemEntry.name &gt; 16 and string.match(string.sub(ItemEntry.name, 1, 16), '(.-)%s?$') .. '...') or ItemEntry.name):capitalizeall(), 28, 64 + ROW_QUANTITY * 18 + 15 / 2 - STRING_HEIGHT * 0.5)&#13;&#10;&#13;&#10;&#9;&#9;&#9;setfillstyle('gradient', 'linear', 2, 0, 0, 0, 16)&#13;&#10;&#9;&#9;&#9;addgradcolors(unpack(MMH.COLORS.ENTRY_VALUE_BACKGROUND))&#13;&#10;&#9;&#9;&#9;drawroundrect(130, 64 + ROW_QUANTITY * 18, 110, 15, 2, 2)&#13;&#10;&#9;&#9;&#9;drawtext(num(ITEM_LOOTED_QUANTITY) .. ' (' .. math.floor(ITEM_LOOTED_WORTH / 100) / 10 .. 'K)', 136, 64 + ROW_QUANTITY * 18 + 15 / 2 - STRING_HEIGHT * 0.5)&#13;&#10;&#13;&#10;&#9;&#9;&#9;ROW_QUANTITY = ROW_QUANTITY + 1&#13;&#10;&#9;&#9;end&#13;&#10;&#13;&#10;&#9;&#9;ITEMS_LOOTED_WORTH = ITEMS_LOOTED_WORTH + ITEM_LOOTED_WORTH&#13;&#10;&#9;end&#13;&#10;end&#13;&#10;&#13;&#10;setfillstyle('gradient', 'linear', 2, 0, 0, 0, 16)&#13;&#10;addgradcolors(unpack(MMH.COLORS.ENTRY_NAME_BACKGROUND))&#13;&#10;drawroundrect(0, 64 + ROW_QUANTITY * 18, 240, 15, 2, 2)&#13;&#10;drawtext('Total: ' .. num(ITEMS_LOOTED_WORTH) .. ' GPs', 6, 64 + ROW_QUANTITY * 18 + 15 / 2 - STRING_HEIGHT * 0.5)&#13;&#10;&#13;&#10;ROW_QUANTITY = ROW_QUANTITY + 1&#13;&#10;&#13;&#10;setfontsize(8)&#13;&#10;&#13;&#10;STRING_WIDTH, STRING_HEIGHT = measurestring('TEMP')&#13;&#10;&#13;&#10;setfillstyle('gradient', 'linear', 2, 0, 0, 0, 21)&#13;&#10;addgradcolors(unpack(MMH.COLORS.SECTION_HEADER_BACKGROUND))&#13;&#10;drawroundrect(0, 64 + ROW_QUANTITY * 18, 240, 20, 2, 2)&#13;&#10;drawtext('SUPPLIES USED', 6, 64 + ROW_QUANTITY * 18 + 20 / 2 - STRING_HEIGHT * 0.5)&#13;&#10;&#13;&#10;setfillstyle('gradient', 'linear', 2, 0, 0, 0, 21)&#13;&#10;if (MMH.SECTIONS.SUPPLIES_USED) then&#13;&#10;&#9;addgradcolors(unpack(MMH.COLORS.RESULT_POSITIVE_BACKGROUND))&#13;&#10;else&#13;&#10;&#9;addgradcolors(unpack(MMH.COLORS.RESULT_NEGATIVE_BACKGROUND))&#13;&#10;end&#13;&#10;MMH.ELEMENTS.SWITCH_SUPPLIES_USED = drawroundrect(220, 64 + ROW_QUANTITY * 18, 20, 20, 2, 2)&#13;&#10;drawtext('X', 228, 64 + ROW_QUANTITY * 18 + 20 / 2 - STRING_HEIGHT * 0.5)&#13;&#10;&#13;&#10;setfontsize(7)&#13;&#10;&#13;&#10;STRING_WIDTH, STRING_HEIGHT = measurestring('TEMP')&#13;&#10;&#13;&#10;foreach supplyitem ItemEntry do&#13;&#10;&#9;if (MMH.SHOW_ALL_SUPPLIES or ItemEntry.amountused &gt; 0) then&#13;&#10;&#9;&#9;SUPPLY_USED_QUANTITY = ItemEntry.amountused&#13;&#10;&#9;&#9;SUPPLY_USED_WORTH = ItemEntry.buyprice * SUPPLY_USED_QUANTITY&#13;&#10;&#13;&#10;&#9;&#9;if (MMH.SECTIONS.SUPPLIES_USED) then&#13;&#10;&#9;&#9;&#9;setfillstyle('gradient', 'linear', 2, 0, 0, 0, 16)&#13;&#10;&#9;&#9;&#9;addgradcolors(unpack(MMH.COLORS.ENTRY_NAME_BACKGROUND))&#13;&#10;&#9;&#9;&#9;drawroundrect(0, 87 + ROW_QUANTITY * 18, 240, 15, 2, 2)&#13;&#10;&#13;&#10;&#9;&#9;&#9;setcompositionmode(CompositionMode_SourceOver)&#13;&#10;&#9;&#9;&#9;drawitem(ItemEntry.id, 6, 87 + ROW_QUANTITY * 18, 50, 100)&#13;&#10;&#9;&#9;&#9;setcompositionmode(CompositionMode_Automatic)&#13;&#10;&#13;&#10;&#9;&#9;&#9;drawtext(((#ItemEntry.name &gt; 16 and string.match(string.sub(ItemEntry.name, 1, 16), '(.-)%s?$') .. '...') or ItemEntry.name):capitalizeall(), 28, 87 + ROW_QUANTITY * 18 + 15 / 2 - STRING_HEIGHT * 0.5)&#13;&#10;&#13;&#10;&#9;&#9;&#9;setfillstyle('gradient', 'linear', 2, 0, 0, 0, 16)&#13;&#10;&#9;&#9;&#9;addgradcolors(unpack(MMH.COLORS.ENTRY_VALUE_BACKGROUND))&#13;&#10;&#9;&#9;&#9;drawroundrect(130, 87 + ROW_QUANTITY * 18, 110, 15, 2, 2)&#13;&#10;&#9;&#9;&#9;drawtext(num(SUPPLY_USED_QUANTITY) .. ' (' .. math.floor(SUPPLY_USED_WORTH / 100) / 10 .. 'K)', 136, 87 + ROW_QUANTITY * 18 + 15 / 2 - STRING_HEIGHT * 0.5)&#13;&#10;&#13;&#10;&#9;&#9;&#9;ROW_QUANTITY = ROW_QUANTITY + 1&#13;&#10;&#9;&#9;end&#13;&#10;&#13;&#10;&#9;&#9;SUPPLIES_USED_WORTH = SUPPLIES_USED_WORTH + SUPPLY_USED_WORTH&#13;&#10;&#9;end&#13;&#10;end&#13;&#10;&#13;&#10;if (MMH.SECTIONS.SUPPLIES_USED) then&#13;&#10;&#9;setfillstyle('gradient', 'linear', 2, 0, 0, 0, 16)&#13;&#10;&#9;addgradcolors(unpack(MMH.COLORS.ENTRY_NAME_BACKGROUND))&#13;&#10;&#9;drawroundrect(0, 87 + ROW_QUANTITY * 18, 240, 15, 2, 2)&#13;&#10;&#13;&#10;&#9;setcompositionmode(CompositionMode_SourceOver)&#13;&#10;&#9;drawitem(3031, 6, 87 + ROW_QUANTITY * 18, 50, 100)&#13;&#10;&#9;setcompositionmode(CompositionMode_Automatic)&#13;&#10;&#13;&#10;&#9;drawtext('Money Spent', 28, 87 + ROW_QUANTITY * 18 + 15 / 2 - STRING_HEIGHT * 0.5)&#13;&#10;&#13;&#10;&#9;setfillstyle('gradient', 'linear', 2, 0, 0, 0, 16)&#13;&#10;&#9;addgradcolors(unpack(MMH.COLORS.ENTRY_VALUE_BACKGROUND))&#13;&#10;&#9;drawroundrect(130, 87 + ROW_QUANTITY * 18, 110, 15, 2, 2)&#13;&#10;&#9;drawtext(num($moneyspent) .. ' (' .. math.floor($moneyspent / 100) / 10 .. 'K)', 136, 87 + ROW_QUANTITY * 18 + 15 / 2 - STRING_HEIGHT * 0.5)&#13;&#10;&#13;&#10;&#9;ROW_QUANTITY = ROW_QUANTITY + 1&#13;&#10;end&#13;&#10;&#13;&#10;SUPPLIES_USED_WORTH = SUPPLIES_USED_WORTH + $moneyspent&#13;&#10;&#13;&#10;setfillstyle('gradient', 'linear', 2, 0, 0, 0, 16)&#13;&#10;addgradcolors(unpack(MMH.COLORS.ENTRY_NAME_BACKGROUND))&#13;&#10;drawroundrect(0, 87 + ROW_QUANTITY * 18, 240, 15, 2, 2)&#13;&#10;drawtext('Total: ' .. num(SUPPLIES_USED_WORTH) .. ' GPs', 6, 87 + ROW_QUANTITY * 18 + 15 / 2 - STRING_HEIGHT * 0.5)&#13;&#10;&#13;&#10;ROW_QUANTITY = ROW_QUANTITY + 1&#13;&#10;&#13;&#10;setfontsize(8)&#13;&#10;&#13;&#10;STRING_WIDTH, STRING_HEIGHT = measurestring('TEMP')&#13;&#10;&#13;&#10;setfillstyle('gradient', 'linear', 2, 0, 0, 0, 21)&#13;&#10;if (ITEMS_LOOTED_WORTH &gt;= SUPPLIES_USED_WORTH) then&#13;&#10;&#9;addgradcolors(unpack(MMH.COLORS.RESULT_POSITIVE_BACKGROUND))&#13;&#10;else&#13;&#10;&#9;addgradcolors(unpack(MMH.COLORS.RESULT_NEGATIVE_BACKGROUND))&#13;&#10;end&#13;&#10;drawroundrect(0, 87 + ROW_QUANTITY * 18, 240, 20, 2, 2)&#13;&#10;drawtext(((ITEMS_LOOTED_WORTH &gt;= SUPPLIES_USED_WORTH and ('PROFIT: ')) or ('WASTE: ')) .. num(ITEMS_LOOTED_WORTH - SUPPLIES_USED_WORTH) .. ' GPs (' .. math.abs(math.floor(((ITEMS_LOOTED_WORTH - SUPPLIES_USED_WORTH) * 3600) / ($charactertime / 1000) / 100) / 10) .. ' k/h)', 6, 87 + ROW_QUANTITY * 18 + 20 / 2 - STRING_HEIGHT * 0.5)" enabled="yes" refreshRate="100"/>
            <HUDScript name="ShowWaypoints" script="init start&#10;&#9;-- local SCRIPT_VERSION = '1.2.1'&#10;&#10;&#9;local waypointColors = {&#10;&#9;&#9;walk    = 0xAAF200,&#10;&#9;&#9;node    = 0x2A0736,&#10;&#9;&#9;stand   = 0x00AACC,&#10;&#9;&#9;shovel  = 0xEB8540,&#10;&#9;&#9;rope    = 0xFFCC00,&#10;&#9;&#9;machete = 0x003366,&#10;&#9;&#9;ladder  = 0xC55186,&#10;&#9;&#9;use     = 0x36693E,&#10;&#9;&#9;action  = 0x00FFFF,&#10;&#9;&#9;lure    = 0xCCCCCC&#10;&#9;}&#10;&#10;&#9;local function deleteWaypointCall(menu)&#10;&#9;&#9;removewaypoint(menu.waypointID)&#10;&#9;end&#10;&#10;&#9;local function moveWaypointName()&#10;&#9;&#9;if resizedWpt == nil then&#10;&#9;&#9;&#9;return tern(draggedWpt == nil, 'Move Waypoint', 'Stop Moving')&#10;&#9;&#9;end&#10;&#9;end&#10;&#10;&#9;local function moveWaypointCall(menu)&#10;&#9;&#9;if draggedWpt == nil then&#10;&#9;&#9;&#9;draggedWpt = menu.waypoint&#10;&#9;&#9;else&#10;&#9;&#9;&#9;draggedWpt = nil&#10;&#9;&#9;end&#10;&#9;end&#10;&#10;&#9;local function resizeWaypointName()&#10;&#9;&#9;if draggedWpt == nil then&#10;&#9;&#9;&#9;return tern(resizedWpt == nil, 'Resize Waypoint', 'Stop Resizing')&#10;&#9;&#9;end&#10;&#9;end&#10;&#10;&#9;local function resizeWaypointCall(menu)&#10;&#9;&#9;if resizedWpt == nil then&#10;&#9;&#9;&#9;resizedWpt = menu.waypoint&#10;&#9;&#9;else&#10;&#9;&#9;&#9;resizedWpt = nil&#10;&#9;&#9;end&#10;&#9;end&#10;&#10;&#9;registermessagehandler('contextMenu_waypoint', moveWaypointName, moveWaypointCall)&#10;&#9;registermessagehandler('contextMenu_waypoint', resizeWaypointName, resizeWaypointCall)&#10;&#9;registermessagehandler('contextMenu_waypoint', 'Delete Waypoint', deleteWaypointCall)&#10;&#9;registermessagehandler('contextMenu_waypoint', MENU_SEPARATOR, nil)&#10;&#10;&#9;local xOffset, yOffset, worldWidth, worldHeight, x, y, z, topLeftTilePos,&#10;&#9;      botRightTilePos, width, height, text, label&#10;&#9;local waypointRect = {}&#10;&#10;&#9;function gettilepos(x, y, z)&#10;&#9;&#9;local tile = getobjectarea(x, y, z)&#10;&#10;&#9;&#9;if tile == nil then&#10;&#9;&#9;&#9;local xDiff, yDiff = x - $posx, y - $posy&#10;&#9;&#9;&#9;if math.abs($posx - x) &lt;= 7 then&#10;&#9;&#9;&#9;&#9;tile = getobjectarea(x, $posy, $posz)&#10;&#9;&#9;&#9;&#9;xDiff = 0&#10;&#9;&#9;&#9;elseif math.abs($posy - y) &lt;= 5 then&#10;&#9;&#9;&#9;&#9;tile = getobjectarea($posx, y, $posz)&#10;&#9;&#9;&#9;&#9;yDiff = 0&#10;&#9;&#9;&#9;else&#10;&#9;&#9;&#9;&#9;tile = getobjectarea($posx, $posy, $posz)&#10;&#9;&#9;&#9;end&#10;&#10;&#9;&#9;&#9;-- Some strange stuff happens when you go from 0 to -1, so I'm&#10;&#9;&#9;&#9;-- adding this as a precaution.&#10;&#9;&#9;&#9;if tile ~= nil then&#10;&#9;&#9;&#9;&#9;local width, height = $worldwin.width, $worldwin.height&#10;&#10;&#9;&#9;&#9;&#9;tile.left    = tile.left    + (width * xDiff)&#10;&#9;&#9;&#9;&#9;tile.right   = tile.right   + (width * xDiff)&#10;&#9;&#9;&#9;&#9;tile.centerx = tile.centerx + (width * xDiff)&#10;&#9;&#9;&#9;&#9;tile.top     = tile.top     + (height * yDiff)&#10;&#9;&#9;&#9;&#9;tile.bottom  = tile.bottom  + (height * yDiff)&#10;&#9;&#9;&#9;&#9;tile.centery = tile.centery + (height * yDiff)&#10;&#9;&#9;&#9;end&#10;&#9;&#9;end&#10;&#10;&#9;&#9;return tile&#10;&#9;end&#10;&#10;&#9;useworldhud()&#10;init end&#10;&#10;setfontstyle('Tahoma', 7, 75, 0xFFFFFF, 1, 0x000000)&#10;&#10;xOffset, yOffset = $worldwin.left - $clientwin.left, $worldwin.top - $clientwin.top&#10;worldWidth, worldHeight = $worldwin.right - $worldwin.left - 2, $worldwin.bottom - $worldwin.top - 2&#10;&#10;local i = 0&#10;foreach settingsentry e 'Cavebot/Waypoints' do&#10;&#9;x, y, z = getsetting(e, 'Coordinates'):match(REGEX_SPA_COORDS)&#10;&#9;x, y, z = tonumber(x), tonumber(y), tonumber(z)&#10;&#10;&#9;if z == $posz then&#10;&#9;&#9;width, height = getsetting(e, 'Range'):match(REGEX_SPA_SIZE)&#10;&#9;&#9;width, height = tonumber(width), tonumber(height)&#10;&#10;&#9;&#9;topLeftTilePos = gettilepos(x, y, z)&#10;&#9;&#9;botRightTilePos = gettilepos(x + width - 1, y + height - 1, z)&#10;&#10;&#9;&#9;if topLeftTilePos and botRightTilePos then&#10;&#9;&#9;&#9;waypointRect.left   = math.max(topLeftTilePos.left  , 0)&#10;&#9;&#9;&#9;waypointRect.top    = math.max(topLeftTilePos.top   , 0)&#10;&#9;&#9;&#9;waypointRect.right  = math.min(botRightTilePos.right , worldWidth)&#10;&#9;&#9;&#9;waypointRect.bottom = math.min(botRightTilePos.bottom, worldHeight)&#10;&#9;&#9;&#9;waypointRect.width  = waypointRect.right - waypointRect.left&#10;&#9;&#9;&#9;waypointRect.height = waypointRect.bottom - waypointRect.top&#10;&#10;&#9;&#9;&#9;if waypointRect.width &gt; 0 and waypointRect.height &gt; 0 then&#10;&#9;&#9;&#9;&#9;label = getsetting(e, 'Label')&#10;&#9;&#9;&#9;&#9;text = tern(#label == 0, tostring(i), label .. ' (' .. i .. ')')&#10;&#9;&#9;&#9;&#9;wptType = getsetting(e, 'Type')&#10;&#10;&#9;&#9;&#9;&#9;setfillstyle('color', (waypointColors[wptType:lower()] or 0) + (math.floor(2.55*50)*16777216))&#10;&#9;&#9;&#9;&#9;drawroundrect(&#10;&#9;&#9;&#9;&#9;&#9;waypointRect.left,&#10;&#9;&#9;&#9;&#9;&#9;waypointRect.top,&#10;&#9;&#9;&#9;&#9;&#9;waypointRect.width,&#10;&#9;&#9;&#9;&#9;&#9;waypointRect.height,&#10;&#9;&#9;&#9;&#9;&#9;10, 10&#10;&#9;&#9;&#9;&#9;)&#10;&#10;&#9;&#9;&#9;&#9;if waypointRect.width &gt; 10 then&#10;&#9;&#9;&#9;&#9;&#9;drawtext(&#10;&#9;&#9;&#9;&#9;&#9;&#9;string.fit(text, waypointRect.width - 10, '...', true),&#10;&#9;&#9;&#9;&#9;&#9;&#9;waypointRect.left + 5,&#10;&#9;&#9;&#9;&#9;&#9;&#9;waypointRect.top + 3&#10;&#9;&#9;&#9;&#9;&#9;)&#10;&#9;&#9;&#9;&#9;&#9;drawtext(&#10;&#9;&#9;&#9;&#9;&#9;&#9;string.fit(wptType, waypointRect.width - 10, '...', true),&#10;&#9;&#9;&#9;&#9;&#9;&#9;waypointRect.left + 5,&#10;&#9;&#9;&#9;&#9;&#9;&#9;waypointRect.top + 15&#10;&#9;&#9;&#9;&#9;&#9;)&#10;&#9;&#9;&#9;&#9;end&#10;&#9;&#9;&#9;end&#10;&#9;&#9;end&#10;&#9;end&#10;&#10;&#9;i = i + 1&#10;end&#10;&#10;if contextmenuinfo() == nil then&#10;&#9;if draggedWpt then&#10;&#9;&#9;set(draggedWpt, 'Coordinates', string.format('x:%i, y:%i, z:%i', $cursorinfo.x, $cursorinfo.y, $cursorinfo.z))&#10;&#9;elseif resizedWpt then&#10;&#9;&#9;local x, y = get(resizedWpt, 'Coordinates'):match(REGEX_COORDS)&#10;&#9;&#9;x, y = tonumber(x), tonumber(y)&#10;&#10;&#9;&#9;set(resizedWpt, 'Range', string.format('%i x %i', math.max(1, 1 + ($cursorinfo.x - x)) , math.max(1, 1 + ($cursorinfo.y - y))))&#10;&#9;end&#10;end" enabled="yes" refreshRate="100"/>
        </HUDScripts>
    </HUDs>
    <GeneralSettings>
        <Input>
            <MouseOption mouseMode="Simulate Mouse"/>
            <MouseOption scrollMode="Use mouse wheel"/>
            <MouseOption stuckCursorPolicy="If Cavebot on, Release Instantly"/>
            <MouseOption moveSpeed="Instantaneous"/>
            <MouseOption clickWaitMin="30" clickWaitMax="60"/>
            <KeyboardOption keyboardMode="Simulate Keyboard"/>
            <KeyboardOption stuckCtrlShiftPolicy="If Cavebot on, Release Instantly"/>
            <KeyboardOption typeWaitMin="30" typeWaitMax="60"/>
            <KeyboardOption pressWaitMin="30" pressWaitMax="60"/>
            <FocusOption focusPolicy="Don't auto-focus"/>
            <FocusOption openMenuPolicy="Confirm if cavebotting"/>
        </Input>
    </GeneralSettings>
    <Alerts disableSounds="no">
        <alert name="Player On Screen" playSound="no" pauseBot="no" logout="no" safeList="&lt;SafeList&gt;&#10;"/>
        <alert name="Player Attacking" playSound="yes" pauseBot="no" logout="no" safeList="&lt;SafeList&gt;&#10;"/>
        <alert name="Monster Attacking" playSound="no" pauseBot="no" logout="no" safeList="&lt;SafeList&gt;&#10;"/>
        <alert name="Private Message" playSound="no" pauseBot="no" logout="no" safeList="&lt;SafeList&gt;&#10;"/>
        <alert name="Default Message" playSound="no" pauseBot="no" logout="no" safeList="&lt;SafeList&gt;&#10;"/>
        <alert name="GM Detected" playSound="yes" pauseBot="no" logout="no"/>
        <alert name="Disconnected" playSound="yes" pauseBot="no" logout="no"/>
        <alert name="Character Stuck" playSound="no" pauseBot="no" logout="no" standTime="30000"/>
        <alert name="Health Below" playSound="no" pauseBot="no" logout="no" healthPercent="50"/>
        <alert name="Mana Below" playSound="no" pauseBot="no" logout="no" manaPercent="50"/>
        <alert name="Unjust Kill" playSound="no" pauseBot="no" logout="no"/>
        <alert name="Enemies Online" playSound="no" pauseBot="no" logout="no" enemiesCount="50"/>
    </Alerts>
    <Cavebot enabled="yes">
        <Options>
            <Option shovel="3457"/>
            <Option rope="3003"/>
            <Option machete="3308"/>
            <Option pick="3456"/>
            <Option nodeRange="4"/>
            <Option pauseBotOnDeath="yes"/>
            <Option refillAmmo="yes" refillAmmoMin="30" refillAmmoMax="70"/>
            <Option autoMount="no"/>
            <Option fireAvoidanceMin="15" fireAvoidanceMax="20"/>
            <Option energyAvoidanceMin="15" energyAvoidanceMax="20"/>
            <Option poisonAvoidanceMin="15" poisonAvoidanceMax="20"/>
            <Option walkThroughPlayers="yes"/>
            <Option walkMethod="Walk With Arrow Keys"/>
            <Option walkableItems=""/>
            <Option mapWalkDistMin="20" mapWalkDistMax="30"/>
            <Option userOptionsScript="{&#10;&#9;&quot;type&quot; : &quot;scriptinfo&quot;,&#10;&#9;&quot;name&quot; : &quot;Alfa Scripts&quot;,&#10;&#9;&quot;version&quot; : &quot;1.0.0&quot;&#10;},&#10;{&#10;  &quot;type&quot; : &quot;group&quot;,&#10;  &quot;name&quot; : &quot;Alfa Scripts Hunting Setup&quot;,&#10;  &quot;children&quot; : &#10;[&#10;  {&#10;  &quot;type&quot; : &quot;lineedit&quot;,&#10;  &quot;name&quot; : &quot;Cap&quot;,&#10;  &quot;text&quot; : &quot;Min Cap&quot;,&#10;  &quot;value&quot; : &quot;0&quot;&#10;  }&#10;  &#10;]&#10;},&#10;&#10;{&#10; &quot;type&quot;    : &quot;group&quot;,&#10; &quot;name&quot;    : &quot;Alfa Scripts Supplies&quot;,&#10; &quot;row&quot;  : 2,&#10; &quot;children&quot;: [&#10;  {&#10;  &quot;type&quot; : &quot;combobox&quot;,&#10;  &quot;name&quot; : &quot;MP&quot;,&#10;  &quot;text&quot; : &quot;Mana Pot&quot;,&#10;  &quot;items&quot; : [&quot;Mana Potion&quot;, &quot;Health Potion&quot;]&#10;  },&#10;  {&#10;  &quot;type&quot; : &quot;lineedit&quot;,&#10;  &quot;name&quot; : &quot;minMP&quot;,&#10;  &quot;text&quot; : &quot;Min Mana Pots&quot;,&#10;  &quot;value&quot; : &quot;50&quot;&#10;  },&#10;  {&#10;  &quot;type&quot; : &quot;lineedit&quot;,&#10;  &quot;name&quot; : &quot;maxMP&quot;,&#10;  &quot;text&quot; : &quot;Max Mana Pots&quot;,&#10;  &quot;value&quot; : &quot;450&quot;&#10;  }&#10; ]&#10;}"/>
        </Options>
        <SpecialAreas/>
        <CavebotScripts/>
        <WaypointSection name="CITY">
            <Waypoint type="Action" x="32333" y="31781" z="7" rangeX="1" rangeY="1" label="BP Opener" script="while windowcount() &lt; 1 do&#10;closewindows()&#10;openitem(0, 'back')&#10;wait(500,1000)&#10;resizewindows(0)&#10;end"/>
            <Waypoint type="Action" x="32333" y="31781" z="7" rangeX="1" rangeY="1" label="POS Starter" script="if $posz ~= $wptz&#10;then&#10;&#9;gotolabel(0 , &quot;viaFolda&quot;)&#10;end"/>
            <Waypoint type="Stand" x="32326" y="31782" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Action" x="32327" y="31782" z="7" rangeX="1" rangeY="1" label="BANK" script="if islocation(2)&#10;then&#10;depositerbank('a')&#10;wait(1000,2500)&#10;end"/>
            <Waypoint type="Stand" x="32328" y="31789" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32331" y="31801" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32331" y="31814" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32341" y="31818" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32350" y="31826" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32345" y="31828" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Action" x="32345" y="31828" z="7" rangeX="1" rangeY="1" label="POT SHOP" script="minimizewindows('equip')&#10;resupply(&quot;a&quot;)&#10;wait(350, 450)&#10;restorewindows('equip')"/>
            <Waypoint type="Stand" x="32350" y="31822" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32340" y="31811" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32340" y="31794" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32329" y="31789" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Action" x="32329" y="31789" z="7" rangeX="1" rangeY="1" label="viaFolda" script="if not needresupply(cap, 'a') then&#10;&#9;gotolabel(0, &quot;viaFolda&quot;)&#10;end"/>
        </WaypointSection>
        <WaypointSection name="viaFolda">
            <Waypoint type="Stand" x="32321" y="31789" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32295" y="31790" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32286" y="31783" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32287" y="31768" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32287" y="31747" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32282" y="31731" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32264" y="31723" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32249" y="31719" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32245" y="31706" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32245" y="31688" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32238" y="31674" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Action" x="32238" y="31674" z="7" rangeX="1" rangeY="1" label="BOAT" script="if not islocation(2) then&#10;&#9;gotolabel(0)&#10;else&#10;&#9;travel(&quot;folda&quot;)&#10;&#9;&#9;wait(500, 800)&#10;end"/>
            <Waypoint type="Stand" x="32046" y="31580" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Action" x="32046" y="31580" z="7" rangeX="1" rangeY="1" label="POS" script="if islocation(2)&#10;then&#10;gotolabel(0, &quot;Folda&quot;)&#10;end"/>
        </WaypointSection>
        <WaypointSection name="Folda">
            <Waypoint type="Stand" x="32038" y="31574" z="7" rangeX="1" rangeY="1" label="atFOLDA"/>
            <Waypoint type="Stand" x="32028" y="31573" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32025" y="31584" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32023" y="31595" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32022" y="31601" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Shovel" x="32022" y="31602" z="7" rangeX="1" rangeY="1" label="PALA"/>
            <Waypoint type="Stand" x="32020" y="31602" z="8" rangeX="1" rangeY="1"/>
            <Waypoint type="Action" x="32020" y="31602" z="8" rangeX="1" rangeY="1" label="POS" script="if ($posz ~= $wptz) then&#10;&#9;gotolabel(0)&#10;end"/>
            <Waypoint type="Stand" x="32014" y="31600" z="8" rangeX="1" rangeY="1" label="ok1"/>
            <Waypoint type="Stand" x="32002" y="31592" z="8" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="31985" y="31589" z="8" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="31985" y="31576" z="8" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32000" y="31567" z="8" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32008" y="31560" z="8" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32028" y="31555" z="8" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="32029" y="31546" z="8" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32028" y="31539" z="8" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32027" y="31538" z="9" rangeX="1" rangeY="1"/>
            <Waypoint type="Action" x="32027" y="31538" z="9" rangeX="1" rangeY="1" label="POS" script="if ($posz ~= $wptz) then&#10;&#9;gotolabel(&quot;ok1&quot;)&#10;else&#10;&#9;gotolabel(0, &quot;HUNTING&quot;)&#10;end"/>
        </WaypointSection>
        <WaypointSection name="HUNTING">
            <Waypoint type="Action" x="32020" y="31550" z="9" rangeX="1" rangeY="1" label="BP Opener" script="while windowcount() &lt; 1 do&#10;closewindows()&#10;openitem(0, 'back')&#10;wait(500,1000)&#10;resizewindows(0)&#10;end"/>
            <Waypoint type="Action" x="32020" y="31550" z="9" rangeX="1" rangeY="1" label="CHECK" script="local findbp = getcontainer('1')&#10;&#10;if(findbp.itemcount == findbp.maxcount) then&#10;&#9;--do something if backpack full&#10;&#9;gotolabel(0, &quot;viaREFILL&quot;)&#10;else&#10;&#9;--do something if backpack not full&#10;&#10;end&#10;&#10;if needresupply(cap, 'a') &#10;then&#10;&#9;gotolabel(&quot;viaREFILL&quot;)&#10;end"/>
            <Waypoint type="Stand" x="32030" y="31538" z="9" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32017" y="31548" z="9" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32045" y="31544" z="9" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32062" y="31542" z="9" rangeX="1" rangeY="1" label="BIG TROLL ROOM"/>
            <Waypoint type="Stand" x="32045" y="31544" z="9" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32045" y="31544" z="9" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32031" y="31564" z="9" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32056" y="31577" z="9" rangeX="1" rangeY="1" label="rots"/>
            <Waypoint type="Stand" x="32071" y="31601" z="9" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32076" y="31603" z="9" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32094" y="31613" z="9" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32112" y="31635" z="9" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32134" y="31649" z="9" rangeX="1" rangeY="1"/>
            <Waypoint type="Action" x="32134" y="31649" z="9" rangeX="1" rangeY="1" label="CHECK" script="local findbp = getcontainer('1')&#10;&#10;if(findbp.itemcount == findbp.maxcount) then&#10;&#9;--do something if backpack full&#10;&#9;gotolabel(0, &quot;viaREFILL&quot;)&#10;else&#10;&#9;--do something if backpack not full&#10;&#10;end&#10;&#10;if needresupply(cap, 'a') &#10;then&#10;&#9;gotolabel(&quot;viaREFILL&quot;)&#10;end"/>
            <Waypoint type="Stand" x="32134" y="31677" z="9" rangeX="1" rangeY="1" label="minos"/>
            <Waypoint type="Stand" x="32148" y="31672" z="9" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32185" y="31714" z="9" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32221" y="31718" z="9" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32221" y="31701" z="9" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32214" y="31682" z="9" rangeX="1" rangeY="1" label="slime"/>
            <Waypoint type="Stand" x="32181" y="31675" z="9" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32179" y="31654" z="9" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32172" y="31637" z="9" rangeX="1" rangeY="1" label="rots"/>
            <Waypoint type="Stand" x="32220" y="31638" z="9" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32216" y="31625" z="9" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32213" y="31608" z="9" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32192" y="31595" z="9" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32184" y="31559" z="9" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32169" y="31546" z="9" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32164" y="31530" z="9" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="32158" y="31522" z="9" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="32147" y="31521" z="9" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="32137" y="31521" z="9" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="32126" y="31521" z="9" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32119" y="31525" z="9" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32107" y="31528" z="9" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="32103" y="31534" z="9" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="32093" y="31537" z="9" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="32085" y="31532" z="9" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32084" y="31530" z="9" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="32072" y="31529" z="9" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="32063" y="31529" z="9" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="32055" y="31530" z="9" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="32045" y="31530" z="9" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="32036" y="31530" z="9" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32032" y="31534" z="9" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32032" y="31534" z="9" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32028" y="31539" z="9" rangeX="1" rangeY="1" label="viaREFILL"/>
            <Waypoint type="Action" x="32028" y="31539" z="9" rangeX="1" rangeY="1" label="CHECK" script="local findbp = getcontainer('1')&#10;&#10;if(findbp.itemcount == findbp.maxcount) then&#10;&#9;--do something if backpack full&#10;&#9;gotolabel(0, &quot;viaREFILL&quot;)&#10;else&#10;&#9;--do something if backpack not full&#10;&#10;end&#10;if needresupply(cap, 'a') &#10;then&#10;&#9;gotolabel(0, &quot;viaREFILL&quot;)&#10;end"/>
        </WaypointSection>
        <WaypointSection name="viaREFILL">
            <Waypoint type="Stand" x="32028" y="31536" z="9" rangeX="1" rangeY="1"/>
            <Waypoint type="Ladder" x="32028" y="31539" z="9" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32028" y="31554" z="8" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32015" y="31561" z="8" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32008" y="31559" z="8" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32001" y="31560" z="8" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="31999" y="31565" z="8" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="31998" y="31570" z="8" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32007" y="31570" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32025" y="31573" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32040" y="31573" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32045" y="31577" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Action" x="32045" y="31577" z="7" rangeX="1" rangeY="1" label="POS" script="if not islocation(2) then&#10;&#9;gotolabel(0)&#10;end"/>
            <Waypoint type="Action" x="32048" y="31577" z="7" rangeX="1" rangeY="1" label="Svenson" script="travel(&quot;tibia&quot;)&#10;wait(400,800)"/>
            <Waypoint type="Stand" x="32242" y="31674" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32261" y="31678" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32273" y="31680" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32281" y="31695" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32285" y="31712" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32285" y="31726" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32288" y="31744" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32288" y="31763" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32286" y="31783" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32303" y="31789" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32328" y="31785" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Action" x="32328" y="31785" z="7" rangeX="1" rangeY="1" label="POS" script="if islocation(2)&#10;then&#10;gotolabel(0, &quot;CITY&quot;)&#10;end"/>
        </WaypointSection>
    </Cavebot>
    <Looting enabled="yes">
        <Options>
            <Option range="10"/>
            <Option moveItemsQuickly="yes"/>
            <Option eatFoodFromCorpse="yes"/>
            <Option openNextBP="yes"/>
            <Option openBPsAtLogin="yes"/>
            <Option valuableBodies="3000"/>
            <Option ultraValuableBodies="50000"/>
            <Option alertOnValuableBodies="no"/>
            <Option openValuableBodiesOnly="no"/>
            <Option openUltraValuableBodiesImmediately="no"/>
            <Option policy="Smart Looting"/>
            <LootingDestinations>
                <lootingDestination name="mainbp" destination="'0'"/>
                <lootingDestination name="dpbp" destination="'2'"/>
                <lootingDestination name="raredp" destination="'1'"/>
                <lootingDestination name="stackdp" destination="'2'"/>
            </LootingDestinations>
        </Options>
        <LootingProfile name="LootList" isCurrentProfile="yes">
            <LootItem name="gold coin" id="3031" sellPrice="1" weight="0.10" destinationName="raredp" action="Loot" lootCondition="Has Cap to Loot" itemCategory="" alertOnDrop="no" alertOnMiss="no"/>
        </LootingProfile>
    </Looting>
    <Supplies>
        <Options>
            <Option defaultBackpack=""/>
            <Option extraCashMin="0" extraCashMax="100"/>
            <Option autoSwitchProfiles="no"/>
        </Options>
        <SupplyProfile name="SupplyList" vocation="Knight" level="37" isCurrentProfile="yes">
            <SupplyItem name="health potion" id="266" buyPrice="45" weight="2.70" leaveCaveAt="2" rule="Up to..." ruleValue="10" destinationName="mainbp" category="a"/>
            <SupplyItem name="mana potion" id="268" buyPrice="50" weight="2.70" leaveCaveAt="0" rule="Up to..." ruleValue="0" destinationName="mainbp" category="x"/>
        </SupplyProfile>
    </Supplies>
    <Targeting enabled="yes" allowDiagonalMovement="no" autoSwitchProfiles="no" nonPvPMode="no">
        <TargetingProfile name="TargetList" vocation="Knight" level="22" targetMustBeShootable="no" targetMustBeReachable="yes" isCurrentProfile="yes">
            <Priorities>
                <Priority health="20"/>
                <Priority proximity="30"/>
                <Priority danger="63"/>
                <Priority random="0"/>
                <Priority lure="30"/>
                <Priority stick="2"/>
            </Priorities>
            <Creatures>
                <Creature name="Minotaur Archer" amount="Any" category="" dontLoot="no" playAlarm="no" syncSpells="no">
                    <FightingSettings>
                        <Setting index="0" hpFrom="0" hpTo="100" danger="2" onlyIfTrapped="no" mustAttackMe="no" action="Attack" avoidance="No Avoidance" desiredStance="Reach" distance="3" attackMode="No Change" firstSpell="" secondSpell="" thirdSpell="" fourthSpell="" spamMin="300" spamMax="500"/>
                        <Setting index="1" hpFrom="0" hpTo="0" danger="0" onlyIfTrapped="no" mustAttackMe="no" action="Attack" avoidance="No Avoidance" desiredStance="No Movement" distance="3" attackMode="No Change" firstSpell="" secondSpell="" thirdSpell="" fourthSpell="" spamMin="300" spamMax="500"/>
                        <Setting index="2" hpFrom="0" hpTo="0" danger="0" onlyIfTrapped="no" mustAttackMe="no" action="Attack" avoidance="No Avoidance" desiredStance="No Movement" distance="3" attackMode="No Change" firstSpell="" secondSpell="" thirdSpell="" fourthSpell="" spamMin="300" spamMax="500"/>
                        <Setting index="3" hpFrom="0" hpTo="0" danger="0" onlyIfTrapped="no" mustAttackMe="no" action="Attack" avoidance="No Avoidance" desiredStance="No Movement" distance="3" attackMode="No Change" firstSpell="" secondSpell="" thirdSpell="" fourthSpell="" spamMin="300" spamMax="500"/>
                    </FightingSettings>
                </Creature>
                <Creature name="Rotworm" amount="Any" category="" dontLoot="no" playAlarm="no" syncSpells="no">
                    <FightingSettings>
                        <Setting index="0" hpFrom="0" hpTo="100" danger="0" onlyIfTrapped="no" mustAttackMe="no" action="Attack" avoidance="No Avoidance" desiredStance="Reach" distance="3" attackMode="No Change" firstSpell="" secondSpell="" thirdSpell="" fourthSpell="" spamMin="300" spamMax="500"/>
                        <Setting index="1" hpFrom="0" hpTo="0" danger="0" onlyIfTrapped="no" mustAttackMe="no" action="Attack" avoidance="No Avoidance" desiredStance="No Movement" distance="3" attackMode="No Change" firstSpell="" secondSpell="" thirdSpell="" fourthSpell="" spamMin="300" spamMax="500"/>
                        <Setting index="2" hpFrom="0" hpTo="0" danger="0" onlyIfTrapped="no" mustAttackMe="no" action="Attack" avoidance="No Avoidance" desiredStance="No Movement" distance="3" attackMode="No Change" firstSpell="" secondSpell="" thirdSpell="" fourthSpell="" spamMin="300" spamMax="500"/>
                        <Setting index="3" hpFrom="0" hpTo="0" danger="0" onlyIfTrapped="no" mustAttackMe="no" action="Attack" avoidance="No Avoidance" desiredStance="No Movement" distance="3" attackMode="No Change" firstSpell="" secondSpell="" thirdSpell="" fourthSpell="" spamMin="300" spamMax="500"/>
                    </FightingSettings>
                </Creature>
                <Creature name="Slime" amount="Any" category="" dontLoot="no" playAlarm="no" syncSpells="no">
                    <FightingSettings>
                        <Setting index="0" hpFrom="0" hpTo="100" danger="0" onlyIfTrapped="no" mustAttackMe="no" action="Attack" avoidance="No Avoidance" desiredStance="Reach" distance="3" attackMode="No Change" firstSpell="" secondSpell="" thirdSpell="" fourthSpell="" spamMin="300" spamMax="500"/>
                        <Setting index="1" hpFrom="0" hpTo="0" danger="0" onlyIfTrapped="no" mustAttackMe="no" action="Attack" avoidance="No Avoidance" desiredStance="No Movement" distance="3" attackMode="No Change" firstSpell="" secondSpell="" thirdSpell="" fourthSpell="" spamMin="300" spamMax="500"/>
                        <Setting index="2" hpFrom="0" hpTo="0" danger="0" onlyIfTrapped="no" mustAttackMe="no" action="Attack" avoidance="No Avoidance" desiredStance="No Movement" distance="3" attackMode="No Change" firstSpell="" secondSpell="" thirdSpell="" fourthSpell="" spamMin="300" spamMax="500"/>
                        <Setting index="3" hpFrom="0" hpTo="0" danger="0" onlyIfTrapped="no" mustAttackMe="no" action="Attack" avoidance="No Avoidance" desiredStance="No Movement" distance="3" attackMode="No Change" firstSpell="" secondSpell="" thirdSpell="" fourthSpell="" spamMin="300" spamMax="500"/>
                    </FightingSettings>
                </Creature>
                <Creature name="Minotaur" amount="Any" category="" dontLoot="no" playAlarm="no" syncSpells="no">
                    <FightingSettings>
                        <Setting index="0" hpFrom="0" hpTo="100" danger="0" onlyIfTrapped="no" mustAttackMe="no" action="Attack" avoidance="No Avoidance" desiredStance="Reach" distance="3" attackMode="No Change" firstSpell="" secondSpell="" thirdSpell="" fourthSpell="" spamMin="300" spamMax="500"/>
                        <Setting index="1" hpFrom="0" hpTo="0" danger="0" onlyIfTrapped="no" mustAttackMe="no" action="Attack" avoidance="No Avoidance" desiredStance="No Movement" distance="3" attackMode="No Change" firstSpell="" secondSpell="" thirdSpell="" fourthSpell="" spamMin="300" spamMax="500"/>
                        <Setting index="2" hpFrom="0" hpTo="0" danger="0" onlyIfTrapped="no" mustAttackMe="no" action="Attack" avoidance="No Avoidance" desiredStance="No Movement" distance="3" attackMode="No Change" firstSpell="" secondSpell="" thirdSpell="" fourthSpell="" spamMin="300" spamMax="500"/>
                        <Setting index="3" hpFrom="0" hpTo="0" danger="0" onlyIfTrapped="no" mustAttackMe="no" action="Attack" avoidance="No Avoidance" desiredStance="No Movement" distance="3" attackMode="No Change" firstSpell="" secondSpell="" thirdSpell="" fourthSpell="" spamMin="300" spamMax="500"/>
                    </FightingSettings>
                </Creature>
                <Creature name="Bug" amount="Any" category="" dontLoot="no" playAlarm="no" syncSpells="no">
                    <FightingSettings>
                        <Setting index="0" hpFrom="0" hpTo="100" danger="0" onlyIfTrapped="no" mustAttackMe="no" action="Attack" avoidance="No Avoidance" desiredStance="Reach" distance="3" attackMode="No Change" firstSpell="" secondSpell="" thirdSpell="" fourthSpell="" spamMin="300" spamMax="500"/>
                        <Setting index="1" hpFrom="0" hpTo="0" danger="0" onlyIfTrapped="no" mustAttackMe="no" action="Attack" avoidance="No Avoidance" desiredStance="No Movement" distance="3" attackMode="No Change" firstSpell="" secondSpell="" thirdSpell="" fourthSpell="" spamMin="300" spamMax="500"/>
                        <Setting index="2" hpFrom="0" hpTo="0" danger="0" onlyIfTrapped="no" mustAttackMe="no" action="Attack" avoidance="No Avoidance" desiredStance="No Movement" distance="3" attackMode="No Change" firstSpell="" secondSpell="" thirdSpell="" fourthSpell="" spamMin="300" spamMax="500"/>
                        <Setting index="3" hpFrom="0" hpTo="0" danger="0" onlyIfTrapped="no" mustAttackMe="no" action="Attack" avoidance="No Avoidance" desiredStance="No Movement" distance="3" attackMode="No Change" firstSpell="" secondSpell="" thirdSpell="" fourthSpell="" spamMin="300" spamMax="500"/>
                    </FightingSettings>
                </Creature>
                <Creature name="Poison Spider" amount="Any" category="" dontLoot="no" playAlarm="no" syncSpells="no">
                    <FightingSettings>
                        <Setting index="0" hpFrom="0" hpTo="100" danger="0" onlyIfTrapped="no" mustAttackMe="no" action="Attack" avoidance="No Avoidance" desiredStance="Reach" distance="3" attackMode="No Change" firstSpell="" secondSpell="" thirdSpell="" fourthSpell="" spamMin="300" spamMax="500"/>
                        <Setting index="1" hpFrom="0" hpTo="0" danger="0" onlyIfTrapped="no" mustAttackMe="no" action="Attack" avoidance="No Avoidance" desiredStance="No Movement" distance="3" attackMode="No Change" firstSpell="" secondSpell="" thirdSpell="" fourthSpell="" spamMin="300" spamMax="500"/>
                        <Setting index="2" hpFrom="0" hpTo="0" danger="0" onlyIfTrapped="no" mustAttackMe="no" action="Attack" avoidance="No Avoidance" desiredStance="No Movement" distance="3" attackMode="No Change" firstSpell="" secondSpell="" thirdSpell="" fourthSpell="" spamMin="300" spamMax="500"/>
                        <Setting index="3" hpFrom="0" hpTo="0" danger="0" onlyIfTrapped="no" mustAttackMe="no" action="Attack" avoidance="No Avoidance" desiredStance="No Movement" distance="3" attackMode="No Change" firstSpell="" secondSpell="" thirdSpell="" fourthSpell="" spamMin="300" spamMax="500"/>
                    </FightingSettings>
                </Creature>
                <Creature name="Frost Troll" amount="Any" category="" dontLoot="no" playAlarm="no" syncSpells="no">
                    <FightingSettings>
                        <Setting index="0" hpFrom="0" hpTo="100" danger="0" onlyIfTrapped="no" mustAttackMe="no" action="Attack" avoidance="No Avoidance" desiredStance="Reach" distance="3" attackMode="No Change" firstSpell="" secondSpell="" thirdSpell="" fourthSpell="" spamMin="300" spamMax="500"/>
                        <Setting index="1" hpFrom="0" hpTo="0" danger="0" onlyIfTrapped="no" mustAttackMe="no" action="Attack" avoidance="No Avoidance" desiredStance="No Movement" distance="3" attackMode="No Change" firstSpell="" secondSpell="" thirdSpell="" fourthSpell="" spamMin="300" spamMax="500"/>
                        <Setting index="2" hpFrom="0" hpTo="0" danger="0" onlyIfTrapped="no" mustAttackMe="no" action="Attack" avoidance="No Avoidance" desiredStance="No Movement" distance="3" attackMode="No Change" firstSpell="" secondSpell="" thirdSpell="" fourthSpell="" spamMin="300" spamMax="500"/>
                        <Setting index="3" hpFrom="0" hpTo="0" danger="0" onlyIfTrapped="no" mustAttackMe="no" action="Attack" avoidance="No Avoidance" desiredStance="No Movement" distance="3" attackMode="No Change" firstSpell="" secondSpell="" thirdSpell="" fourthSpell="" spamMin="300" spamMax="500"/>
                    </FightingSettings>
                </Creature>
            </Creatures>
        </TargetingProfile>
    </Targeting>
    <OtherBots>
        <HealingPaths/>
        <TargetingPaths/>
    </OtherBots>
</WindbotSettings>
