<?xml version="1.0" encoding="UTF-8"?>
<WindbotSettings>
    <Healer>
        <SpellHealer enabled="yes">
            <HealRule name="Healing" spell="Wound Cleansing" condition="Health Percent below" conditionMin="80" conditionMax="90" extraCondition="No Extra Condition" extraConditionMin="0" extraConditionMax="0" enabled="yes" spamMin="200" spamMax="500" triggerKey="&lt;no key&gt;" dontOverrideActions="no"/>
        </SpellHealer>
        <PotionHealer enabled="yes">
            <HealRule name="NewHealRule" spell="Health Potion" condition="Health Percent below" conditionMin="50" conditionMax="50" extraCondition="No Extra Condition" extraConditionMin="0" extraConditionMax="0" enabled="yes" spamMin="1000" spamMax="1200" triggerKey="&lt;no key&gt;" dontOverrideActions="no"/>
            <HealRule name="NewHealRule1" spell="Mana Potion" condition="Mana below" conditionMin="40" conditionMax="40" extraCondition="No Extra Condition" extraConditionMin="0" extraConditionMax="0" enabled="yes" spamMin="1000" spamMax="1200" triggerKey="&lt;no key&gt;" dontOverrideActions="no"/>
        </PotionHealer>
        <ConditionHealer enabled="no"/>
        <ManaTrainer manaTrainCondition="Mana Percent above" manaTrainMin="99" manaTrainMax="99" enabled="yes">
            <HealRule name="Healing Spam" spell="Wound Cleansing" extraCondition="No Extra Condition" extraConditionMin="0" extraConditionMax="0" enabled="yes" spamMin="200" spamMax="500" triggerKey="&lt;no key&gt;" dontOverrideActions="no"/>
        </ManaTrainer>
    </Healer>
    <Scripter>
        <HotkeyScripts>
            <HotkeyScript name="PauseHotkey" script="if not $cavebot or not $targeting then&#13;&#10;    listas('Enabling Cavebot and Targeting')&#13;&#10;    setcavebot('on')&#13;&#10;    settargeting('on')&#13;&#10;    wait(1000)&#13;&#10;else&#13;&#10;    listas('Disabling Cavebot and Targeting')&#13;&#10;    setcavebot('off')&#13;&#10;    settargeting('off')&#13;&#10;    stopattack()&#13;&#10;    wait(1000)&#13;&#10;end" triggerKey="Pause" hotkeyTriggerMode="0"/>
            <HotkeyScript name="Showbot" script="showbot()&#10;wait(2000)" triggerKey="Shift + F11" hotkeyTriggerMode="0"/>
        </HotkeyScripts>
        <PersistentScripts>
            <PersistentScript name="BackpackSettler" script="auto(1000)&#10;&#10;setlootingdestination(&quot;mainbp&quot;, getuseroption(&quot;MainBP&quot;))&#10;setlootingdestination(&quot;goldbp&quot;, getuseroption(&quot;GoldBP&quot;))&#10;setlootingdestination(&quot;rarebp&quot;, getuseroption(&quot;RareBP&quot;))&#10;setlootingdestination(&quot;maindpbp&quot;, getuseroption(&quot;MainBPDP&quot;))&#10;setlootingdestination(&quot;raredpbp&quot;, getuseroption(&quot;RareBPDP&quot;))" enabled="yes"/>
            <PersistentScript name="ScreenShotTaker" script="init start&#10;&#10;&#9;local Skills = {&#10;&#9;&#9;-- Downgrade&#10;&#9;&#9;Death = getuseroption('ssdeath'),&#10;&#10;&#9;&#9;-- Upgrade&#10;&#9;&#9;Level = getuseroption('sslevel'),&#10;&#9;&#9;Magic = getuseroption('ssmlevel'),&#10;&#9;&#9;Fist = getuseroption('ssff'),&#10;&#9;&#9;Axe = getuseroption('ssaf'),&#10;&#9;&#9;Club = getuseroption('sscf'),&#10;&#9;&#9;Sword = getuseroption('sssf'),&#10;&#9;&#9;Distance = getuseroption('ssdf'),&#10;&#9;&#9;Shielding = getuseroption('ssshf'),&#10;&#9;&#9;Fishing = getuseroption('ssfsf'),&#10;&#9;}&#10;&#10;&#9;-- DO NOT EDIT BELOW --&#10;&#10;init end&#10;&#10;auto(400, 800)&#10;&#10;foreach newmessage m do&#10;&#9;if m.type == MSG_STATUS or m.type == MSG_ADVANCE then&#10;&#9;&#9;local Skill = m.content:match('You advanced .- (.-)[%s%.].-')&#10;&#10;&#9;&#9;if Skill and Skills[Skill:capitalize()] then&#10;&#9;&#9;&#9;screenshot(string.format('Advance_%s_%s', $name, os.date('%Y-%m-%d %H-%M-%S')))&#10;&#9;&#9;elseif Skills.Death and m.content:match(&quot;You were killed (.+)&quot;) then&#10;&#9;&#9;&#9;screenshot(string.format('Death_%s_%s', $name, os.date('%Y-%m-%d %H-%M-%S')))&#10;&#9;&#9;end&#10;&#9;end&#10;end" enabled="no"/>
            <PersistentScript name="SafeReconnect" script="init start&#10;&#9;-- VERSION 2.1.0&#10;&#9;-- If ReopenBps is set to true then it'll try to reopen the visible backpacks on the main backpack&#10;&#9;-- setting it to false will just ignore your bps after you are logged in&#10;&#10;&#9;local ReopenBps = true&#10;&#10;&#9;-- If IgnoreServerSave is set to false it'll wait to relog if server save is occurring&#10;&#9;-- setting it to true will try to relog even on server saving time&#10;&#10;&#9;local IgnoreServerSave = false&#10;&#10;&#9;-- [[ ONLY EDIT SPECIAL CHECKS IF YOU KNOW WHAT YOU'RE DOING ]]--&#10;&#10;&#9;-- special checks are the checks it'll do after you login&#10;&#9;-- for example: if you are skulled, inside temple, etc ...&#10;&#10;&#9;local SpecialChecks = {&#10;&#9;&#9;{&#10;&#9;&#9;&#9;function()&#10;&#9;&#9;&#9;&#9;return isontemple()&#10;&#9;&#9;&#9;end,&#10;&#9;&#9;&#9;function()&#10;&#9;&#9;&#9;&#9;return messagebox('Reconnect Issue', 'Reconnect persistent was disabled because your character was inside a temple.\nThe reconnect will enable itself again when you login manually.')&#10;&#9;&#9;&#9;end&#10;&#9;&#9;},&#10;&#9;&#9;{&#10;&#9;&#9;&#9;function()&#10;&#9;&#9;&#9;&#9;return ($self.skull == SKULL_RED or $self.skull == SKULL_BLACK) and $pzone&#10;&#9;&#9;&#9;end,&#10;&#9;&#9;&#9;function()&#10;&#9;&#9;&#9;&#9;return messagebox('Reconnect Issue', 'Reconnect persistent was disabled because your character have gained a red/black skull.\nThe reconnect will enable itself again when you login manually.')&#10;&#9;&#9;&#9;end&#10;&#9;&#9;},&#10;&#9;&#9;{&#10;&#9;&#9;&#9;function()&#10;&#9;&#9;&#9;&#9;return $stamina &lt;= 14*60 and $pzone&#10;&#9;&#9;&#9;end,&#10;&#9;&#9;&#9;function()&#10;&#9;&#9;&#9;&#9;return messagebox('Reconnect Issue', 'Reconnect persistent was disabled because your character had less than 14 hours of stamina and was inside a protection zone.\nThe reconnect will enable itself again when you login manually.')&#10;&#9;&#9;&#9;end&#10;&#9;&#9;},&#10;&#9;}&#10;&#10;&#9;-- DO NOT EDIT BELOW --&#10;&#9;local reconState = 1&#10;&#10;&#9;if $curscript.type == 'cavebot' then&#10;&#9;&#9;reconState = -1&#10;&#9;&#9;messagebox('Reconnect Issue', 'Reconnect should be placed at Scripter/Persistents and not Cavebot/Scripter.\nChange this setting to run it properly.')&#10;&#9;end&#10;&#10;&#9;local openFunc = function()&#10;&#9;&#9;local lifeTime = $timems&#10;&#9;&#9;local reopenLogin = getsetting('Looting/OpenBPsAtLogin')&#10;&#10;&#9;&#9;setsetting('Looting/OpenBPsAtLogin', 'no')&#10;&#9;&#9;reopenwindows('small')&#10;&#10;&#9;&#9;while $openingbps do&#10;&#9;&#9;&#9;wait(100)&#10;&#10;&#9;&#9;&#9;if $timems - lifeTime &gt;= 10000 and not $pzone then&#10;&#10;&#9;&#9;&#9;&#9;setsetting('Looting/OpenBPsAtLogin', reopenLogin)&#10;&#9;&#9;&#9;&#9;return false&#10;&#9;&#9;&#9;end&#10;&#9;&#9;end&#10;&#10;&#9;&#9;setsetting('Looting/OpenBPsAtLogin', reopenLogin)&#10;&#9;&#9;return true&#10;&#9;end&#10;&#10;&#9;local randTimeSS = math.random(60, 660)&#10;&#10;init end&#10;&#10;auto(1000)&#10;&#10;if IgnoreSS or (sstime() &gt;= 600 and sstime() &lt;= 85800 - randTimeSS) and reconState == 1 and not $connected then&#10;&#9;randTimeSS = math.random(60, 660)&#10;&#9;setsetting('Targeting/Enabled', 'no')&#10;&#9;setsetting('Cavebot/Enabled', 'no')&#10;&#9;reconnect(true)&#10;&#10;&#9;if $connected then&#10;&#9;&#9;pausewalking(10000)&#10;&#9;else&#10;&#9;&#9;return&#10;&#9;end&#10;&#10;&#9;for _, callback in ipairs(SpecialChecks) do&#10;&#9;&#9;if callback[1]() then&#10;&#9;&#9;&#9;reconState = 0&#10;&#10;&#9;&#9;&#9;logout()&#10;&#10;&#9;&#9;&#9;return callback[2] ~= nil and callback[2]()&#10;&#9;&#9;end&#10;&#9;end&#10;&#10;&#9;if ReopenBps then&#10;&#9;&#9;local clientMin = $minimized&#10;&#10;&#9;&#9;if clientMin and not $addons.enabled then&#10;&#9;&#9;&#9;restoreclient() waitping()&#10;&#9;&#9;end&#10;&#10;&#9;&#9;local reopenSuccess = openFunc()&#10;&#10;&#9;&#9;if not reopenSuccess then&#10;&#9;&#9;&#9;messagebox('Reconnect Issue', 'Took too long to open them, they could be already opened but for safety reasons you were alerted. Please open them manually.')&#10;&#9;&#9;&#9;pausewalking(0)&#10;&#9;&#9;&#9;setsetting('Targeting/Enabled', 'yes')&#10;&#9;&#9;&#9;setsetting('Cavebot/Enabled', 'yes')&#10;&#10;&#9;&#9;&#9;for _ = 1, 10 do&#10;&#9;&#9;&#9;&#9;beep()&#10;&#9;&#9;&#9;&#9;wait(1000)&#10;&#9;&#9;&#9;end&#10;&#9;&#9;end&#10;&#10;&#9;&#9;if clientMin and not $minimized then&#10;&#9;&#9;&#9;minimizeclient()&#10;&#9;&#9;end&#10;&#9;end&#10;&#10;&#9;if not ($targeting and $cavebot) then&#10;&#9;&#9;setsetting('Targeting/Enabled', 'yes')&#10;&#9;&#9;setsetting('Cavebot/Enabled', 'yes')&#10;&#9;&#9;pausewalking(0)&#10;&#9;end&#10;end&#10;&#10;if $connected and reconState == 0 then&#10;&#9;messagebox(&quot;Reconnect&quot;, &quot;Reconnect hotkey as been enabled again because you have logged manually.&quot;)&#10;&#9;reconState = 1&#10;end" enabled="yes"/>
            <PersistentScript name="openBps" script="auto(60000)&#10;if windowcount() &lt; 3 and $wptsection == &quot;Hunting&quot; then&#10;pausewalking(30000)&#10;&#9;local mainbp = getlootingdestination(&quot;mainbp&quot;)&#10;&#9;local goldbp = getlootingdestination(&quot;goldbp&quot;)&#10;&#9;local rarebp = getlootingdestination(&quot;rarebp&quot;)&#10;&#9;&#10;&#9;while windowcount() &lt; 3 do&#10;&#9;closewindows()waitping()&#10;&#9;openitem(mainbp,&quot;back&quot;)waitping()&#10;&#9;resizewindows()waitping()&#10;&#9;openitem(goldbp,mainbp,true)waitping()&#10;&#9;resizewindows()waitping()&#10;&#9;openitem(rarebp,mainbp,true)waitping()&#10;&#9;resizewindows()waitping()&#10;&#9;end&#10;pausewalking(0)&#10;end" enabled="yes"/>
        </PersistentScripts>
    </Scripter>
    <HUDs>
        <HUDScripts>
            <HUDScript name="MonitorMyHunting" script="init start&#10;&#9;--&#10;&#9;--                        88                                                                  &#10;&#9;--                        &quot;&quot;                                                ,d                &#10;&#9;--                                                                          88                &#10;&#9;--             ,adPPYba,  88  8b,dPPYba,  88,dPYba,,adPYba,   ,adPPYYba,  MM88MMM  ,adPPYba,  &#10;&#9;--             I8[    &quot;&quot;  88  88P'   &quot;Y8  88P'   &quot;88&quot;    &quot;8a  &quot;&quot;     `Y8    88    a8P_____88  &#10;&#9;--              `&quot;Y8ba,   88  88          88      88      88  ,adPPPPP88    88    8PP&quot;&quot;&quot;&quot;&quot;&quot;&quot;  &#10;&#9;--             aa    ]8I  88  88          88      88      88  88,    ,88    88,   &quot;8b,   ,aa  &#10;&#9;--   Author:   `&quot;YbbdP&quot;'  88  88          88      88      88  `&quot;8bbdP&quot;Y8    &quot;Y888  `&quot;Ybbd8&quot;'  &#10;&#9;--   &#10;&#9;--   Monitor My Hunting!&#10;&#9;--&#10;&#9;--   Version: 1.0&#10;&#9;--   Created: 29.12.2013&#10;&#9;--   Last update: 29.12.2013&#10;&#9;--&#10;&#10;&#9;local MMH = {&#10;&#9;&#9;SHOW_ALL_ITEMS = false,&#10;&#9;&#9;SHOW_ALL_SUPPLIES = false,&#10;&#9;}&#10;&#10;&#9;-- [[ Do not change anything below this line. ]] --&#10;&#10;&#9;-- [[ COLORS ]] --&#10;&#9;MMH.COLORS = {}&#10;&#9;MMH.COLORS.FONT_COLOR = color(255, 255, 255, 0)&#10;&#9;MMH.COLORS.SECTION_HEADER_BACKGROUND = {0.0, color(36, 68, 105, 20), 0.23, color(39, 73, 114, 20), 0.76, color(21, 39, 60, 20)}&#10;&#9;MMH.COLORS.ENTRY_NAME_BACKGROUND = {0.0, color(75, 75, 75, 20), 0.23, color(45, 45, 45, 20), 0.76, color(19, 19, 19, 20)}&#10;&#9;MMH.COLORS.ENTRY_VALUE_BACKGROUND = {0.0, color(145, 95, 0, 20), 0.23, color(158, 104, 0, 20), 0.76, color(84, 55, 0, 20)}&#10;&#9;MMH.COLORS.RESULT_POSITIVE_BACKGROUND = {0.0, color(65, 96, 12, 20), 0.23, color(67, 99, 13, 20), 0.76, color(36, 52, 6, 20)}&#10;&#9;MMH.COLORS.RESULT_NEGATIVE_BACKGROUND = {0.0, color(90, 12, 15, 20), 0.23, color(98, 13, 17, 20), 0.76, color(52, 6, 9, 20)}&#10;&#9;MMH.COLORS.RESET_BUTTON_BACKGROUND = MMH.COLORS.RESULT_POSITIVE_BACKGROUND&#10;&#10;&#9;-- [[ ELEMENTS ]] --&#10;&#9;MMH.ELEMENTS = {}&#10;&#9;MMH.ELEMENTS.RESET_BUTTON = -1&#10;&#9;MMH.ELEMENTS.SWITCH_ITEMS_LOOTED = -1&#10;&#9;MMH.ELEMENTS.SWITCH_SUPPLIES_USED = -1&#10;&#10;&#9;-- [[ SECTION STATES ]] --&#10;&#9;MMH.SECTIONS = {}&#10;&#9;MMH.SECTIONS.ITEMS_LOOTED = true&#10;&#9;MMH.SECTIONS.SUPPLIES_USED = true&#10;&#10;&#9;-- [[ OTHERS ]] --&#9;&#10;&#9;filterinput(false, true, false, false)&#10;&#10;&#9;local MOVING, TEMP, MOVED = false, {0, 0}, {0, 0}&#10;&#10;&#9;function inputevents(e)&#10;&#9;&#9;if (e.type == IEVENT_LMOUSEDOWN) then&#10;&#9;&#9;&#9;if (e.elementid == MMH.ELEMENTS.RESET_BUTTON) then&#10;&#9;&#9;&#9;&#9;resetcharactertime()&#10;&#9;&#9;&#9;&#9;resetlootcounter()&#10;&#9;&#9;&#9;&#9;resetexpcounter()&#10;&#9;&#9;&#9;elseif (e.elementid == MMH.ELEMENTS.SWITCH_ITEMS_LOOTED) then&#10;&#9;&#9;&#9;&#9;MMH.SECTIONS.ITEMS_LOOTED = not MMH.SECTIONS.ITEMS_LOOTED&#10;&#9;&#9;&#9;elseif (e.elementid == MMH.ELEMENTS.SWITCH_SUPPLIES_USED) then&#10;&#9;&#9;&#9;&#9;MMH.SECTIONS.SUPPLIES_USED = not MMH.SECTIONS.SUPPLIES_USED&#10;&#9;&#9;&#9;end&#10;&#9;&#9;end&#10;&#10;&#9;&#9;if (e.type == IEVENT_MMOUSEDOWN) then&#10;&#9;&#9;&#9;MOVING, TEMP = true, {$cursor.x - MOVED[1], $cursor.y - MOVED[2]}&#10;&#9;&#9;end&#10;&#10;&#9;&#9;if (e.type == IEVENT_MMOUSEUP) then&#10;&#9;&#9;&#9;MOVING = false&#10;&#9;&#9;end&#10;&#9;end&#10;&#10;&#9;setmaskcolorxp(0)&#10;init end&#10;&#10;if (MOVING) then&#10;    auto(10)&#10;    MOVED = {$cursor.x - TEMP[1], $cursor.y - TEMP[2]}&#10;end&#10;&#10;setposition($clientwin.right - 424 + MOVED[1], $worldwin.top + MOVED[2])&#10;setfontstyle('Tahoma', 8, 75, MMH.COLORS.FONT_COLOR, 1, color(0, 0, 0, 20))&#10;&#10;local ROW_QUANTITY, STRING_WIDTH, STRING_HEIGHT = 0, measurestring('TEMP')&#10;local ITEMS_LOOTED_WORTH, ITEM_LOOTED_QUANTITY, ITEM_LOOTED_WORTH = 0, 0, 0&#10;local SUPPLIES_USED_WORTH, SUPPLY_USED_QUANTITY, SUPPLY_USED_WORTH = 0, 0, 0&#10;&#10;setfillstyle('gradient', 'linear', 2, 0, 0, 0, 21)&#10;addgradcolors(unpack(MMH.COLORS.ENTRY_NAME_BACKGROUND))&#10;drawroundrect(0, 0, 240, 20, 2, 2)&#10;drawtext('Monitor My Hunting v1.0', 6, 20 / 2 - STRING_HEIGHT * 0.5)&#10;&#10;setfillstyle('gradient', 'linear', 2, 0, 0, 0, 21)&#10;addgradcolors(unpack(MMH.COLORS.RESET_BUTTON_BACKGROUND))&#10;MMH.ELEMENTS.RESET_BUTTON = drawroundrect(196, 0, 44, 20, 2, 2)&#10;drawtext('RESET', 202, 20 / 2 - STRING_HEIGHT * 0.5)&#10;&#10;setfontsize(7)&#10;&#10;STRING_WIDTH, STRING_HEIGHT = measurestring('TEMP')&#10;&#10;setfillstyle('gradient', 'linear', 2, 0, 0, 0, 16)&#10;addgradcolors(unpack(MMH.COLORS.ENTRY_NAME_BACKGROUND))&#10;drawroundrect(0, 23, 240, 15, 2, 2)&#10;drawtext('Looting Accuracy', 6, 23 + 15 / 2 - STRING_HEIGHT * 0.5 + 1)&#10;&#10;setfillstyle('gradient', 'linear', 2, 0, 0, 0, 16)&#10;addgradcolors(unpack(MMH.COLORS.ENTRY_VALUE_BACKGROUND))&#10;drawroundrect(130, 23, 110, 15, 2, 2)&#10;drawtext(string.format('%.2f', $lootaccuracy) .. '%', 136, 23 + 15 / 2 - STRING_HEIGHT * 0.5 + 1)&#10;&#10;setfontsize(8)&#10;&#10;STRING_WIDTH, STRING_HEIGHT = measurestring('TEMP')&#10;&#10;setfillstyle('gradient', 'linear', 2, 0, 0, 0, 21)&#10;addgradcolors(unpack(MMH.COLORS.SECTION_HEADER_BACKGROUND))&#10;drawroundrect(0, 41, 240, 20, 2, 2)&#10;drawtext('ITEMS LOOTED', 6, 41 + 20 / 2 - STRING_HEIGHT * 0.5)&#10;&#10;setfillstyle('gradient', 'linear', 2, 0, 0, 0, 21)&#10;if (MMH.SECTIONS.ITEMS_LOOTED) then&#10;&#9;addgradcolors(unpack(MMH.COLORS.RESULT_POSITIVE_BACKGROUND))&#10;else&#10;&#9;addgradcolors(unpack(MMH.COLORS.RESULT_NEGATIVE_BACKGROUND))&#10;end&#10;MMH.ELEMENTS.SWITCH_ITEMS_LOOTED = drawroundrect(220, 41, 20, 20, 2, 2)&#10;drawtext('X', 228, 41 + 20 / 2 - STRING_HEIGHT * 0.5)&#10;&#10;setfontsize(7)&#10;&#10;STRING_WIDTH, STRING_HEIGHT = measurestring('TEMP')&#10;&#10;foreach lootingitem ItemEntry do&#10;&#9;if (MMH.SHOW_ALL_ITEMS or ItemEntry.amountlooted &gt; 0) then&#10;&#9;&#9;ITEM_LOOTED_QUANTITY = ItemEntry.amountlooted&#10;&#9;&#9;ITEM_LOOTED_WORTH = ItemEntry.sellprice * ITEM_LOOTED_QUANTITY&#10;&#10;&#9;&#9;if (MMH.SECTIONS.ITEMS_LOOTED) then&#10;&#9;&#9;&#9;setfillstyle('gradient', 'linear', 2, 0, 0, 0, 16)&#10;&#9;&#9;&#9;addgradcolors(unpack(MMH.COLORS.ENTRY_NAME_BACKGROUND))&#10;&#9;&#9;&#9;drawroundrect(0, 64 + ROW_QUANTITY * 18, 240, 15, 2, 2)&#10;&#9;&#9;&#10;&#9;&#9;&#9;setcompositionmode(CompositionMode_SourceOver)&#10;&#9;&#9;&#9;drawitem(ItemEntry.id, 6, 64 + ROW_QUANTITY * 18, 50, 100)&#10;&#9;&#9;&#9;setcompositionmode(CompositionMode_Automatic)&#10;&#10;&#9;&#9;&#9;drawtext(((#ItemEntry.name &gt; 16 and string.match(string.sub(ItemEntry.name, 1, 16), '(.-)%s?$') .. '...') or ItemEntry.name):capitalizeall(), 28, 64 + ROW_QUANTITY * 18 + 15 / 2 - STRING_HEIGHT * 0.5)&#10;&#10;&#9;&#9;&#9;setfillstyle('gradient', 'linear', 2, 0, 0, 0, 16)&#10;&#9;&#9;&#9;addgradcolors(unpack(MMH.COLORS.ENTRY_VALUE_BACKGROUND))&#10;&#9;&#9;&#9;drawroundrect(130, 64 + ROW_QUANTITY * 18, 110, 15, 2, 2)&#10;&#9;&#9;&#9;drawtext(num(ITEM_LOOTED_QUANTITY) .. ' (' .. math.floor(ITEM_LOOTED_WORTH / 100) / 10 .. 'K)', 136, 64 + ROW_QUANTITY * 18 + 15 / 2 - STRING_HEIGHT * 0.5)&#10;&#10;&#9;&#9;&#9;ROW_QUANTITY = ROW_QUANTITY + 1&#10;&#9;&#9;end&#10;&#10;&#9;&#9;ITEMS_LOOTED_WORTH = ITEMS_LOOTED_WORTH + ITEM_LOOTED_WORTH&#10;&#9;end&#10;end&#10;&#10;setfillstyle('gradient', 'linear', 2, 0, 0, 0, 16)&#10;addgradcolors(unpack(MMH.COLORS.ENTRY_NAME_BACKGROUND))&#10;drawroundrect(0, 64 + ROW_QUANTITY * 18, 240, 15, 2, 2)&#10;drawtext('Total: ' .. num(ITEMS_LOOTED_WORTH) .. ' GPs', 6, 64 + ROW_QUANTITY * 18 + 15 / 2 - STRING_HEIGHT * 0.5)&#10;&#10;ROW_QUANTITY = ROW_QUANTITY + 1&#10;&#10;setfontsize(8)&#10;&#10;STRING_WIDTH, STRING_HEIGHT = measurestring('TEMP')&#10;&#10;setfillstyle('gradient', 'linear', 2, 0, 0, 0, 21)&#10;addgradcolors(unpack(MMH.COLORS.SECTION_HEADER_BACKGROUND))&#10;drawroundrect(0, 64 + ROW_QUANTITY * 18, 240, 20, 2, 2)&#10;drawtext('SUPPLIES USED', 6, 64 + ROW_QUANTITY * 18 + 20 / 2 - STRING_HEIGHT * 0.5)&#10;&#10;setfillstyle('gradient', 'linear', 2, 0, 0, 0, 21)&#10;if (MMH.SECTIONS.SUPPLIES_USED) then&#10;&#9;addgradcolors(unpack(MMH.COLORS.RESULT_POSITIVE_BACKGROUND))&#10;else&#10;&#9;addgradcolors(unpack(MMH.COLORS.RESULT_NEGATIVE_BACKGROUND))&#10;end&#10;MMH.ELEMENTS.SWITCH_SUPPLIES_USED = drawroundrect(220, 64 + ROW_QUANTITY * 18, 20, 20, 2, 2)&#10;drawtext('X', 228, 64 + ROW_QUANTITY * 18 + 20 / 2 - STRING_HEIGHT * 0.5)&#10;&#10;setfontsize(7)&#10;&#10;STRING_WIDTH, STRING_HEIGHT = measurestring('TEMP')&#10;&#10;foreach supplyitem ItemEntry do&#10;&#9;if (MMH.SHOW_ALL_SUPPLIES or ItemEntry.amountused &gt; 0) then&#10;&#9;&#9;SUPPLY_USED_QUANTITY = ItemEntry.amountused&#10;&#9;&#9;SUPPLY_USED_WORTH = ItemEntry.buyprice * SUPPLY_USED_QUANTITY&#10;&#10;&#9;&#9;if (MMH.SECTIONS.SUPPLIES_USED) then&#10;&#9;&#9;&#9;setfillstyle('gradient', 'linear', 2, 0, 0, 0, 16)&#10;&#9;&#9;&#9;addgradcolors(unpack(MMH.COLORS.ENTRY_NAME_BACKGROUND))&#10;&#9;&#9;&#9;drawroundrect(0, 87 + ROW_QUANTITY * 18, 240, 15, 2, 2)&#10;&#10;&#9;&#9;&#9;setcompositionmode(CompositionMode_SourceOver)&#10;&#9;&#9;&#9;drawitem(ItemEntry.id, 6, 87 + ROW_QUANTITY * 18, 50, 100)&#10;&#9;&#9;&#9;setcompositionmode(CompositionMode_Automatic)&#10;&#10;&#9;&#9;&#9;drawtext(((#ItemEntry.name &gt; 16 and string.match(string.sub(ItemEntry.name, 1, 16), '(.-)%s?$') .. '...') or ItemEntry.name):capitalizeall(), 28, 87 + ROW_QUANTITY * 18 + 15 / 2 - STRING_HEIGHT * 0.5)&#10;&#10;&#9;&#9;&#9;setfillstyle('gradient', 'linear', 2, 0, 0, 0, 16)&#10;&#9;&#9;&#9;addgradcolors(unpack(MMH.COLORS.ENTRY_VALUE_BACKGROUND))&#10;&#9;&#9;&#9;drawroundrect(130, 87 + ROW_QUANTITY * 18, 110, 15, 2, 2)&#10;&#9;&#9;&#9;drawtext(num(SUPPLY_USED_QUANTITY) .. ' (' .. math.floor(SUPPLY_USED_WORTH / 100) / 10 .. 'K)', 136, 87 + ROW_QUANTITY * 18 + 15 / 2 - STRING_HEIGHT * 0.5)&#10;&#10;&#9;&#9;&#9;ROW_QUANTITY = ROW_QUANTITY + 1&#10;&#9;&#9;end&#10;&#10;&#9;&#9;SUPPLIES_USED_WORTH = SUPPLIES_USED_WORTH + SUPPLY_USED_WORTH&#10;&#9;end&#10;end&#10;&#10;if (MMH.SECTIONS.SUPPLIES_USED) then&#10;&#9;setfillstyle('gradient', 'linear', 2, 0, 0, 0, 16)&#10;&#9;addgradcolors(unpack(MMH.COLORS.ENTRY_NAME_BACKGROUND))&#10;&#9;drawroundrect(0, 87 + ROW_QUANTITY * 18, 240, 15, 2, 2)&#10;&#10;&#9;setcompositionmode(CompositionMode_SourceOver)&#10;&#9;drawitem(3031, 6, 87 + ROW_QUANTITY * 18, 50, 100)&#10;&#9;setcompositionmode(CompositionMode_Automatic)&#10;&#10;&#9;drawtext('Money Spent', 28, 87 + ROW_QUANTITY * 18 + 15 / 2 - STRING_HEIGHT * 0.5)&#10;&#10;&#9;setfillstyle('gradient', 'linear', 2, 0, 0, 0, 16)&#10;&#9;addgradcolors(unpack(MMH.COLORS.ENTRY_VALUE_BACKGROUND))&#10;&#9;drawroundrect(130, 87 + ROW_QUANTITY * 18, 110, 15, 2, 2)&#10;&#9;drawtext(num($moneyspent) .. ' (' .. math.floor($moneyspent / 100) / 10 .. 'K)', 136, 87 + ROW_QUANTITY * 18 + 15 / 2 - STRING_HEIGHT * 0.5)&#10;&#10;&#9;ROW_QUANTITY = ROW_QUANTITY + 1&#10;end&#10;&#10;SUPPLIES_USED_WORTH = SUPPLIES_USED_WORTH + $moneyspent&#10;&#10;setfillstyle('gradient', 'linear', 2, 0, 0, 0, 16)&#10;addgradcolors(unpack(MMH.COLORS.ENTRY_NAME_BACKGROUND))&#10;drawroundrect(0, 87 + ROW_QUANTITY * 18, 240, 15, 2, 2)&#10;drawtext('Total: ' .. num(SUPPLIES_USED_WORTH) .. ' GPs', 6, 87 + ROW_QUANTITY * 18 + 15 / 2 - STRING_HEIGHT * 0.5)&#10;&#10;ROW_QUANTITY = ROW_QUANTITY + 1&#10;&#10;setfontsize(8)&#10;&#10;STRING_WIDTH, STRING_HEIGHT = measurestring('TEMP')&#10;&#10;setfillstyle('gradient', 'linear', 2, 0, 0, 0, 21)&#10;if (ITEMS_LOOTED_WORTH &gt;= SUPPLIES_USED_WORTH) then&#10;&#9;addgradcolors(unpack(MMH.COLORS.RESULT_POSITIVE_BACKGROUND))&#10;else&#10;&#9;addgradcolors(unpack(MMH.COLORS.RESULT_NEGATIVE_BACKGROUND))&#10;end&#10;drawroundrect(0, 87 + ROW_QUANTITY * 18, 240, 20, 2, 2)&#10;drawtext(((ITEMS_LOOTED_WORTH &gt;= SUPPLIES_USED_WORTH and ('PROFIT: ')) or ('WASTE: ')) .. num(ITEMS_LOOTED_WORTH - SUPPLIES_USED_WORTH) .. ' GPs (' .. math.abs(math.floor(((ITEMS_LOOTED_WORTH - SUPPLIES_USED_WORTH) * 3600) / ($charactertime / 1000) / 100) / 10) .. ' k/h)', 6, 87 + ROW_QUANTITY * 18 + 20 / 2 - STRING_HEIGHT * 0.5)" enabled="yes" refreshRate="100"/>
            <HUDScript name="MonitorMyStats" script="init start&#10;    --&#10;    --              88                                                                  &#10;    --              &quot;&quot;                                                ,d                &#10;    --                                                                88                &#10;    --   ,adPPYba,  88  8b,dPPYba,  88,dPYba,,adPYba,   ,adPPYYba,  MM88MMM  ,adPPYba,  &#10;    --   I8[    &quot;&quot;  88  88P'   &quot;Y8  88P'   &quot;88&quot;    &quot;8a  &quot;&quot;     `Y8    88    a8P_____88  &#10;    --    `&quot;Y8ba,   88  88          88      88      88  ,adPPPPP88    88    8PP&quot;&quot;&quot;&quot;&quot;&quot;&quot;  &#10;    --   aa    ]8I  88  88          88      88      88  88,    ,88    88,   &quot;8b,   ,aa  &#10;    --   `&quot;YbbdP&quot;'  88  88          88      88      88  `&quot;8bbdP&quot;Y8    &quot;Y888  `&quot;Ybbd8&quot;'  &#10;    --&#10;&#10;    --   Name: Monitor My Stats&#10;    --   Last Updated: 19/12/2013&#10;    --   Version: 1.0&#10;&#10;    local MMS = {&#10;        ShowInfo = true,&#10;&#10;        Title = &quot;SCRIPT INFO&quot;,&#10;        Creator = &quot;Yracoma&quot;,&#10;        Info = 'XTScript - Kazordoon Dwarf Soldier 25+',&#10;        Version = '1.0.0'&#10;    }&#10;&#10;    -- [[ Do not change anything below this line. ]] --&#10;&#10;    filterinput(false, true, false, false)&#10;&#10;    local HUD_Sections = {&#10;        {Name = 'OTHERS', State = true, Items = {&#10;                {'Ping', function() return $ping .. ' (avg: ' .. $pingaverage .. ')' end},&#10;                {'Bank Balance', function() return num($balance) end},&#10;            }&#10;        },&#10;&#10;        {Name = 'CHARACTER STATS', State = true, Items = {&#10;                {'Level', function() return $level .. ' (' .. 100 - math.floor(($exp - expatlvl($level)) * 100 / (expatlvl($level + 1) - expatlvl($level))) .. '%)' end},&#10;                {'Experience', function() return num($exp) end},&#10;                {'Magic Level', function() return $mlevel .. ' (' .. 100 - $mlevelpc .. '%)' end},&#10;                {'Weapon Skill', function() local _ = WeaponSkill() return _.skill .. ' (' .. 100 - _.skillpc .. '%)' end},&#10;                {'Shielding', function() return $shielding .. ' (' .. 100 - $shieldingpc .. '%)' end},&#10;                {'Fishing', function() return $fishing .. ' (' .. 100 - $fishingpc .. '%)' end}&#10;            }&#10;        },&#10;&#10;        {Name = 'ENGINE STATES', State = true, Items = {&#10;                {'Spell Healer', function() return getsetting('SpellHealer/Enabled') end, function() return toggle('SpellHealer/Enabled') end},&#10;                {'Potion Healer', function() return getsetting('PotionHealer/Enabled') end, function() return toggle('PotionHealer/Enabled') end},&#10;                {'Condition Healer', function() return getsetting('ConditionHealer/Enabled') end, function() return toggle('ConditionHealer/Enabled') end},&#10;                {'Mana Training', function() return getsetting('ManaTrainer/Enabled') end, function() return toggle('ManaTrainer/Enabled') end},&#10;                {'Cavebot', function() return getsetting('Cavebot/Enabled') end, function() return toggle('Cavebot/Enabled') end},&#10;                {'Looting', function() return getsetting('Looting/Enabled') end, function() return toggle('Looting/Enabled') end},&#10;                {'Targeting', function() return getsetting('Targeting/Enabled') end, function() return toggle('Targeting/Enabled') end}&#10;            }&#10;        },&#10;&#10;        {Name = 'BOTTING STATS', State = true, Items = {&#10;                {'Experience per Hour', function() return num($exphour) end},&#10;                {'Experience Left', function() return num(exptolevel()) end},&#10;                {'Experience Today', function() return num($expgained) end},&#10;                {'Time to Next Level', function() return time(timetolevel()) end},&#10;                {'Played Time', function() return time(math.floor($charactertime / 1000)) end},&#10;                {'Stamina', function() return time($stamina) end}&#10;            }&#10;        }&#10;    }&#10;&#10;    local HUD_Colors = {&#10;            Font = color(255, 255, 255, 0),&#10;            SectionHeaderBackground = {0.0, color(36, 68, 105, 20), 0.23, color(39, 73, 114, 20), 0.76, color(21, 39, 60, 20)},&#10;            EntryNameBackground = {0.0, color(75, 75, 75, 20), 0.23, color(45, 45, 45, 20), 0.76, color(19, 19, 19, 20)},&#10;            EntryValueBackground = {0.0, color(145, 95, 0, 20), 0.23, color(158, 104, 0, 20), 0.76, color(84, 55, 0, 20)},&#10;            EntryValueEnabledBackground = {0.0, color(65, 96, 12, 20), 0.23, color(67, 99, 13, 20), 0.76, color(36, 52, 6, 20)},&#10;            EntryValueDisabledBackground = {0.0, color(90, 12, 15, 20), 0.23, color(98, 13, 17, 20), 0.76, color(52, 6, 9, 20)},&#10;    }&#10;&#10;    function WeaponSkill()&#10;        local SkillTypes = {&#10;            ['axe'] = {type = 'axe', skill = $axe, skillpc = $axepc},&#10;            ['club'] = {type = 'club', skill = $club, skillpc = $clubpc},&#10;            ['sword'] = {type = 'sword', skill = $sword, skillpc = $swordpc},&#10;            ['bow'] = {type = 'distance', skill = $distance, skillpc = $distancepc},&#10;            ['distance weapon'] = {type = 'distance', skill = $distance, skillpc = $distancepc},&#10;            ['no weapon'] = {type = 'fist', skill = $fist, skillpc = $fistpc},&#10;            ['rod'] = {type = 'magic', skill = $mlevel, skillpc = $mlevelpc},&#10;            ['wand'] = {type = 'magic', skill = $mlevel, skillpc = $mlevelpc},&#10;        }&#10;&#10;        return SkillTypes[findweapontype()]&#10;    end&#10;&#10;    local Moving, Temp, Moved = false, {0, 0}, {0, 0}&#10;&#10;    function inputevents(e)&#10;        if (e.type == IEVENT_LMOUSEDOWN) then&#10;            for _, Section in ipairs(HUD_Sections) do&#10;                if (e.elementid == Section.StateSwitch) then&#10;                    Section.State = not Section.State&#10;                    return&#10;                end&#10;            end&#10;        for _, Section in ipairs(HUD_Sections) do&#10;                if (Section.Name == 'ENGINE STATES') then&#10;                    for _, SectionItem in ipairs(Section.Items) do&#10;                        if (e.elementid == SectionItem[4]) then&#10;                            SectionItem[3]()&#10;                            return&#10;                        end&#10;                    end&#10;                end&#10;            end&#10;        end&#10;&#10;        if (e.type == IEVENT_MMOUSEDOWN) then&#10;            Moving, Temp = true, {$cursor.x - Moved[1], $cursor.y - Moved[2]}&#10;        end&#10;&#10;        if (e.type == IEVENT_MMOUSEUP) then&#10;            Moving = false&#10;        end&#10;    end&#10;    &#10;    setmaskcolorxp(0)&#10;init end&#10;&#10;if (Moving) then&#10;    auto(10)&#10;    Moved = {$cursor.x - Temp[1], $cursor.y - Temp[2]}&#10;end&#10;&#10;setposition($clientwin.left + 5 + Moved[1], $worldwin.top + Moved[2])&#10;setfontstyle('Tahoma', 8, 75, 0xFFFFFF, 1, color(0, 0, 0, 20))&#10;&#10;local YPosition, SectionRow, SectionItemsRow = 0, 0, 0&#10;&#10;if MMS.ShowInfo then&#10;    local StringWidth, StringHeight = measurestring('TEMP')&#10;&#10;    setfillstyle('gradient', 'linear', 2, 0, 0, 0, 22)&#10;    addgradcolors(unpack(HUD_Colors.SectionHeaderBackground))&#10;    drawroundrect(0, 0, 240, 21, 2, 2)&#10;    drawtext(MMS.Title, 6, 21 / 2 - StringHeight * 0.5)&#10;&#10;    setfillstyle('gradient', 'linear', 2, 0, 0, 0, 22)&#10;    addgradcolors(unpack(HUD_Colors.EntryValueBackground))&#10;    drawroundrect(130, 0, 110, 21, 2, 2)&#10;    drawtext(MMS.Creator, 136, 21 / 2 - StringHeight * 0.5)&#10;&#10;    setfontsize(7)&#10;&#10;    local StringWidth, StringHeight = measurestring('TEMP')&#10;&#10;    setfillstyle('gradient', 'linear', 2, 0, 0, 0, 16)&#10;    addgradcolors(unpack(HUD_Colors.EntryNameBackground))&#10;    drawroundrect(0, 24 + 0 * 18, 240, 15, 2, 2)&#10;    drawtext(MMS.Info, 6, 24 + 0 * 18 + 15 / 2 - StringHeight * 0.5 + 1)&#10;     &#10;    setfillstyle('gradient', 'linear', 2, 0, 0, 0, 16)&#10;    addgradcolors(unpack(HUD_Colors.EntryNameBackground))&#10;    drawroundrect(0, 24 + 1 * 18, 240, 15, 2, 2)&#10;    drawtext('Script version:', 6, 24 + 1 * 18 + 15 / 2 - StringHeight * 0.5 + 1)&#10;     &#10;    setfillstyle('gradient', 'linear', 2, 0, 0, 0, 16)&#10;    addgradcolors(unpack(HUD_Colors.EntryValueBackground))&#10;    drawroundrect(130, 24 + 1 * 18, 110, 15, 2, 2)&#10;    drawtext(MMS.Version, 136, 24 + 1 * 18 + 15 / 2 - StringHeight * 0.5 + 1)&#10;    &#10;    YPosition = 22 + 2 * 19&#10;end&#10;&#10;for SectionIndex, Section in ipairs(HUD_Sections) do&#10;    setfontsize(8)&#10;&#10;    local StringWidth, StringHeight = measurestring('TEMP')&#10;&#10;    setfillstyle('gradient', 'linear', 2, 0, 0, 0, 21)&#10;    addgradcolors(unpack(HUD_Colors.SectionHeaderBackground))&#10;    drawroundrect(0, YPosition + (SectionRow * 23) + (SectionItemsRow * 19), 240, 20, 2, 2)&#10;    drawtext(Section.Name, 6, YPosition + (SectionRow * 23) + (SectionItemsRow * 19) + 20 / 2 - StringHeight * 0.5 + 1)&#10;&#10;    setfillstyle('gradient', 'linear', 2, 0, 0, 0, 21)&#10;    if (Section.State) then&#10;        addgradcolors(unpack(HUD_Colors.EntryValueEnabledBackground))&#10;    else&#10;        addgradcolors(unpack(HUD_Colors.EntryValueDisabledBackground))&#10;    end&#10;    Section.StateSwitch = drawroundrect(220, YPosition + (SectionRow * 23) + (SectionItemsRow * 19), 20, 20, 2, 2)&#10;    drawtext('X', 228, YPosition + (SectionRow * 23) + (SectionItemsRow * 19) + 20 / 2 - StringHeight * 0.5 + 1)&#10;&#10;    SectionRow = SectionRow + 1&#10;&#10;    if (Section.State) then&#10;        setfontsize(7)&#10;&#10;        local StringWidth, StringHeight = measurestring('TEMP')&#10;&#10;        for SectionItemIndex, SectionItem in ipairs(Section.Items) do&#10;            setfillstyle('gradient', 'linear', 2, 0, 0, 0, 17)     &#10;            addgradcolors(unpack(HUD_Colors.EntryNameBackground))&#10;            drawroundrect(0, YPosition + (SectionRow * 23) + (SectionItemsRow * 19), 240, 16, 2, 2)&#10;            drawtext(SectionItem[1], 6, YPosition + (SectionRow * 23) + (SectionItemsRow * 19) + 16 / 2 - StringHeight * 0.5 + 1)&#10;&#10;            if (Section.Name == 'ENGINE STATES') then&#10;                local EngineCurrentState = SectionItem[2]()&#10;&#10;                setfillstyle('gradient', 'linear', 2, 0, 0, 0, 17)&#10;                if (EngineCurrentState == 'yes') then&#10;                    addgradcolors(unpack(HUD_Colors.EntryValueEnabledBackground))&#10;                else&#10;                    addgradcolors(unpack(HUD_Colors.EntryValueDisabledBackground))&#10;                end&#10;                HUD_Sections[SectionIndex].Items[SectionItemIndex][4] = drawroundrect(130, YPosition + (SectionRow * 23) + (SectionItemsRow * 19), 110, 16, 2, 2)&#10;&#10;&#10;                drawtext((EngineCurrentState == 'yes' and ('On')) or ('Off'), 136, YPosition + (SectionRow * 23) + (SectionItemsRow * 19) + 16 / 2 - StringHeight * 0.5 + 1)&#10;            else&#10;                setfillstyle('gradient', 'linear', 2, 0, 0, 0, 17)&#10;                addgradcolors(unpack(HUD_Colors.EntryValueBackground))&#10;                drawroundrect(130, YPosition + (SectionRow * 23) + (SectionItemsRow * 19), 110, 16, 2, 2)&#10;                drawtext(SectionItem[2](), 136, YPosition + (SectionRow * 23) + (SectionItemsRow * 19) + 16 / 2 - StringHeight * 0.5 + 1)&#10;            end&#10;&#10;            SectionItemsRow = SectionItemsRow + 1&#10;        end&#10;    end&#10;end" enabled="yes" refreshRate="100"/>
            <HUDScript name="RecentLoot" script="init start&#10;&#9;-- local SCRIPT_VERSION = '1.0.1'&#10;&#9;&#10;&#9;local warnitems = {'fire sword', 'boots of haste', 'wand of inferno'} -- you can add more items here&#10;&#9;local maxindex = 5 -- max lines to display at once&#10;&#10;&#9;local fontsize = 7&#10;&#9;local fontspacing = fontsize + 6&#10;&#10;&#9;local index = 0&#10;&#9;local lootmsgs = {}&#10;&#9;local lootcolors = {}&#10;&#9;local lootwidths = {}&#10;&#10;&#9;setfontstyle(&quot;Tahoma&quot;, fontsize, 75, 0x00FF00, 1, 0x002200)&#10;&#9;setmaskcolorxp(0)&#10;init end&#10;&#10;foreach newmessage m do&#10;&#9;if m.level == 0 and m.content:sub(0,8) == &quot;Loot of &quot; then&#10;&#9;&#9;local shortloot = m.content:sub(10)&#10;&#9;&#9;lootmsgs[index] = shortloot&#10;&#9;&#9;lootcolors[index] = 0x00FF00&#10;&#9;&#9;lootwidths[index] = measurestring(shortloot)&#10;&#10;&#9;&#9;local i = 1&#10;&#9;&#9;while warnitems[i] do&#10;&#9;&#9;&#9;if shortloot:find(warnitems[i]) then&#10;&#9;&#9;&#9;&#9;lootcolors[index] = 0xFF0000&#10;&#9;&#9;&#9;&#9;break&#10;&#9;&#9;&#9;end&#10;&#9;&#9;&#9;i = i + 1&#10;&#9;&#9;end&#10;&#10;&#9;&#9;index = index + 1&#10;&#9;&#9;if index &gt;= maxindex then index = 0 end&#10;&#9;end&#10;end&#10;&#10;local longestline = 0&#10;local i = 0&#10;&#10;while i &lt; maxindex do&#10;&#9;if lootmsgs[i] then&#10;&#9;&#9;if ( lootwidths[i] &gt; longestline ) then longestline = lootwidths[i] end&#10;&#9;end&#10;&#10;&#9;i = i+1&#10;end&#10;&#10;local row = 0&#10;local j = 0&#10;i = index&#10;&#10;while j &lt; maxindex do&#10;&#9;if lootmsgs[i] then&#10;&#9;&#9;setfontcolor(lootcolors[i])&#10;&#9;&#9;drawtext(lootmsgs[i], longestline - lootwidths[i], row*fontspacing)&#10;&#9;&#9;row = row + 1&#10;&#9;end&#10;&#10;&#9;j=j+1&#10;&#9;i=i+1&#10;&#10;&#9;if i &gt;= maxindex then i = 0 end&#10;end&#10;&#10;setposition($worldwin.right-5-longestline, $worldwin.bottom-5-row*fontspacing)&#10;" enabled="no" refreshRate="100"/>
            <HUDScript name="ShowWaypoints" script="init start&#10;&#9;-- local SCRIPT_VERSION = '1.2.1'&#10;&#10;&#9;local waypointColors = {&#10;&#9;&#9;walk    = 0xAAF200,&#10;&#9;&#9;node    = 0x2A0736,&#10;&#9;&#9;stand   = 0x00AACC,&#10;&#9;&#9;shovel  = 0xEB8540,&#10;&#9;&#9;rope    = 0xFFCC00,&#10;&#9;&#9;machete = 0x003366,&#10;&#9;&#9;ladder  = 0xC55186,&#10;&#9;&#9;use     = 0x36693E,&#10;&#9;&#9;action  = 0x00FFFF,&#10;&#9;&#9;lure    = 0xCCCCCC&#10;&#9;}&#10;&#10;&#9;local function deleteWaypointCall(menu)&#10;&#9;&#9;removewaypoint(menu.waypointID)&#10;&#9;end&#10;&#10;&#9;local function moveWaypointName()&#10;&#9;&#9;if resizedWpt == nil then&#10;&#9;&#9;&#9;return tern(draggedWpt == nil, 'Move Waypoint', 'Stop Moving')&#10;&#9;&#9;end&#10;&#9;end&#10;&#10;&#9;local function moveWaypointCall(menu)&#10;&#9;&#9;if draggedWpt == nil then&#10;&#9;&#9;&#9;draggedWpt = menu.waypoint&#10;&#9;&#9;else&#10;&#9;&#9;&#9;draggedWpt = nil&#10;&#9;&#9;end&#10;&#9;end&#10;&#10;&#9;local function resizeWaypointName()&#10;&#9;&#9;if draggedWpt == nil then&#10;&#9;&#9;&#9;return tern(resizedWpt == nil, 'Resize Waypoint', 'Stop Resizing')&#10;&#9;&#9;end&#10;&#9;end&#10;&#10;&#9;local function resizeWaypointCall(menu)&#10;&#9;&#9;if resizedWpt == nil then&#10;&#9;&#9;&#9;resizedWpt = menu.waypoint&#10;&#9;&#9;else&#10;&#9;&#9;&#9;resizedWpt = nil&#10;&#9;&#9;end&#10;&#9;end&#10;&#10;&#9;registermessagehandler('contextMenu_waypoint', moveWaypointName, moveWaypointCall)&#10;&#9;registermessagehandler('contextMenu_waypoint', resizeWaypointName, resizeWaypointCall)&#10;&#9;registermessagehandler('contextMenu_waypoint', 'Delete Waypoint', deleteWaypointCall)&#10;&#9;registermessagehandler('contextMenu_waypoint', MENU_SEPARATOR, nil)&#10;&#10;&#9;local xOffset, yOffset, worldWidth, worldHeight, x, y, z, topLeftTilePos,&#10;&#9;      botRightTilePos, width, height, text, label&#10;&#9;local waypointRect = {}&#10;&#10;&#9;function gettilepos(x, y, z)&#10;&#9;&#9;local tile = getobjectarea(x, y, z)&#10;&#10;&#9;&#9;if tile == nil then&#10;&#9;&#9;&#9;local xDiff, yDiff = x - $posx, y - $posy&#10;&#9;&#9;&#9;if math.abs($posx - x) &lt;= 7 then&#10;&#9;&#9;&#9;&#9;tile = getobjectarea(x, $posy, $posz)&#10;&#9;&#9;&#9;&#9;xDiff = 0&#10;&#9;&#9;&#9;elseif math.abs($posy - y) &lt;= 5 then&#10;&#9;&#9;&#9;&#9;tile = getobjectarea($posx, y, $posz)&#10;&#9;&#9;&#9;&#9;yDiff = 0&#10;&#9;&#9;&#9;else&#10;&#9;&#9;&#9;&#9;tile = getobjectarea($posx, $posy, $posz)&#10;&#9;&#9;&#9;end&#10;&#10;&#9;&#9;&#9;-- Some strange stuff happens when you go from 0 to -1, so I'm&#10;&#9;&#9;&#9;-- adding this as a precaution.&#10;&#9;&#9;&#9;if tile ~= nil then&#10;&#9;&#9;&#9;&#9;local width, height = $worldwin.width, $worldwin.height&#10;&#10;&#9;&#9;&#9;&#9;tile.left    = tile.left    + (width * xDiff)&#10;&#9;&#9;&#9;&#9;tile.right   = tile.right   + (width * xDiff)&#10;&#9;&#9;&#9;&#9;tile.centerx = tile.centerx + (width * xDiff)&#10;&#9;&#9;&#9;&#9;tile.top     = tile.top     + (height * yDiff)&#10;&#9;&#9;&#9;&#9;tile.bottom  = tile.bottom  + (height * yDiff)&#10;&#9;&#9;&#9;&#9;tile.centery = tile.centery + (height * yDiff)&#10;&#9;&#9;&#9;end&#10;&#9;&#9;end&#10;&#10;&#9;&#9;return tile&#10;&#9;end&#10;&#10;&#9;useworldhud()&#10;init end&#10;&#10;setfontstyle('Tahoma', 7, 75, 0xFFFFFF, 1, 0x000000)&#10;&#10;xOffset, yOffset = $worldwin.left - $clientwin.left, $worldwin.top - $clientwin.top&#10;worldWidth, worldHeight = $worldwin.right - $worldwin.left - 2, $worldwin.bottom - $worldwin.top - 2&#10;&#10;local i = 0&#10;foreach settingsentry e 'Cavebot/Waypoints' do&#10;&#9;x, y, z = getsetting(e, 'Coordinates'):match(REGEX_SPA_COORDS)&#10;&#9;x, y, z = tonumber(x), tonumber(y), tonumber(z)&#10;&#10;&#9;if z == $posz then&#10;&#9;&#9;width, height = getsetting(e, 'Range'):match(REGEX_SPA_SIZE)&#10;&#9;&#9;width, height = tonumber(width), tonumber(height)&#10;&#10;&#9;&#9;topLeftTilePos = gettilepos(x, y, z)&#10;&#9;&#9;botRightTilePos = gettilepos(x + width - 1, y + height - 1, z)&#10;&#10;&#9;&#9;if topLeftTilePos and botRightTilePos then&#10;&#9;&#9;&#9;waypointRect.left   = math.max(topLeftTilePos.left  , 0)&#10;&#9;&#9;&#9;waypointRect.top    = math.max(topLeftTilePos.top   , 0)&#10;&#9;&#9;&#9;waypointRect.right  = math.min(botRightTilePos.right , worldWidth)&#10;&#9;&#9;&#9;waypointRect.bottom = math.min(botRightTilePos.bottom, worldHeight)&#10;&#9;&#9;&#9;waypointRect.width  = waypointRect.right - waypointRect.left&#10;&#9;&#9;&#9;waypointRect.height = waypointRect.bottom - waypointRect.top&#10;&#10;&#9;&#9;&#9;if waypointRect.width &gt; 0 and waypointRect.height &gt; 0 then&#10;&#9;&#9;&#9;&#9;label = getsetting(e, 'Label')&#10;&#9;&#9;&#9;&#9;text = tern(#label == 0, tostring(i), label .. ' (' .. i .. ')')&#10;&#9;&#9;&#9;&#9;wptType = getsetting(e, 'Type')&#10;&#10;&#9;&#9;&#9;&#9;setfillstyle('color', (waypointColors[wptType:lower()] or 0) + (math.floor(2.55*50)*16777216))&#10;&#9;&#9;&#9;&#9;drawroundrect(&#10;&#9;&#9;&#9;&#9;&#9;waypointRect.left,&#10;&#9;&#9;&#9;&#9;&#9;waypointRect.top,&#10;&#9;&#9;&#9;&#9;&#9;waypointRect.width,&#10;&#9;&#9;&#9;&#9;&#9;waypointRect.height,&#10;&#9;&#9;&#9;&#9;&#9;10, 10&#10;&#9;&#9;&#9;&#9;)&#10;&#10;&#9;&#9;&#9;&#9;if waypointRect.width &gt; 10 then&#10;&#9;&#9;&#9;&#9;&#9;drawtext(&#10;&#9;&#9;&#9;&#9;&#9;&#9;string.fit(text, waypointRect.width - 10, '...', true),&#10;&#9;&#9;&#9;&#9;&#9;&#9;waypointRect.left + 5,&#10;&#9;&#9;&#9;&#9;&#9;&#9;waypointRect.top + 3&#10;&#9;&#9;&#9;&#9;&#9;)&#10;&#9;&#9;&#9;&#9;&#9;drawtext(&#10;&#9;&#9;&#9;&#9;&#9;&#9;string.fit(wptType, waypointRect.width - 10, '...', true),&#10;&#9;&#9;&#9;&#9;&#9;&#9;waypointRect.left + 5,&#10;&#9;&#9;&#9;&#9;&#9;&#9;waypointRect.top + 15&#10;&#9;&#9;&#9;&#9;&#9;)&#10;&#9;&#9;&#9;&#9;end&#10;&#9;&#9;&#9;end&#10;&#9;&#9;end&#10;&#9;end&#10;&#10;&#9;i = i + 1&#10;end&#10;&#10;if contextmenuinfo() == nil then&#10;&#9;if draggedWpt then&#10;&#9;&#9;set(draggedWpt, 'Coordinates', string.format('x:%i, y:%i, z:%i', $cursorinfo.x, $cursorinfo.y, $cursorinfo.z))&#10;&#9;elseif resizedWpt then&#10;&#9;&#9;local x, y = get(resizedWpt, 'Coordinates'):match(REGEX_COORDS)&#10;&#9;&#9;x, y = tonumber(x), tonumber(y)&#10;&#10;&#9;&#9;set(resizedWpt, 'Range', string.format('%i x %i', math.max(1, 1 + ($cursorinfo.x - x)) , math.max(1, 1 + ($cursorinfo.y - y))))&#10;&#9;end&#10;end" enabled="yes" refreshRate="100"/>
        </HUDScripts>
    </HUDs>
    <GeneralSettings>
        <Input>
            <MouseOption mouseMode="Simulate Mouse"/>
            <MouseOption scrollMode="Use mouse wheel"/>
            <MouseOption stuckCursorPolicy="If Cavebot on, Release Instantly"/>
            <MouseOption moveSpeed="Instantaneous"/>
            <MouseOption clickWaitMin="30" clickWaitMax="60"/>
            <KeyboardOption keyboardMode="Simulate Keyboard"/>
            <KeyboardOption stuckCtrlShiftPolicy="If Cavebot on, Release Instantly"/>
            <KeyboardOption typeWaitMin="30" typeWaitMax="60"/>
            <KeyboardOption pressWaitMin="30" pressWaitMax="60"/>
            <FocusOption focusPolicy="Don't auto-focus"/>
            <FocusOption openMenuPolicy="Confirm if cavebotting"/>
        </Input>
    </GeneralSettings>
    <Alerts disableSounds="no">
        <alert name="Player On Screen" playSound="no" pauseBot="no" logout="no" safeList="&lt;SafeList&gt;&#10;"/>
        <alert name="Player Attacking" playSound="yes" pauseBot="no" logout="no" safeList="&lt;SafeList&gt;&#10;"/>
        <alert name="Monster Attacking" playSound="no" pauseBot="no" logout="no" safeList="&lt;SafeList&gt;&#10;"/>
        <alert name="Private Message" playSound="no" pauseBot="no" logout="no" safeList="&lt;SafeList&gt;&#10;"/>
        <alert name="Default Message" playSound="no" pauseBot="no" logout="no" safeList="&lt;SafeList&gt;&#10;"/>
        <alert name="GM Detected" playSound="yes" pauseBot="no" logout="no"/>
        <alert name="Disconnected" playSound="yes" pauseBot="no" logout="no"/>
        <alert name="Character Stuck" playSound="no" pauseBot="no" logout="no" standTime="30000"/>
        <alert name="Health Below" playSound="no" pauseBot="no" logout="no" healthPercent="50"/>
        <alert name="Mana Below" playSound="no" pauseBot="no" logout="no" manaPercent="50"/>
        <alert name="Unjust Kill" playSound="no" pauseBot="no" logout="no"/>
        <alert name="Enemies Online" playSound="no" pauseBot="no" logout="no" enemiesCount="50"/>
    </Alerts>
    <Cavebot enabled="yes">
        <Options>
            <Option shovel="3457"/>
            <Option rope="3003"/>
            <Option machete="3308"/>
            <Option pick="3456"/>
            <Option nodeRange="4"/>
            <Option pauseBotOnDeath="yes"/>
            <Option refillAmmo="no" refillAmmoMin="30" refillAmmoMax="70"/>
            <Option autoMount="no"/>
            <Option fireAvoidanceMin="15" fireAvoidanceMax="20"/>
            <Option energyAvoidanceMin="15" energyAvoidanceMax="20"/>
            <Option poisonAvoidanceMin="15" poisonAvoidanceMax="20"/>
            <Option walkThroughPlayers="yes"/>
            <Option walkMethod="Walk With Arrow Keys"/>
            <Option walkableItems=""/>
            <Option mapWalkDistMin="20" mapWalkDistMax="30"/>
            <Option userOptionsScript="{&#10; &quot;type&quot; : &quot;scriptinfo&quot;,&#10; &quot;name&quot; : &quot;XT Dwarfs Soldiers&quot;,&#10; &quot;version&quot; : &quot;1.0.0&quot;&#10;}&#10;,&#10;{&#10; &quot;type&quot;    : &quot;group&quot;,&#10; &quot;name&quot;    : &quot;XT General Options&quot;,&#10; &quot;children&quot;: [&#10;  {&#10;   &quot;type&quot;  : &quot;spinbox&quot;,&#10;   &quot;name&quot;  : &quot;CapLeaveHunting&quot;,&#10;   &quot;text&quot;  : &quot;Cap to go deposit:&quot;,&#10;   &quot;min&quot; : 0,&#10;   &quot;max&quot; : 200,&#10;   &quot;value&quot; : 50&#10;  },&#10;  {&#10;   &quot;type&quot;  : &quot;spinbox&quot;,&#10;   &quot;name&quot;  : &quot;StaminaLoggout&quot;,&#10;   &quot;text&quot;  : &quot;Stamina for Loggout:&quot;,&#10;   &quot;min&quot; : 0,&#10;   &quot;max&quot; : 2000,&#10;   &quot;value&quot; : 840&#10;  }&#10; ]&#10;},&#10;{&#10;&#9;&quot;type&quot;     : &quot;group&quot;,&#10;&#9;&quot;name&quot;     : &quot;General Information&quot;,&#10;&#9;&quot;text&quot;     : &quot;Screen shot on advance:&quot;,&#10;&#9;&quot;children&quot; : [&#10;&#9;&#9;{&#10;&#9;&#9;&#9;&quot;type&quot;  : &quot;checkbox&quot;,&#10;&#9;&#9;&#9;&quot;name&quot;  : &quot;ssdeath&quot;,&#10;&#9;&#9;&#9;&quot;text&quot;  : &quot;Death&quot;,&#10;&#9;&#9;&#9;&quot;value&quot; : true&#10;&#9;&#9;},&#10;&#9;&#9;{&#10;&#9;&#9;&#9;&quot;type&quot;  : &quot;checkbox&quot;,&#10;&#9;&#9;&#9;&quot;name&quot;  : &quot;sslevel&quot;,&#10;&#9;&#9;&#9;&quot;text&quot;  : &quot;Level&quot;&#10;&#9;&#9;},&#10;&#9;&#9;{&#10;&#9;&#9;&#9;&quot;type&quot;  : &quot;checkbox&quot;,&#10;&#9;&#9;&#9;&quot;name&quot;  : &quot;ssmlevel&quot;,&#10;&#9;&#9;&#9;&quot;text&quot;  : &quot;Magic Level&quot;&#10;&#9;&#9;},&#10;&#9;&#9;{&#10;&#9;&#9;&#9;&quot;type&quot;  : &quot;checkbox&quot;,&#10;&#9;&#9;&#9;&quot;name&quot;  : &quot;dostuff&quot;,&#10;&#9;&#9;&#9;&quot;text&quot;  : &quot;First Fighting&quot;&#10;&#9;&#9;},&#10;&#9;&#9;{&#10;&#9;&#9;&#9;&quot;type&quot;  : &quot;checkbox&quot;,&#10;&#9;&#9;&#9;&quot;name&quot;  : &quot;ssaf&quot;,&#10;&#9;&#9;&#9;&quot;text&quot;  : &quot;Axe Fighting&quot;&#10;&#9;&#9;},&#10;&#9;&#9;{&#10;&#9;&#9;&#9;&quot;type&quot;  : &quot;checkbox&quot;,&#10;&#9;&#9;&#9;&quot;name&quot;  : &quot;sscf&quot;,&#10;&#9;&#9;&#9;&quot;text&quot;  : &quot;Club Fighting&quot;&#10;&#9;&#9;},&#10;&#9;&#9;{&#10;&#9;&#9;&#9;&quot;type&quot;  : &quot;checkbox&quot;,&#10;&#9;&#9;&#9;&quot;name&quot;  : &quot;sssf&quot;,&#10;&#9;&#9;&#9;&quot;text&quot;  : &quot;Sword Fighting&quot;&#10;&#9;&#9;},&#10;&#9;&#9;{&#10;&#9;&#9;&#9;&quot;type&quot;  : &quot;checkbox&quot;,&#10;&#9;&#9;&#9;&quot;name&quot;  : &quot;ssdf&quot;,&#10;&#9;&#9;&#9;&quot;text&quot;  : &quot;Distance Fighting&quot;&#10;&#9;&#9;},&#10;&#9;&#9;{&#10;&#9;&#9;&#9;&quot;type&quot;  : &quot;checkbox&quot;,&#10;&#9;&#9;&#9;&quot;name&quot;  : &quot;ssshf&quot;,&#10;&#9;&#9;&#9;&quot;text&quot;  : &quot;Shielding&quot;&#10;&#9;&#9;},&#10;&#9;&#9;{&#10;&#9;&#9;&#9;&quot;type&quot;  : &quot;checkbox&quot;,&#10;&#9;&#9;&#9;&quot;name&quot;  : &quot;ssfsf&quot;,&#10;&#9;&#9;&#9;&quot;text&quot;  : &quot;Fishing&quot;&#10;&#9;&#9;}&#10;&#9;]&#10;},&#10;{&#10;&#9;&quot;type&quot;     : &quot;group&quot;,&#10;&#9;&quot;name&quot;     : &quot;backpacksOptions&quot;,&#10;&#9;&quot;text&quot;     : &quot;Backpack - Setup&quot;,&#10;&#9;&quot;column&quot;   : 2,&#10;&#9;&quot;children&quot; : [&#10;&#9;&#9;{&#10;&#9;&#9;&#9;&quot;type&quot;  : &quot;checkbox&quot;,&#10;&#9;&#9;&#9;&quot;name&quot;  : &quot;autoopenbackpack&quot;,&#10;&#9;&#9;&#9;&quot;text&quot;  : &quot;Auto-Open Backpack&quot;,&#10;&#9;&#9;&#9;&quot;value&quot; : true&#10;&#9;&#9;},&#10;&#9;&#9;{&#10;&#9;&#9;&#9;&quot;type&quot;        : &quot;combobox&quot;,&#10;&#9;&#9;&#9;&quot;name&quot;        : &quot;MainBP&quot;,&#10;&#9;&#9;&#9;&quot;text&quot;        : &quot;Main Backpack:&quot;,&#10;&#9;&#9;&#9;&quot;description&quot; : &quot;The backpack that are on your bag slot?&quot;,&#10;&#9;&#9;&#9;&quot;items&quot;       : [&quot;Brown Backpack&quot;, &quot;Beach Backpack&quot;, &quot;Buggy Backpack&quot;, &quot;Blue Backpack&quot;, &quot;Brocade Backpack&quot;, &quot;Camouflage Backpack&quot;, &quot;Cake Backpack&quot;, &quot;Crown Backpack&quot;, &quot;Demon Backpack&quot;, &quot;Deepling Backpack&quot;, &quot;Dragon Backpack&quot;, &quot;Expedition Backpack&quot;, &quot;Fur Backpack&quot;, &quot;Golden Backpack&quot;, &quot;Green Backpack&quot;, &quot;Grey Backpack&quot;, &quot;Heart Backpack&quot;, &quot;Jewelled Backpack&quot;, &quot;Minotaur Backpack&quot;, &quot;Moon Backpack&quot;, &quot;Orange Backpack&quot;, &quot;Pannier Backpack&quot;, &quot;Pirate Backpack&quot;, &quot;Purple Backpack&quot;, &quot;Red Backpack&quot;, &quot;Santa Backpack&quot;, &quot;Yellow Backpack&quot;, &quot;Anniversary Backpack&quot;, &quot;Backpack of Holding&quot;, &quot;Crystal Backpack&quot;, &quot;Mushroom Backpack&quot;]&#10;&#9;&#9;}, &#9;&#9;&#10;&#9;&#9;{&#10;&#9;&#9;&#9;&quot;type&quot;        : &quot;combobox&quot;,&#10;&#9;&#9;&#9;&quot;name&quot;        : &quot;GoldBP&quot;,&#10;&#9;&#9;&#9;&quot;text&quot;        : &quot;Gold Backpack:&quot;,&#10;&#9;&#9;&#9;&quot;description&quot; : &quot;The backpack that carry gold?&quot;,&#10;&#9;&#9;&#9;&quot;items&quot;       : [&quot;Brown Backpack&quot;, &quot;Beach Backpack&quot;, &quot;Buggy Backpack&quot;, &quot;Blue Backpack&quot;, &quot;Brocade Backpack&quot;, &quot;Camouflage Backpack&quot;, &quot;Cake Backpack&quot;, &quot;Crown Backpack&quot;, &quot;Demon Backpack&quot;, &quot;Deepling Backpack&quot;, &quot;Dragon Backpack&quot;, &quot;Expedition Backpack&quot;, &quot;Fur Backpack&quot;, &quot;Golden Backpack&quot;, &quot;Green Backpack&quot;, &quot;Grey Backpack&quot;, &quot;Heart Backpack&quot;, &quot;Jewelled Backpack&quot;, &quot;Minotaur Backpack&quot;, &quot;Moon Backpack&quot;, &quot;Orange Backpack&quot;, &quot;Pannier Backpack&quot;, &quot;Pirate Backpack&quot;, &quot;Purple Backpack&quot;, &quot;Red Backpack&quot;, &quot;Santa Backpack&quot;, &quot;Yellow Backpack&quot;, &quot;Anniversary Backpack&quot;, &quot;Backpack of Holding&quot;, &quot;Crystal Backpack&quot;, &quot;Mushroom Backpack&quot;]&#10;&#9;&#9;},   &#9;&#10;&#9;&#9;{&#10;&#9;&#9;&#9;&quot;type&quot;        : &quot;combobox&quot;,&#10;&#9;&#9;&#9;&quot;name&quot;        : &quot;RareBP&quot;,&#10;&#9;&#9;&#9;&quot;text&quot;        : &quot;Rare Backpack:&quot;,&#10;&#9;&#9;&#9;&quot;description&quot; : &quot;The backpack that carry stackable items?&quot;,&#10;&#9;&#9;&#9;&quot;items&quot;       : [&quot;Brown Backpack&quot;, &quot;Beach Backpack&quot;, &quot;Buggy Backpack&quot;, &quot;Blue Backpack&quot;, &quot;Brocade Backpack&quot;, &quot;Camouflage Backpack&quot;, &quot;Cake Backpack&quot;, &quot;Crown Backpack&quot;, &quot;Demon Backpack&quot;, &quot;Deepling Backpack&quot;, &quot;Dragon Backpack&quot;, &quot;Expedition Backpack&quot;, &quot;Fur Backpack&quot;, &quot;Golden Backpack&quot;, &quot;Green Backpack&quot;, &quot;Grey Backpack&quot;, &quot;Heart Backpack&quot;, &quot;Jewelled Backpack&quot;, &quot;Minotaur Backpack&quot;, &quot;Moon Backpack&quot;, &quot;Orange Backpack&quot;, &quot;Pannier Backpack&quot;, &quot;Pirate Backpack&quot;, &quot;Purple Backpack&quot;, &quot;Red Backpack&quot;, &quot;Santa Backpack&quot;, &quot;Yellow Backpack&quot;, &quot;Anniversary Backpack&quot;, &quot;Backpack of Holding&quot;, &quot;Crystal Backpack&quot;, &quot;Mushroom Backpack&quot;]&#10;&#9;&#9;},   &#9;&#10;&#9;&#9;{&#10;&#9;&#9;&#9;&quot;type&quot;        : &quot;combobox&quot;,&#10;&#9;&#9;&#9;&quot;name&quot;        : &quot;MainBPDP&quot;,&#10;&#9;&#9;&#9;&quot;text&quot;        : &quot;Main Depot Backpack:&quot;,&#10;&#9;&#9;&#9;&quot;description&quot; : &quot;The main backpack on Depot?&quot;,&#10;&#9;&#9;&#9;&quot;items&quot;       : [&quot;Brown Backpack&quot;, &quot;Beach Backpack&quot;, &quot;Buggy Backpack&quot;, &quot;Blue Backpack&quot;, &quot;Brocade Backpack&quot;, &quot;Camouflage Backpack&quot;, &quot;Cake Backpack&quot;, &quot;Crown Backpack&quot;, &quot;Demon Backpack&quot;, &quot;Deepling Backpack&quot;, &quot;Dragon Backpack&quot;, &quot;Expedition Backpack&quot;, &quot;Fur Backpack&quot;, &quot;Golden Backpack&quot;, &quot;Green Backpack&quot;, &quot;Grey Backpack&quot;, &quot;Heart Backpack&quot;, &quot;Jewelled Backpack&quot;, &quot;Minotaur Backpack&quot;, &quot;Moon Backpack&quot;, &quot;Orange Backpack&quot;, &quot;Pannier Backpack&quot;, &quot;Pirate Backpack&quot;, &quot;Purple Backpack&quot;, &quot;Red Backpack&quot;, &quot;Santa Backpack&quot;, &quot;Yellow Backpack&quot;, &quot;Anniversary Backpack&quot;, &quot;Backpack of Holding&quot;, &quot;Crystal Backpack&quot;, &quot;Mushroom Backpack&quot;]&#10;&#9;&#9;},   &#9;&#10;&#9;&#9;{&#10;&#9;&#9;&#9;&quot;type&quot;        : &quot;combobox&quot;,&#10;&#9;&#9;&#9;&quot;name&quot;        : &quot;StackBPDP&quot;,&#10;&#9;&#9;&#9;&quot;text&quot;        : &quot;Stack Depot Backpack:&quot;,&#10;&#9;&#9;&#9;&quot;description&quot; : &quot;The backpack that carry stackable items on dp?&quot;,&#10;&#9;&#9;&#9;&quot;items&quot;       : [&quot;Brown Backpack&quot;, &quot;Beach Backpack&quot;, &quot;Buggy Backpack&quot;, &quot;Blue Backpack&quot;, &quot;Brocade Backpack&quot;, &quot;Camouflage Backpack&quot;, &quot;Cake Backpack&quot;, &quot;Crown Backpack&quot;, &quot;Demon Backpack&quot;, &quot;Deepling Backpack&quot;, &quot;Dragon Backpack&quot;, &quot;Expedition Backpack&quot;, &quot;Fur Backpack&quot;, &quot;Golden Backpack&quot;, &quot;Green Backpack&quot;, &quot;Grey Backpack&quot;, &quot;Heart Backpack&quot;, &quot;Jewelled Backpack&quot;, &quot;Minotaur Backpack&quot;, &quot;Moon Backpack&quot;, &quot;Orange Backpack&quot;, &quot;Pannier Backpack&quot;, &quot;Pirate Backpack&quot;, &quot;Purple Backpack&quot;, &quot;Red Backpack&quot;, &quot;Santa Backpack&quot;, &quot;Yellow Backpack&quot;, &quot;Anniversary Backpack&quot;, &quot;Backpack of Holding&quot;, &quot;Crystal Backpack&quot;, &quot;Mushroom Backpack&quot;]&#10;&#9;&#9;}&#9;&#10;&#9;]&#10;}"/>
        </Options>
        <SpecialAreas>
            <Area name="NewSpecialArea" x="32442" y="31992" z="10" type="Square (Filled)" width="3" height="3" avoidance="250" waitTimeMin="0" waitTimeMax="0" policy="Cavebot &amp; Targeting" ignoreWhenLuring="no" ignoreWhenLooting="no" comment=""/>
        </SpecialAreas>
        <CavebotScripts>
            <CavebotScript name="AntiFurniture" script="auto(1000, 1200) &#10;antifurnituretrap(itemname($rhand.id), 30)" enabled="yes"/>
            <CavebotScript name="BackpackFunction" script="function openBackpacks(wait, bpMain, ...)&#10;&#9;wait = wait or true&#10;&#9;MainBP = bpMain or $back.id&#10;&#9;backpackNames = {...}&#10;&#10;&#9;if not bpMain then&#10;&#9;&#9;return&#10;&#9;else&#10;&#9;&#9;openitem(MainBP, &quot;back&quot;)&#10;&#9;&#9;waitcontainer(MainBP)&#10;&#9;&#9;resizewindows(MainBP)&#10;&#9;&#9;waitping()&#10;&#9;end&#10;&#10;&#9;for _, v in ipairs(backpackNames) do&#10;&#9;&#9;openitem(v, MainBP, true)&#10;&#9;&#9;if wait then&#10;&#9;&#9;&#9;waitcontainer(v)&#10;&#9;&#9;end&#10;&#9;&#9;resizewindows(v)&#10;&#9;&#9;waitping()&#10;&#9;end&#10;end" enabled="yes"/>
            <CavebotScript name="CheckBackpack" script="auto(1000)&#10;&#10;local mainbp = getlootingdestination('mainbp')&#10;local rarebp = getlootingdestination('rarebp')&#10;local goldbp = getlootingdestination('goldbp')&#10;&#10;if (windowcount() &lt; 3) then&#10;&#9;setsetting('Looting/OpenNextBP', 'no')&#9;&#10;&#9;closewindows()&#9;&#10;&#9;pausewalking(5000)&#10;&#9;openBackpacks(true, mainbp, rarebp, goldbp)&#10;&#9;pausewalking(5000)&#10;&#9;resizewindows()&#10;&#9;setsetting('Looting/OpenNextBP', 'yes')&#10;end" enabled="yes"/>
            <CavebotScript name="Reconnect" script="auto(1000)&#10;if not ($connected) then&#10;&#9;restoreclient()&#10;&#9;reconnect()&#10;end" enabled="yes"/>
            <CavebotScript name="AntiTargettingClientBug" script="auto(200)&#10;if $targettime &gt; 30000 and $attacked.id &gt; 0 then&#10;    stopattack()&#10;end" enabled="yes"/>
        </CavebotScripts>
        <WaypointSection name="StartPlace">
            <Waypoint type="Action" x="32564" y="31994" z="9" rangeX="1" rangeY="1" label="checkLocation" script="if ($posz == 9 or $posz == 10) then&#10;&#9;gotolabel('start', 'Hunting')&#10;elseif ($posz == 8) then&#10;&#9;gotolabel('enterCave', 'Depositing')&#10;elseif ($posz == 7 and $posy &gt; 31859) then&#10;&#9;gotolabel('start', 'Depositing')&#10;elseif ($posz == 7 and $posy &lt; 31859) then&#10;&#9;gotolabel('entradp', 'Depositing')&#10;end"/>
        </WaypointSection>
        <WaypointSection name="Hunting">
            <Waypoint type="Node" x="32564" y="31994" z="9" rangeX="1" rangeY="1" label="start"/>
            <Waypoint type="Node" x="32570" y="31994" z="9" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="32573" y="31997" z="9" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="32580" y="31996" z="9" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="32586" y="31995" z="9" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="32581" y="31996" z="9" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="32573" y="31995" z="9" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="32565" y="31994" z="9" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="32558" y="31993" z="9" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="32551" y="31986" z="9" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="32552" y="31980" z="9" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="32551" y="31973" z="9" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="32550" y="31986" z="9" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="32546" y="31990" z="9" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="32540" y="31988" z="9" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="32537" y="31983" z="9" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="32530" y="31978" z="9" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="32525" y="31990" z="9" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="32518" y="31993" z="9" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="32530" y="31984" z="9" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="32536" y="31983" z="9" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="32539" y="31987" z="9" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="32542" y="31991" z="9" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="32550" y="31991" z="9" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="32554" y="31993" z="9" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="32559" y="31994" z="9" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="32563" y="31994" z="9" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32564" y="31992" z="9" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="32567" y="31994" z="10" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="32578" y="31993" z="10" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="32587" y="31991" z="10" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="32593" y="31992" z="10" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="32599" y="31996" z="10" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="32603" y="31994" z="10" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="32612" y="31992" z="10" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="32617" y="31990" z="10" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="32601" y="31996" z="10" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="32588" y="31991" z="10" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="32577" y="31992" z="10" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="32573" y="31994" z="10" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="32567" y="31994" z="10" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="32564" y="31992" z="10" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="32564" y="31987" z="10" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="32564" y="31982" z="10" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="32562" y="31980" z="10" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="32561" y="31977" z="10" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="32559" y="31966" z="10" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="32560" y="31976" z="10" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="32564" y="31980" z="10" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="32564" y="31990" z="10" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="32559" y="31990" z="10" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="32552" y="31991" z="10" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="32548" y="31994" z="10" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="32544" y="31992" z="10" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="32538" y="31990" z="10" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="32532" y="31989" z="10" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="32531" y="31984" z="10" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="32534" y="31979" z="10" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="32531" y="31989" z="10" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="32524" y="31992" z="10" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="32517" y="31996" z="10" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="32511" y="31993" z="10" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="32503" y="31995" z="10" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="32498" y="31995" z="10" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="32494" y="31997" z="10" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="32486" y="31997" z="10" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="32478" y="31997" z="10" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="32473" y="31996" z="10" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="32468" y="31994" z="10" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="32462" y="31994" z="10" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="32456" y="31994" z="10" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="32449" y="31994" z="10" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="32445" y="31994" z="10" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="32443" y="31991" z="10" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="32443" y="31983" z="10" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="32443" y="31988" z="10" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="32449" y="31994" z="10" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="32458" y="31994" z="10" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="32465" y="31994" z="10" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="32472" y="31996" z="10" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="32477" y="31997" z="10" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="32481" y="31997" z="10" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="32486" y="31997" z="10" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="32494" y="31997" z="10" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="32498" y="31995" z="10" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="32509" y="31994" z="10" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="32514" y="31993" z="10" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="32517" y="31995" z="10" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="32523" y="31996" z="10" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="32529" y="31990" z="10" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="32543" y="31992" z="10" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="32552" y="31993" z="10" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="32563" y="31991" z="10" rangeX="1" rangeY="1"/>
            <Waypoint type="Rope" x="32564" y="31992" z="10" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="32564" y="31994" z="9" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32548" y="31988" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32562" y="31994" z="8" rangeX="1" rangeY="1"/>
            <Waypoint type="Action" x="32564" y="31994" z="9" rangeX="1" rangeY="1" script="local captogo = getuseroption('CapLeaveHunting')&#10;local StaminaLoggout = getuseroption('StaminaLoggout')&#10;&#10;if ($cap &lt; captogo or ($stamina &lt; StaminaLoggout)) then&#10;&#9;gotolabel('start', 'Depositing')&#10;else&#10;&#9;gotolabel('start', 'Hunting')&#10;end"/>
        </WaypointSection>
        <WaypointSection name="Depositing">
            <Waypoint type="Stand" x="32564" y="31994" z="9" rangeX="1" rangeY="1" label="start"/>
            <Waypoint type="Stand" x="32562" y="31994" z="9" rangeX="1" rangeY="1"/>
            <Waypoint type="Rope" x="32562" y="31994" z="9" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32560" y="31994" z="8" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32548" y="31988" z="8" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32550" y="31988" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32549" y="31983" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32546" y="31975" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32545" y="31970" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32539" y="31970" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32533" y="31962" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32522" y="31951" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32521" y="31941" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32524" y="31939" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32525" y="31927" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32525" y="31918" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32542" y="31915" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32545" y="31896" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32547" y="31889" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32551" y="31882" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32556" y="31880" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32562" y="31878" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32594" y="31866" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32595" y="31859" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32599" y="31850" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32607" y="31843" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32616" y="31834" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32620" y="31827" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32626" y="31823" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32636" y="31812" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32640" y="31804" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32640" y="31790" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32640" y="31781" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32640" y="31731" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32641" y="31707" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32665" y="31696" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32681" y="31686" z="7" rangeX="1" rangeY="1" label="entradp"/>
            <Waypoint type="Stand" x="32682" y="31685" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32682" y="31687" z="8" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32684" y="31686" z="8" rangeX="1" rangeY="1"/>
            <Waypoint type="Action" x="32684" y="31686" z="8" rangeX="1" rangeY="1" script="if not (islocation(5)) then&#10;&#9;gotolabel('entradp', 'Depositing')&#10;else&#10;&#9;say('hi')&#10;&#9;wait(1000,2000)&#10;&#9;npcsay('deposit all')&#10;&#9;wait(1000,2000)&#10;&#9;npcsay('yes')&#10;&#9;wait(1000,2000)&#10;&#9;npcsay('balance')&#10;end"/>
            <Waypoint type="Stand" x="32681" y="31686" z="8" rangeX="1" rangeY="1"/>
            <Waypoint type="Action" x="32681" y="31686" z="8" rangeX="1" rangeY="1" script="depotaction('maindpbp', 'rarebp', {'b','raredpbp'})"/>
            <Waypoint type="Stand" x="32682" y="31685" z="8" rangeX="1" rangeY="1"/>
            <Waypoint type="Ladder" x="32682" y="31685" z="8" rangeX="1" rangeY="1"/>
            <Waypoint type="Action" x="32682" y="31687" z="7" rangeX="1" rangeY="1" script="if not (islocation(5)) then&#10;&#9;gotolabel('entradp', 'Depositing')&#10;end&#10;&#10;local stamina = getuseroption('StaminaLoggout')&#10;&#10;if ($stamina &lt; stamina) then&#10;&#9;closeclient()&#10;end&#10;&#10;closewindows()&#10;pausewalking(1000)"/>
            <Waypoint type="Stand" x="32653" y="31705" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32650" y="31706" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32641" y="31711" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32640" y="31718" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32640" y="31728" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32640" y="31738" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32640" y="31750" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32638" y="31769" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32637" y="31773" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32637" y="31779" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32637" y="31787" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32637" y="31799" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32637" y="31807" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32623" y="31839" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32621" y="31841" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32616" y="31842" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32595" y="31852" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32595" y="31862" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32594" y="31866" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32590" y="31870" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32573" y="31872" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32563" y="31877" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32552" y="31881" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32542" y="31886" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32540" y="31893" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32536" y="31897" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32526" y="31911" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32526" y="31921" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32527" y="31932" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32523" y="31949" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32530" y="31955" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32551" y="31984" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32549" y="31988" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32548" y="31988" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32547" y="31989" z="8" rangeX="1" rangeY="1" label="enterCave"/>
            <Waypoint type="Stand" x="32560" y="31994" z="8" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32562" y="31994" z="8" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32563" y="31995" z="9" rangeX="1" rangeY="1"/>
            <Waypoint type="Action" x="32562" y="31995" z="9" rangeX="1" rangeY="1" script="local captogo = getuseroption('CapLeaveHunting')&#10;local StaminaLoggout = getuseroption('StaminaLoggout')&#10;if ($cap &lt; captogo or $stamina &lt; StaminaLoggout) then&#10;&#9;gotolabel('start', 'Depositing')&#10;else&#10;&#9;gotolabel('start', 'Hunting')&#10;end"/>
        </WaypointSection>
    </Cavebot>
    <Looting enabled="yes">
        <Options>
            <Option range="10"/>
            <Option moveItemsQuickly="yes"/>
            <Option eatFoodFromCorpse="yes"/>
            <Option openNextBP="yes"/>
            <Option openBPsAtLogin="no"/>
            <Option valuableBodies="3000"/>
            <Option ultraValuableBodies="50000"/>
            <Option alertOnValuableBodies="no"/>
            <Option openValuableBodiesOnly="no"/>
            <Option openUltraValuableBodiesImmediately="no"/>
            <Option policy="Smart Looting"/>
            <LootingDestinations>
                <lootingDestination name="mainbp" destination="brown backpack"/>
                <lootingDestination name="goldbp" destination="yellow backpack"/>
                <lootingDestination name="rarebp" destination="golden backpack"/>
                <lootingDestination name="maindpbp" destination="fur backpack"/>
                <lootingDestination name="raredpbp" destination="green backpack"/>
            </LootingDestinations>
        </Options>
        <LootingProfile name="LootList" isCurrentProfile="yes">
            <LootItem name="gold coin" id="3031" sellPrice="1" weight="0.10" destinationName="goldbp" action="Loot" lootCondition="Has Cap to Loot" itemCategory="a" alertOnDrop="no" alertOnMiss="no"/>
            <LootItem name="small amethyst" id="3033" sellPrice="200" weight="0.10" destinationName="rarebp" action="Loot" lootCondition="Has Cap to Loot" itemCategory="b" alertOnDrop="no" alertOnMiss="no"/>
            <LootItem name="iron ore" id="5880" sellPrice="500" weight="2.00" destinationName="rarebp" action="Loot" lootCondition="Has Cap to Loot" itemCategory="b" alertOnDrop="no" alertOnMiss="no"/>
            <LootItem name="axe ring" id="3092" sellPrice="100" weight="0.90" destinationName="rarebp" action="Loot" lootCondition="Has Cap to Loot" itemCategory="b" alertOnDrop="no" alertOnMiss="no"/>
            <LootItem name="dwarven ring" id="3097" sellPrice="100" weight="1.10" destinationName="rarebp" action="Loot" lootCondition="Has Cap to Loot" itemCategory="b" alertOnDrop="no" alertOnMiss="no"/>
            <LootItem name="wolf paw" id="5897" sellPrice="70" weight="0.80" destinationName="rarebp" action="Loot" lootCondition="Has Cap to Loot" itemCategory="b" alertOnDrop="no" alertOnMiss="no"/>
            <LootItem name="bear paw" id="5896" sellPrice="100" weight="1.20" destinationName="rarebp" action="Loot" lootCondition="Has Cap to Loot" itemCategory="b" alertOnDrop="no" alertOnMiss="no"/>
            <LootItem name="honeycomb" id="5902" sellPrice="40" weight="0.80" destinationName="rarebp" action="Loot" lootCondition="Has Cap to Loot" itemCategory="b" alertOnDrop="no" alertOnMiss="no"/>
            <LootItem name="bat wing" id="5894" sellPrice="50" weight="1.00" destinationName="rarebp" action="Loot" lootCondition="Has Cap to Loot" itemCategory="b" alertOnDrop="no" alertOnMiss="no"/>
            <LootItem name="goblin ear" id="11539" sellPrice="20" weight="0.75" destinationName="rarebp" action="Loot" lootCondition="Has Cap to Loot" itemCategory="b" alertOnDrop="no" alertOnMiss="no"/>
            <LootItem name="lump of dirt" id="9692" sellPrice="10" weight="0.68" destinationName="rarebp" action="Loot" lootCondition="Has Cap to Loot" itemCategory="b" alertOnDrop="no" alertOnMiss="no"/>
            <LootItem name="poison spider shell" id="11485" sellPrice="10" weight="1.30" destinationName="rarebp" action="Loot" lootCondition="Has Cap to Loot" itemCategory="b" alertOnDrop="no" alertOnMiss="no"/>
            <LootItem name="coal" id="12600" sellPrice="20" weight="5.00" destinationName="rarebp" action="Loot" lootCondition="Has Cap to Loot" itemCategory="b" alertOnDrop="no" alertOnMiss="no"/>
        </LootingProfile>
    </Looting>
    <Supplies>
        <Options>
            <Option defaultBackpack=""/>
            <Option extraCashMin="1000" extraCashMax="2500"/>
            <Option autoSwitchProfiles="no"/>
        </Options>
        <SupplyProfile name="SupplyList" vocation="Knight" level="37" isCurrentProfile="yes"/>
    </Supplies>
    <Targeting enabled="yes" allowDiagonalMovement="no" autoSwitchProfiles="no" nonPvPMode="no">
        <TargetingProfile name="TargetList" vocation="Knight" level="16" targetMustBeShootable="no" targetMustBeReachable="yes" isCurrentProfile="yes">
            <Priorities>
                <Priority health="20"/>
                <Priority proximity="30"/>
                <Priority danger="10"/>
                <Priority random="0"/>
                <Priority lure="30"/>
                <Priority stick="2"/>
            </Priorities>
            <Creatures>
                <Creature name="Dwarf" amount="Any" category="" dontLoot="no" playAlarm="no" syncSpells="no">
                    <FightingSettings>
                        <Setting index="0" hpFrom="0" hpTo="100" danger="0" onlyIfTrapped="no" mustAttackMe="no" action="Attack" avoidance="No Avoidance" desiredStance="Reach" distance="3" attackMode="No Change" firstSpell="" secondSpell="" thirdSpell="" fourthSpell="" spamMin="300" spamMax="500"/>
                        <Setting index="1" hpFrom="0" hpTo="0" danger="0" onlyIfTrapped="no" mustAttackMe="no" action="Attack" avoidance="No Avoidance" desiredStance="No Movement" distance="3" attackMode="No Change" firstSpell="" secondSpell="" thirdSpell="" fourthSpell="" spamMin="300" spamMax="500"/>
                        <Setting index="2" hpFrom="0" hpTo="0" danger="0" onlyIfTrapped="no" mustAttackMe="no" action="Attack" avoidance="No Avoidance" desiredStance="No Movement" distance="3" attackMode="No Change" firstSpell="" secondSpell="" thirdSpell="" fourthSpell="" spamMin="300" spamMax="500"/>
                        <Setting index="3" hpFrom="0" hpTo="0" danger="0" onlyIfTrapped="no" mustAttackMe="no" action="Attack" avoidance="No Avoidance" desiredStance="No Movement" distance="3" attackMode="No Change" firstSpell="" secondSpell="" thirdSpell="" fourthSpell="" spamMin="300" spamMax="500"/>
                    </FightingSettings>
                </Creature>
                <Creature name="Rotworm" amount="Any" category="" dontLoot="no" playAlarm="no" syncSpells="no">
                    <FightingSettings>
                        <Setting index="0" hpFrom="0" hpTo="100" danger="0" onlyIfTrapped="no" mustAttackMe="no" action="Attack" avoidance="No Avoidance" desiredStance="Reach" distance="3" attackMode="No Change" firstSpell="" secondSpell="" thirdSpell="" fourthSpell="" spamMin="300" spamMax="500"/>
                        <Setting index="1" hpFrom="0" hpTo="0" danger="0" onlyIfTrapped="no" mustAttackMe="no" action="Attack" avoidance="No Avoidance" desiredStance="No Movement" distance="3" attackMode="No Change" firstSpell="" secondSpell="" thirdSpell="" fourthSpell="" spamMin="300" spamMax="500"/>
                        <Setting index="2" hpFrom="0" hpTo="0" danger="0" onlyIfTrapped="no" mustAttackMe="no" action="Attack" avoidance="No Avoidance" desiredStance="No Movement" distance="3" attackMode="No Change" firstSpell="" secondSpell="" thirdSpell="" fourthSpell="" spamMin="300" spamMax="500"/>
                        <Setting index="3" hpFrom="0" hpTo="0" danger="0" onlyIfTrapped="no" mustAttackMe="no" action="Attack" avoidance="No Avoidance" desiredStance="No Movement" distance="3" attackMode="No Change" firstSpell="" secondSpell="" thirdSpell="" fourthSpell="" spamMin="300" spamMax="500"/>
                    </FightingSettings>
                </Creature>
                <Creature name="Bat" amount="Any" category="" dontLoot="no" playAlarm="no" syncSpells="no">
                    <FightingSettings>
                        <Setting index="0" hpFrom="0" hpTo="100" danger="0" onlyIfTrapped="no" mustAttackMe="no" action="Attack" avoidance="No Avoidance" desiredStance="Reach" distance="3" attackMode="No Change" firstSpell="" secondSpell="" thirdSpell="" fourthSpell="" spamMin="300" spamMax="500"/>
                        <Setting index="1" hpFrom="0" hpTo="0" danger="0" onlyIfTrapped="no" mustAttackMe="no" action="Attack" avoidance="No Avoidance" desiredStance="No Movement" distance="3" attackMode="No Change" firstSpell="" secondSpell="" thirdSpell="" fourthSpell="" spamMin="300" spamMax="500"/>
                        <Setting index="2" hpFrom="0" hpTo="0" danger="0" onlyIfTrapped="no" mustAttackMe="no" action="Attack" avoidance="No Avoidance" desiredStance="No Movement" distance="3" attackMode="No Change" firstSpell="" secondSpell="" thirdSpell="" fourthSpell="" spamMin="300" spamMax="500"/>
                        <Setting index="3" hpFrom="0" hpTo="0" danger="0" onlyIfTrapped="no" mustAttackMe="no" action="Attack" avoidance="No Avoidance" desiredStance="No Movement" distance="3" attackMode="No Change" firstSpell="" secondSpell="" thirdSpell="" fourthSpell="" spamMin="300" spamMax="500"/>
                    </FightingSettings>
                </Creature>
                <Creature name="Poison Spider" amount="Any" category="" dontLoot="no" playAlarm="no" syncSpells="no">
                    <FightingSettings>
                        <Setting index="0" hpFrom="0" hpTo="100" danger="0" onlyIfTrapped="no" mustAttackMe="no" action="Attack" avoidance="No Avoidance" desiredStance="Reach" distance="3" attackMode="No Change" firstSpell="" secondSpell="" thirdSpell="" fourthSpell="" spamMin="300" spamMax="500"/>
                        <Setting index="1" hpFrom="0" hpTo="0" danger="0" onlyIfTrapped="no" mustAttackMe="no" action="Attack" avoidance="No Avoidance" desiredStance="No Movement" distance="3" attackMode="No Change" firstSpell="" secondSpell="" thirdSpell="" fourthSpell="" spamMin="300" spamMax="500"/>
                        <Setting index="2" hpFrom="0" hpTo="0" danger="0" onlyIfTrapped="no" mustAttackMe="no" action="Attack" avoidance="No Avoidance" desiredStance="No Movement" distance="3" attackMode="No Change" firstSpell="" secondSpell="" thirdSpell="" fourthSpell="" spamMin="300" spamMax="500"/>
                        <Setting index="3" hpFrom="0" hpTo="0" danger="0" onlyIfTrapped="no" mustAttackMe="no" action="Attack" avoidance="No Avoidance" desiredStance="No Movement" distance="3" attackMode="No Change" firstSpell="" secondSpell="" thirdSpell="" fourthSpell="" spamMin="300" spamMax="500"/>
                    </FightingSettings>
                </Creature>
                <Creature name="Wolf" amount="Any" category="" dontLoot="no" playAlarm="no" syncSpells="no">
                    <FightingSettings>
                        <Setting index="0" hpFrom="0" hpTo="100" danger="0" onlyIfTrapped="no" mustAttackMe="no" action="Attack" avoidance="No Avoidance" desiredStance="Reach" distance="3" attackMode="No Change" firstSpell="" secondSpell="" thirdSpell="" fourthSpell="" spamMin="300" spamMax="500"/>
                        <Setting index="1" hpFrom="0" hpTo="0" danger="0" onlyIfTrapped="no" mustAttackMe="no" action="Attack" avoidance="No Avoidance" desiredStance="No Movement" distance="3" attackMode="No Change" firstSpell="" secondSpell="" thirdSpell="" fourthSpell="" spamMin="300" spamMax="500"/>
                        <Setting index="2" hpFrom="0" hpTo="0" danger="0" onlyIfTrapped="no" mustAttackMe="no" action="Attack" avoidance="No Avoidance" desiredStance="No Movement" distance="3" attackMode="No Change" firstSpell="" secondSpell="" thirdSpell="" fourthSpell="" spamMin="300" spamMax="500"/>
                        <Setting index="3" hpFrom="0" hpTo="0" danger="0" onlyIfTrapped="no" mustAttackMe="no" action="Attack" avoidance="No Avoidance" desiredStance="No Movement" distance="3" attackMode="No Change" firstSpell="" secondSpell="" thirdSpell="" fourthSpell="" spamMin="300" spamMax="500"/>
                    </FightingSettings>
                </Creature>
                <Creature name="Goblin" amount="Any" category="" dontLoot="no" playAlarm="no" syncSpells="no">
                    <FightingSettings>
                        <Setting index="0" hpFrom="0" hpTo="100" danger="0" onlyIfTrapped="no" mustAttackMe="no" action="Attack" avoidance="No Avoidance" desiredStance="Reach" distance="3" attackMode="No Change" firstSpell="" secondSpell="" thirdSpell="" fourthSpell="" spamMin="300" spamMax="500"/>
                        <Setting index="1" hpFrom="0" hpTo="0" danger="0" onlyIfTrapped="no" mustAttackMe="no" action="Attack" avoidance="No Avoidance" desiredStance="No Movement" distance="3" attackMode="No Change" firstSpell="" secondSpell="" thirdSpell="" fourthSpell="" spamMin="300" spamMax="500"/>
                        <Setting index="2" hpFrom="0" hpTo="0" danger="0" onlyIfTrapped="no" mustAttackMe="no" action="Attack" avoidance="No Avoidance" desiredStance="No Movement" distance="3" attackMode="No Change" firstSpell="" secondSpell="" thirdSpell="" fourthSpell="" spamMin="300" spamMax="500"/>
                        <Setting index="3" hpFrom="0" hpTo="0" danger="0" onlyIfTrapped="no" mustAttackMe="no" action="Attack" avoidance="No Avoidance" desiredStance="No Movement" distance="3" attackMode="No Change" firstSpell="" secondSpell="" thirdSpell="" fourthSpell="" spamMin="300" spamMax="500"/>
                    </FightingSettings>
                </Creature>
                <Creature name="Bear" amount="Any" category="" dontLoot="no" playAlarm="no" syncSpells="no">
                    <FightingSettings>
                        <Setting index="0" hpFrom="0" hpTo="100" danger="0" onlyIfTrapped="no" mustAttackMe="no" action="Attack" avoidance="No Avoidance" desiredStance="Reach" distance="3" attackMode="No Change" firstSpell="" secondSpell="" thirdSpell="" fourthSpell="" spamMin="300" spamMax="500"/>
                        <Setting index="1" hpFrom="0" hpTo="0" danger="0" onlyIfTrapped="no" mustAttackMe="no" action="Attack" avoidance="No Avoidance" desiredStance="No Movement" distance="3" attackMode="No Change" firstSpell="" secondSpell="" thirdSpell="" fourthSpell="" spamMin="300" spamMax="500"/>
                        <Setting index="2" hpFrom="0" hpTo="0" danger="0" onlyIfTrapped="no" mustAttackMe="no" action="Attack" avoidance="No Avoidance" desiredStance="No Movement" distance="3" attackMode="No Change" firstSpell="" secondSpell="" thirdSpell="" fourthSpell="" spamMin="300" spamMax="500"/>
                        <Setting index="3" hpFrom="0" hpTo="0" danger="0" onlyIfTrapped="no" mustAttackMe="no" action="Attack" avoidance="No Avoidance" desiredStance="No Movement" distance="3" attackMode="No Change" firstSpell="" secondSpell="" thirdSpell="" fourthSpell="" spamMin="300" spamMax="500"/>
                    </FightingSettings>
                </Creature>
                <Creature name="Dwarf Soldier" amount="Any" category="" dontLoot="no" playAlarm="no" syncSpells="no">
                    <FightingSettings>
                        <Setting index="0" hpFrom="0" hpTo="100" danger="0" onlyIfTrapped="no" mustAttackMe="no" action="Attack" avoidance="No Avoidance" desiredStance="Reach" distance="3" attackMode="No Change" firstSpell="" secondSpell="" thirdSpell="" fourthSpell="" spamMin="300" spamMax="500"/>
                        <Setting index="1" hpFrom="0" hpTo="0" danger="0" onlyIfTrapped="no" mustAttackMe="no" action="Attack" avoidance="No Avoidance" desiredStance="No Movement" distance="3" attackMode="No Change" firstSpell="" secondSpell="" thirdSpell="" fourthSpell="" spamMin="300" spamMax="500"/>
                        <Setting index="2" hpFrom="0" hpTo="0" danger="0" onlyIfTrapped="no" mustAttackMe="no" action="Attack" avoidance="No Avoidance" desiredStance="No Movement" distance="3" attackMode="No Change" firstSpell="" secondSpell="" thirdSpell="" fourthSpell="" spamMin="300" spamMax="500"/>
                        <Setting index="3" hpFrom="0" hpTo="0" danger="0" onlyIfTrapped="no" mustAttackMe="no" action="Attack" avoidance="No Avoidance" desiredStance="No Movement" distance="3" attackMode="No Change" firstSpell="" secondSpell="" thirdSpell="" fourthSpell="" spamMin="300" spamMax="500"/>
                    </FightingSettings>
                </Creature>
                <Creature name="Dwarf Guard" amount="Any" category="" dontLoot="no" playAlarm="yes" syncSpells="no">
                    <FightingSettings>
                        <Setting index="0" hpFrom="0" hpTo="100" danger="0" onlyIfTrapped="no" mustAttackMe="yes" action="Attack" avoidance="No Avoidance" desiredStance="Reach" distance="3" attackMode="No Change" firstSpell="" secondSpell="" thirdSpell="" fourthSpell="" spamMin="300" spamMax="500"/>
                        <Setting index="1" hpFrom="0" hpTo="0" danger="0" onlyIfTrapped="no" mustAttackMe="no" action="Attack" avoidance="No Avoidance" desiredStance="No Movement" distance="3" attackMode="No Change" firstSpell="" secondSpell="" thirdSpell="" fourthSpell="" spamMin="300" spamMax="500"/>
                        <Setting index="2" hpFrom="0" hpTo="0" danger="0" onlyIfTrapped="no" mustAttackMe="no" action="Attack" avoidance="No Avoidance" desiredStance="No Movement" distance="3" attackMode="No Change" firstSpell="" secondSpell="" thirdSpell="" fourthSpell="" spamMin="300" spamMax="500"/>
                        <Setting index="3" hpFrom="0" hpTo="0" danger="0" onlyIfTrapped="no" mustAttackMe="no" action="Attack" avoidance="No Avoidance" desiredStance="No Movement" distance="3" attackMode="No Change" firstSpell="" secondSpell="" thirdSpell="" fourthSpell="" spamMin="300" spamMax="500"/>
                    </FightingSettings>
                </Creature>
                <Creature name="Others" amount="Any" category="" dontLoot="no" playAlarm="no" syncSpells="no">
                    <FightingSettings>
                        <Setting index="0" hpFrom="0" hpTo="100" danger="0" onlyIfTrapped="yes" mustAttackMe="yes" action="Attack" avoidance="No Avoidance" desiredStance="No Movement" distance="3" attackMode="No Change" firstSpell="" secondSpell="" thirdSpell="" fourthSpell="" spamMin="300" spamMax="500"/>
                        <Setting index="1" hpFrom="0" hpTo="0" danger="0" onlyIfTrapped="no" mustAttackMe="no" action="Attack" avoidance="No Avoidance" desiredStance="No Movement" distance="3" attackMode="No Change" firstSpell="" secondSpell="" thirdSpell="" fourthSpell="" spamMin="300" spamMax="500"/>
                        <Setting index="2" hpFrom="0" hpTo="0" danger="0" onlyIfTrapped="no" mustAttackMe="no" action="Attack" avoidance="No Avoidance" desiredStance="No Movement" distance="3" attackMode="No Change" firstSpell="" secondSpell="" thirdSpell="" fourthSpell="" spamMin="300" spamMax="500"/>
                        <Setting index="3" hpFrom="0" hpTo="0" danger="0" onlyIfTrapped="no" mustAttackMe="no" action="Attack" avoidance="No Avoidance" desiredStance="No Movement" distance="3" attackMode="No Change" firstSpell="" secondSpell="" thirdSpell="" fourthSpell="" spamMin="300" spamMax="500"/>
                    </FightingSettings>
                </Creature>
            </Creatures>
        </TargetingProfile>
    </Targeting>
    <OtherBots>
        <HealingPaths/>
        <TargetingPaths/>
    </OtherBots>
</WindbotSettings>
