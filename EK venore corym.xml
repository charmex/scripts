<?xml version="1.0" encoding="UTF-8"?>
<WindbotSettings>
    <Healer>
        <SpellHealer enabled="yes">
            <HealRule name="Exura Ico" spell="Wound Cleansing" condition="Health Percent below" conditionMin="70" conditionMax="75" extraCondition="No Extra Condition" extraConditionMin="55" extraConditionMax="55" enabled="yes" spamMin="600" spamMax="800" triggerKey="&lt;no key&gt;" dontOverrideActions="no"/>
        </SpellHealer>
        <PotionHealer enabled="yes">
            <HealRule name="Ghp" spell="Strong Health Potion" condition="Health Percent below" conditionMin="40" conditionMax="42" extraCondition="No Extra Condition" extraConditionMin="37" extraConditionMax="37" enabled="yes" spamMin="1000" spamMax="1200" triggerKey="&lt;no key&gt;" dontOverrideActions="no"/>
            <HealRule name="Mp" spell="Mana Potion" condition="Mana below" conditionMin="52" conditionMax="52" extraCondition="No Extra Condition" extraConditionMin="0" extraConditionMax="0" enabled="yes" spamMin="1000" spamMax="1200" triggerKey="&lt;no key&gt;" dontOverrideActions="no"/>
        </PotionHealer>
        <ConditionHealer enabled="yes">
            <HealRule name="Exura Ico Paral" spell="Wound Cleansing" condition="Paralyzed" conditionMin="0" conditionMax="0" extraCondition="No Extra Condition" extraConditionMin="0" extraConditionMax="0" enabled="yes" spamMin="100" spamMax="130" triggerKey="&lt;no key&gt;" dontOverrideActions="no"/>
        </ConditionHealer>
        <ManaTrainer manaTrainCondition="Mana Percent above" manaTrainMin="87" manaTrainMax="93" enabled="yes">
            <HealRule name="NewHealRule" spell="Wound Cleansing" extraCondition="No Extra Condition" extraConditionMin="0" extraConditionMax="0" enabled="yes" spamMin="200" spamMax="500" triggerKey="&lt;no key&gt;" dontOverrideActions="no"/>
        </ManaTrainer>
    </Healer>
    <Scripter>
        <HotkeyScripts>
            <HotkeyScript name="PauseHotkey" script="if not $cavebot or not $targeting then&#13;&#10;    listas('Enabling Cavebot and Targeting')&#13;&#10;    setcavebot('on')&#13;&#10;    settargeting('on')&#13;&#10;    wait(1000)&#13;&#10;else&#13;&#10;    listas('Disabling Cavebot and Targeting')&#13;&#10;    setcavebot('off')&#13;&#10;    settargeting('off')&#13;&#10;    stopattack()&#13;&#10;    wait(1000)&#13;&#10;end" triggerKey="Pause" hotkeyTriggerMode="0"/>
            <HotkeyScript name="Showbot" script="showbot()&#10;wait(2000)" triggerKey="Shift + F11" hotkeyTriggerMode="0"/>
        </HotkeyScripts>
        <PersistentScripts>
            <PersistentScript name="SafeBank" script="auto(700)&#10;&#10;&#10;foreach newmessage m do&#10;&#9;if m.content == &quot;There is not enough gold on your account.&quot; and m.type == 6 then&#10;&#9;&#9;logout()&#10;&#9;end&#10;end" enabled="yes"/>
            <PersistentScript name="Backpacks" script="auto(5000)&#10;setlootingdestination(&quot;mainbp&quot;, getuseroption(&quot;mainbp&quot;))&#10;setlootingdestination(&quot;goldbp&quot;, getuseroption(&quot;goldbp&quot;))&#10;setlootingdestination(&quot;rarebp&quot;, getuseroption(&quot;rarebp&quot;))&#10;setlootingdestination(&quot;rarebpn&quot;, getuseroption(&quot;rarebpn&quot;))&#10;setlootingdestination(&quot;maindp&quot;, getuseroption(&quot;maindp&quot;))&#10;setlootingdestination(&quot;stackdp&quot;, getuseroption(&quot;stackdp&quot;))&#10;setlootingdestination(&quot;nstackdp&quot;, getuseroption(&quot;nstackdp&quot;))" enabled="yes"/>
            <PersistentScript name="NewPersistentScript" script="auto(5000)&#10;&#10;&#10;if getuseroption(&quot;HpName&quot;) == &quot;Health Potion&quot; then&#10;&#9;setsetting('PotionHealer/Rules/Ghp/Spell', 'Health Potion')&#10;elseif getuseroption(&quot;HpName&quot;) == &quot;Strong Health Potion&quot; then&#10;&#9;setsetting('PotionHealer/Rules/Ghp/Spell', 'Strong Health Potion')&#10;elseif getuseroption(&quot;HpName&quot;) == &quot;Great Health Potion&quot; then&#10;&#9;setsetting('PotionHealer/Rules/Ghp/Spell', 'Great Health Potion')&#10;else&#10;&#9;setsetting('PotionHealer/Rules/Ghp/Spell', 'Ultimate Health Potion')&#10;end" enabled="yes"/>
            <PersistentScript name="SafeReconnect" script="init start&#10;&#9;-- VERSION 2.1.0&#10;&#9;-- If ReopenBps is set to true then it'll try to reopen the visible backpacks on the main backpack&#10;&#9;-- setting it to false will just ignore your bps after you are logged in&#10;&#10;&#9;local ReopenBps = true&#10;&#10;&#9;-- If IgnoreServerSave is set to false it'll wait to relog if server save is occurring&#10;&#9;-- setting it to true will try to relog even on server saving time&#10;&#10;&#9;local IgnoreServerSave = false&#10;&#10;&#9;-- [[ ONLY EDIT SPECIAL CHECKS IF YOU KNOW WHAT YOU'RE DOING ]]--&#10;&#10;&#9;-- special checks are the checks it'll do after you login&#10;&#9;-- for example: if you are skulled, inside temple, etc ...&#10;&#10;&#9;local SpecialChecks = {&#10;&#9;&#9;{&#10;&#9;&#9;&#9;function()&#10;&#9;&#9;&#9;&#9;return isontemple()&#10;&#9;&#9;&#9;end,&#10;&#9;&#9;&#9;function()&#10;&#9;&#9;&#9;&#9;return messagebox('Reconnect Issue', 'Reconnect persistent was disabled because your character was inside a temple.\nThe reconnect will enable itself again when you login manually.')&#10;&#9;&#9;&#9;end&#10;&#9;&#9;},&#10;&#9;&#9;{&#10;&#9;&#9;&#9;function()&#10;&#9;&#9;&#9;&#9;return ($self.skull == SKULL_RED or $self.skull == SKULL_BLACK) and $pzone&#10;&#9;&#9;&#9;end,&#10;&#9;&#9;&#9;function()&#10;&#9;&#9;&#9;&#9;return messagebox('Reconnect Issue', 'Reconnect persistent was disabled because your character have gained a red/black skull.\nThe reconnect will enable itself again when you login manually.')&#10;&#9;&#9;&#9;end&#10;&#9;&#9;},&#10;&#9;&#9;{&#10;&#9;&#9;&#9;function()&#10;&#9;&#9;&#9;&#9;return $stamina &lt;= 14*60 and $pzone&#10;&#9;&#9;&#9;end,&#10;&#9;&#9;&#9;function()&#10;&#9;&#9;&#9;&#9;return messagebox('Reconnect Issue', 'Reconnect persistent was disabled because your character had less than 14 hours of stamina and was inside a protection zone.\nThe reconnect will enable itself again when you login manually.')&#10;&#9;&#9;&#9;end&#10;&#9;&#9;},&#10;&#9;}&#10;&#10;&#9;-- DO NOT EDIT BELOW --&#10;&#9;local reconState = 1&#10;&#10;&#9;if $curscript.type == 'cavebot' then&#10;&#9;&#9;reconState = -1&#10;&#9;&#9;messagebox('Reconnect Issue', 'Reconnect should be placed at Scripter/Persistents and not Cavebot/Scripter.\nChange this setting to run it properly.')&#10;&#9;end&#10;&#10;&#9;local openFunc = function()&#10;&#9;&#9;local lifeTime = $timems&#10;&#9;&#9;local reopenLogin = getsetting('Looting/OpenBPsAtLogin')&#10;&#10;&#9;&#9;setsetting('Looting/OpenBPsAtLogin', 'no')&#10;&#9;&#9;reopenwindows('small')&#10;&#10;&#9;&#9;while $openingbps do&#10;&#9;&#9;&#9;wait(100)&#10;&#10;&#9;&#9;&#9;if $timems - lifeTime &gt;= 10000 and not $pzone then&#10;&#10;&#9;&#9;&#9;&#9;setsetting('Looting/OpenBPsAtLogin', reopenLogin)&#10;&#9;&#9;&#9;&#9;return false&#10;&#9;&#9;&#9;end&#10;&#9;&#9;end&#10;&#10;&#9;&#9;setsetting('Looting/OpenBPsAtLogin', reopenLogin)&#10;&#9;&#9;return true&#10;&#9;end&#10;&#10;&#9;local randTimeSS = math.random(60, 660)&#10;&#10;init end&#10;&#10;auto(1000)&#10;&#10;if IgnoreSS or (sstime() &gt;= 600 and sstime() &lt;= 85800 - randTimeSS) and reconState == 1 and not $connected then&#10;&#9;randTimeSS = math.random(60, 660)&#10;&#9;setsetting('Targeting/Enabled', 'no')&#10;&#9;setsetting('Cavebot/Enabled', 'no')&#10;&#9;reconnect(true)&#10;&#10;&#9;if $connected then&#10;&#9;&#9;pausewalking(10000)&#10;&#9;else&#10;&#9;&#9;return&#10;&#9;end&#10;&#10;&#9;for _, callback in ipairs(SpecialChecks) do&#10;&#9;&#9;if callback[1]() then&#10;&#9;&#9;&#9;reconState = 0&#10;&#10;&#9;&#9;&#9;logout()&#10;&#10;&#9;&#9;&#9;return callback[2] ~= nil and callback[2]()&#10;&#9;&#9;end&#10;&#9;end&#10;&#10;&#9;if ReopenBps then&#10;&#9;&#9;local clientMin = $minimized&#10;&#10;&#9;&#9;if clientMin and not $addons.enabled then&#10;&#9;&#9;&#9;restoreclient() waitping()&#10;&#9;&#9;end&#10;&#10;&#9;&#9;local reopenSuccess = openFunc()&#10;&#10;&#9;&#9;if not reopenSuccess then&#10;&#9;&#9;&#9;messagebox('Reconnect Issue', 'Took too long to open them, they could be already opened but for safety reasons you were alerted. Please open them manually.')&#10;&#9;&#9;&#9;pausewalking(0)&#10;&#9;&#9;&#9;setsetting('Targeting/Enabled', 'yes')&#10;&#9;&#9;&#9;setsetting('Cavebot/Enabled', 'yes')&#10;&#10;&#9;&#9;&#9;for _ = 1, 10 do&#10;&#9;&#9;&#9;&#9;beep()&#10;&#9;&#9;&#9;&#9;wait(1000)&#10;&#9;&#9;&#9;end&#10;&#9;&#9;end&#10;&#10;&#9;&#9;if clientMin and not $minimized then&#10;&#9;&#9;&#9;minimizeclient()&#10;&#9;&#9;end&#10;&#9;end&#10;&#10;&#9;if not ($targeting and $cavebot) then&#10;&#9;&#9;setsetting('Targeting/Enabled', 'yes')&#10;&#9;&#9;setsetting('Cavebot/Enabled', 'yes')&#10;&#9;&#9;pausewalking(0)&#10;&#9;end&#10;end&#10;&#10;if $connected and reconState == 0 then&#10;&#9;messagebox(&quot;Reconnect&quot;, &quot;Reconnect hotkey as been enabled again because you have logged manually.&quot;)&#10;&#9;reconState = 1&#10;end" enabled="yes"/>
            <PersistentScript name="openBps" script="auto(60000)&#10;if windowcount() &lt; 4 and $wptsection == &quot;Spawns&quot; then&#10;pausewalking(30000)&#10;&#9;local mainbp = getlootingdestination(&quot;mainbp&quot;)&#10;&#9;local goldbp = getlootingdestination(&quot;goldbp&quot;)&#10;&#9;local rarebp = getlootingdestination(&quot;rarebp&quot;)&#10;&#9;local rarebpn = getlootingdestination(&quot;rarebpn&quot;)&#10;&#9;&#10;&#9;while windowcount() &lt; 4 do&#10;&#9;closewindows()waitping()&#10;&#9;openitem(mainbp,&quot;back&quot;)waitping()&#10;&#9;resizewindows()waitping()&#10;&#9;openitem(goldbp,mainbp,true)waitping()&#10;&#9;resizewindows()waitping()&#10;&#9;openitem(rarebp,mainbp,true)waitping()&#10;&#9;resizewindows()waitping()&#10;&#9;openitem(rarebpn,mainbp,true)waitping()&#10;&#9;resizewindows()waitping()&#10;&#9;end&#10;pausewalking(0)&#10;end" enabled="yes"/>
            <PersistentScript name="keepUtura" script="keeputura = true&#10;whatutura = &quot;utura&quot;&#10;auto(1000)&#10;if keeputura then&#10;&#9;if $wptsection == &quot;Hunt&quot; or $wptsection == &quot;Spawns&quot; then&#10;&#9;&#9;if $recoverytime &lt;= 2000 and $hp &lt;= ($maxhp - 400) then&#10;&#9;&#9;&#9;cast(whatutura)waitping()&#10;&#9;&#9;end&#10;&#9;end&#10;end" enabled="yes"/>
            <PersistentScript name="SpellCaster" script="init start&#10; &#10;&#9;local Monsters = {&quot;Corym Charlatan&quot;,&quot;Corym Skirmisher&quot;,&quot;Corym vanguard&quot;}&#10; &#10;&#9;local Players = {&#10;&#9;&#9;Consider = false,&#10;&#9;&#9;Distance = 10,&#10;&#9;&#9;FloorDifference = 1,&#10;&#9;&#9;SafeList = {&quot;Bubble&quot;, &quot;Eternal Oblivion&quot;},&#10;&#9;}&#10; &#10;&#9;local Spells = {&#10;&#9;&#9;{Name = &quot;exori&quot;, Amount = 4}&#10;&#9;}&#10; &#10;&#9;local SpecialAreas = {&#10;--&#9;&#9;{min x, max x, min y, max y, z}&#10;&#9;}&#10; &#10;&#9;local UseTargetState = false&#10;&#9;&#10;&#9;-- DO NOT CHANGE ANYTHING BELOW THIS LINE&#10; &#10;&#9;local i, LastFloor, Exhaust = 1, $posz, $timems&#10; &#10;&#9;while Spells[i] ~= nil do&#10;&#9;&#9;Spells[i].Info = spellinfo(Spells[i].Name)&#10; &#10;&#9;&#9;if Spells[i].Info.words == 0 then&#10;&#9;&#9;&#9;table.remove(Spells, i)&#10;&#9;&#9;else&#10;&#9;&#9;&#9;Spells[i].Monsters = Spells[i].Monsters or Monsters&#10;&#9;&#9;&#9;Spells[i].NeedDirection = table.find({&quot;WaveSmall&quot;, &quot;WaveVerySmall&quot;, &quot;WaveBig&quot;, &quot;BeamSmall&quot;, &quot;BeamBig&quot;, &quot;Front&quot;, &quot;Strike&quot;}, Spells[i].Info.castarea) ~= nil&#10;&#9;&#9;&#9;Spells[i].AttackSupport = Spells[i].Info.group:match(&quot;Support&quot;) ~= nil&#10; &#10;&#9;&#9;&#9;table.lower(Spells[i].Monsters)&#10;&#9;&#9;&#9;i = i + 1&#10;&#9;&#9;end&#10;&#9;end&#10; &#10;init end&#10; &#10;auto(200, 400)&#10; &#10;if $posz ~= LastFloor then&#10;&#9;LastFloor, Exhaust = $posz, $timems + 2000&#10;&#9;return&#10;end&#10; &#10;if $timems &gt;= Exhaust and ($targeting or not UseTargetState) then&#10;&#9;for _, Spell in ipairs(Spells) do&#10;&#9;&#9;if cancast(Spell.Info) and not isinsidearea(SpecialAreas) then&#10;&#9;&#9;&#9;if Spell.Amount and (not Players.Consider or paroundfloorignore(Players.Distance, Players.FloorDifference, unpack(Players.SafeList)) == 0) then&#10;&#9;&#9;&#9;&#9;local BestAmount, BestDir = 0, $self.dir&#10; &#10;&#9;&#9;&#9;&#9;if Spell.NeedDirection then&#10;&#9;&#9;&#9;&#9;&#9;for Dir, Amount in pairs({n = 0, e = 0, s = 0, w = 0}) do&#10;&#9;&#9;&#9;&#9;&#9;&#9;Amount = maroundspell(Spell.Name, Dir, unpack(Spell.Monsters))&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#10;&#9;&#9;&#9;&#9;&#9;&#9;if Amount &gt; BestAmount or (Amount &gt;= BestAmount and Dir == $self.dir) then&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;BestAmount, BestDir = Amount, Dir&#10;&#9;&#9;&#9;&#9;&#9;&#9;end&#10;&#9;&#9;&#9;&#9;&#9;end&#10;&#9;&#9;&#9;&#9;else&#10;&#9;&#9;&#9;&#9;&#9;BestAmount = not Spell.AttackSupport and maroundspell(Spell.Name, BestDir, unpack(Spell.Monsters)) or maround(1, false, unpack(Spell.Monsters))&#10;&#9;&#9;&#9;&#9;end&#10;&#9;&#9;&#9;&#9;&#10;&#9;&#9;&#9;&#9;if BestAmount &gt;= math.max(Spell.Amount, 1) then&#10;&#9;&#9;&#9;&#9;&#9;while $self.dir ~= BestDir do&#10;&#9;&#9;&#9;&#9;&#9;&#9;turn(BestDir) waitping()&#10;&#9;&#9;&#9;&#9;&#9;end&#10;&#9;&#9;&#9;&#9;&#9;cast(Spell.Name) waitping()&#10;&#9;&#9;&#9;&#9;end&#10;&#9;&#9;&#9;elseif Spell.Hppc and $attacked.hppc &gt;= math.max(Spell.Hppc, 1) and table.find(Spell.Monsters, $attacked.name:lower()) and cancast(Spell.Info, $attacked) then&#10;&#9;&#9;&#9;&#9;cast(Spell.Name) waitping()&#10;&#9;&#9;&#9;end&#10;&#9;&#9;end&#10;&#9;end&#10;end" enabled="yes"/>
        </PersistentScripts>
    </Scripter>
    <HUDs>
        <HUDScripts>
            <HUDScript name="Stats Hud By Sirmate" script="&#9;&#10;&#10;    init start&#10;            --&#10;            --              88                                                                  &#10;            --              &quot;&quot;                                                ,d                &#10;            --                                                                88                &#10;            --   ,adPPYba,  88  8b,dPPYba,  88,dPYba,,adPYba,   ,adPPYYba,  MM88MMM  ,adPPYba,  &#10;            --   I8[    &quot;&quot;  88  88P'   &quot;Y8  88P'   &quot;88&quot;    &quot;8a  &quot;&quot;     `Y8    88    a8P_____88  &#10;            --    `&quot;Y8ba,   88  88          88      88      88  ,adPPPPP88    88    8PP&quot;&quot;&quot;&quot;&quot;&quot;&quot;  &#10;            --   aa    ]8I  88  88          88      88      88  88,    ,88    88,   &quot;8b,   ,aa  &#10;            --   `&quot;YbbdP&quot;'  88  88          88      88      88  `&quot;8bbdP&quot;Y8    &quot;Y888  `&quot;Ybbd8&quot;'  &#10;            --&#10;     &#10;            --   Name: Monitor My Stats&#10;            --   Last Updated: 19/12/2013&#10;            --   Version: 1.0&#10;     &#10;            filterinput(false, true, false, false)&#10;     &#10;            local HUD_Sections = {&#10;                    {Name = 'OTHERS', State = true, Items = {&#10;                                    {'Ping', function() return $ping .. ' (avg: ' .. $pingaverage .. ')' end},&#10;                                    {'Bank Balance', function() return num($balance) end},&#10;                            }&#10;                    },&#10;     &#10;                    {Name = 'CHARACTER STATS', State = true, Items = {&#10;                                    {'Level', function() return $level .. ' (' .. 100 - math.floor(($exp - expatlvl($level)) * 100 / (expatlvl($level + 1) - expatlvl($level))) .. '%)' end},&#10;                                    {'Experience', function() return num($exp) end},&#10;                                    {'Magic Level', function() return $mlevel .. ' (' .. 100 - $mlevelpc .. '%)' end},&#10;                                    {'Weapon Skill', function() local _ = WeaponSkill() return _.skill .. ' (' .. 100 - _.skillpc .. '%)' end},&#10;                                    {'Shielding', function() return $shielding .. ' (' .. 100 - $shieldingpc .. '%)' end},&#10;                                    {'Fishing', function() return $fishing .. ' (' .. 100 - $fishingpc .. '%)' end}&#10;                            }&#10;                    },&#10;     &#10;                    {Name = 'ENGINE STATES', State = true, Items = {&#10;                                    {'Spell Healer', function() return getsetting('SpellHealer/Enabled') end},&#10;                                    {'Potion Healer', function() return getsetting('PotionHealer/Enabled') end},&#10;                   &#9;&#9;&#9;&#9;&#9; {'Condition Healer', function() return getsetting('ConditionHealer/Enabled') end},&#10;                                    {'Mana Training', function() return getsetting('ManaTrainer/Enabled') end},&#10;                                    {'Cavebot', function() return getsetting('Cavebot/Enabled') end},&#10;                                    {'Looting', function() return getsetting('Looting/Enabled') end},&#10;                                    {'Targeting', function() return getsetting('Targeting/Enabled') end}&#10;                            }&#10;                    },&#10;     &#10;                    {Name = 'BOTTING STATS', State = true, Items = {&#10;                                    {'Experience per Hour', function() return num($exphour) end},&#10;                                    {'Experience Left', function() return num(exptolevel()) end},&#10;                                    {'Experience Today', function() return num($expgained) end},&#10;                                    {'Time to Next Level', function() return time(timetolevel()) end},&#10;                                    {'Played Time', function() return time(math.floor($timems / 1000)) end},&#10;                                    {'Stamina', function() return time($stamina) end}&#10;                            }&#10;                    }&#10;            }&#10;     &#10;        local HUD_Colors = {&#10;                    Font = color(255, 255, 255, 0),&#10;                    SectionHeaderBackground = {0.0, color(36, 68, 105, 20), 0.23, color(99, 99, 99, 20), 0.76, color(21, 39, 60, 20)},&#10;                    EntryNameBackground = {0.0, color(75, 75, 75, 20), 0.23, color(45, 45, 45, 20), 0.76, color(19, 19, 19, 20)},&#10;                    EntryValueBackground = {0.0, color(255, 100, 40, 20), 0.23, color(225, 80, 30, 20), 0.76, color(98, 13, 17, 20)},&#10;                    EntryValueEnabledBackground = {0.0, color(65, 96, 12, 20), 0.23, color(67, 99, 13, 20), 0.76, color(36, 52, 6, 20)},&#10;                    EntryValueDisabledBackground = {0.0, color(90, 12, 15, 20), 0.23, color(98, 13, 17, 20), 0.76, color(52, 6, 9, 20)},&#10;            }&#10;     &#10;            function WeaponSkill()&#10;                    local SkillTypes = {&#10;                            ['axe'] = {type = 'axe', skill = $axe, skillpc = $axepc},&#10;                            ['club'] = {type = 'club', skill = $club, skillpc = $clubpc},&#10;                            ['sword'] = {type = 'sword', skill = $sword, skillpc = $swordpc},&#10;                            ['bow'] = {type = 'distance', skill = $distance, skillpc = $distancepc},&#10;                            ['distance weapon'] = {type = 'distance', skill = $distance, skillpc = $distancepc},&#10;                            ['no weapon'] = {type = 'fist', skill = $fist, skillpc = $fistpc},&#10;                            ['rod'] = {type = 'magic', skill = $mlevel, skillpc = $mlevelpc},&#10;                            ['wand'] = {type = 'magic', skill = $mlevel, skillpc = $mlevelpc},&#10;                    }&#10;     &#10;                    return SkillTypes[findweapontype()]&#10;            end&#10;     &#10;            local Moving, Temp, Moved = false, {0, 0}, {0, 0}&#10;     &#10;            function inputevents(e)&#10;                    if (e.type == IEVENT_LMOUSEDOWN) then&#10;                            for _, Section in ipairs(HUD_Sections) do&#10;                                    if (e.elementid == Section.StateSwitch) then&#10;                                            Section.State = not Section.State&#10;                                    end&#10;                            end&#10;                    end&#10;     &#10;                    if (e.type == IEVENT_MMOUSEDOWN) then&#10;                Moving, Temp = true, {$cursor.x - Moved[1], $cursor.y - Moved[2]}&#10;            end&#10;     &#10;            if (e.type == IEVENT_MMOUSEUP) then&#10;                Moving = false&#10;            end&#10;            end&#10;    init end&#10;     &#10;    if (Moving) then&#10;        auto(10)&#10;        Moved = {$cursor.x - Temp[1], $cursor.y - Temp[2]}&#10;    end&#10;     &#10;    setposition($clientwin.left + 5 + Moved[1], $worldwin.top + Moved[2])&#10;    setfontstyle('Tahoma', 8, 75, 0xFFFFFF, 1, color(0, 0, 0, 20))&#10;     &#10;    local StringWidth, StringHeight = measurestring('TEMP')&#10;     &#10;    setfillstyle('gradient', 'linear', 2, 0, 0, 0, 22)&#10;    addgradcolors(unpack(HUD_Colors.SectionHeaderBackground))&#10;    drawroundrect(0, 0, 240, 21, 2, 2)&#10;    drawtext('SCRIPT INFO', 6, 21 / 2 - StringHeight * 0.5)&#10;     &#10;    setfillstyle('gradient', 'linear', 2, 0, 0, 0, 22)&#10;    addgradcolors(unpack(HUD_Colors.EntryValueBackground))&#10;    drawroundrect(130, 0, 110, 21, 2, 2)&#10;    drawtext('by Garkstal', 136, 21 / 2 - StringHeight * 0.5)&#10;     &#10;    setfontsize(7)&#10;     &#10;    local StringWidth, StringHeight = measurestring('TEMP')&#10;     &#10;    setfillstyle('gradient', 'linear', 2, 0, 0, 0, 16)&#10;    addgradcolors(unpack(HUD_Colors.EntryNameBackground))&#10;    drawroundrect(0, 24 + 0 * 18, 240, 15, 2, 2)&#10;    drawtext('[EK] Venore Coryms', 6, 24 + 0 * 18 + 15 / 2 - StringHeight * 0.5 + 1)&#10;     &#10;    setfillstyle('gradient', 'linear', 2, 0, 0, 0, 16)&#10;    addgradcolors(unpack(HUD_Colors.EntryNameBackground))&#10;    drawroundrect(0, 24 + 1 * 18, 240, 15, 2, 2)&#10;    drawtext('Script version:', 6, 24 + 1 * 18 + 15 / 2 - StringHeight * 0.5 + 1)&#10;     &#10;    setfillstyle('gradient', 'linear', 2, 0, 0, 0, 16)&#10;    addgradcolors(unpack(HUD_Colors.EntryValueBackground))&#10;    drawroundrect(130, 24 + 1 * 18, 110, 15, 2, 2)&#10;    drawtext('1.0.2', 136, 24 + 1 * 18 + 15 / 2 - StringHeight * 0.5 + 1)&#10;     &#10;    local YPosition, SectionRow, SectionItemsRow = 22 + 2 * 19, 0, 0&#10;    for _, Section in ipairs(HUD_Sections) do&#10;            setfontsize(8)&#10;     &#10;            local StringWidth, StringHeight = measurestring('TEMP')&#10;     &#10;            setfillstyle('gradient', 'linear', 2, 0, 0, 0, 21)&#10;            addgradcolors(unpack(HUD_Colors.SectionHeaderBackground))&#10;            drawroundrect(0, YPosition + (SectionRow * 23) + (SectionItemsRow * 19), 240, 20, 2, 2)&#10;            drawtext(Section.Name, 6, YPosition + (SectionRow * 23) + (SectionItemsRow * 19) + 20 / 2 - StringHeight * 0.5 + 1)&#10;     &#10;            setfillstyle('gradient', 'linear', 2, 0, 0, 0, 21)&#10;            if (Section.State) then&#10;                    addgradcolors(unpack(HUD_Colors.EntryValueEnabledBackground))&#10;            else&#10;                    addgradcolors(unpack(HUD_Colors.EntryValueDisabledBackground))&#10;            end&#10;            Section.StateSwitch = drawroundrect(220, YPosition + (SectionRow * 23) + (SectionItemsRow * 19), 20, 20, 2, 2)&#10;            drawtext('X', 228, YPosition + (SectionRow * 23) + (SectionItemsRow * 19) + 20 / 2 - StringHeight * 0.5 + 1)&#10;     &#10;            SectionRow = SectionRow + 1&#10;     &#10;            if (Section.State) then&#10;                    setfontsize(7)&#10;     &#10;                    local StringWidth, StringHeight = measurestring('TEMP')&#10;     &#10;                    for _, SectionItem in ipairs(Section.Items) do&#10;                            setfillstyle('gradient', 'linear', 2, 0, 0, 0, 17)     &#10;                            addgradcolors(unpack(HUD_Colors.EntryNameBackground))&#10;                            drawroundrect(0, YPosition + (SectionRow * 23) + (SectionItemsRow * 19), 240, 16, 2, 2)&#10;                            drawtext(SectionItem[1], 6, YPosition + (SectionRow * 23) + (SectionItemsRow * 19) + 16 / 2 - StringHeight * 0.5 + 1)&#10;     &#10;                            if (Section.Name == 'ENGINE STATES') then&#10;                                    local EngineCurrentState = SectionItem[2]()&#10;     &#10;                                    setfillstyle('gradient', 'linear', 2, 0, 0, 0, 17)&#10;                                    if (EngineCurrentState == 'yes') then&#10;                                            addgradcolors(unpack(HUD_Colors.EntryValueEnabledBackground))&#10;                                    else&#10;                                            addgradcolors(unpack(HUD_Colors.EntryValueDisabledBackground))&#10;                                    end&#10;                                    drawroundrect(130, YPosition + (SectionRow * 23) + (SectionItemsRow * 19), 110, 16, 2, 2)&#10;                                    drawtext((EngineCurrentState == 'yes' and ('On')) or ('Off'), 136, YPosition + (SectionRow * 23) + (SectionItemsRow * 19) + 16 / 2 - StringHeight * 0.5 + 1)&#10;                            else&#10;                                    setfillstyle('gradient', 'linear', 2, 0, 0, 0, 17)&#10;                                    addgradcolors(unpack(HUD_Colors.EntryValueBackground))&#10;                                    drawroundrect(130, YPosition + (SectionRow * 23) + (SectionItemsRow * 19), 110, 16, 2, 2)&#10;                                    drawtext(SectionItem[2](), 136, YPosition + (SectionRow * 23) + (SectionItemsRow * 19) + 16 / 2 - StringHeight * 0.5 + 1)&#10;                            end&#10;     &#10;                            SectionItemsRow = SectionItemsRow + 1&#10;                    end&#10;            end&#10;    end&#10;&#10;" enabled="no" refreshRate="100"/>
            <HUDScript name="MMH" script="&#9;&#10;&#10;    init start&#10;            --&#10;            --                        88                                                                  &#10;            --                        &quot;&quot;                                                ,d                &#10;            --                                                                          88                &#10;            --             ,adPPYba,  88  8b,dPPYba,  88,dPYba,,adPYba,   ,adPPYYba,  MM88MMM  ,adPPYba,  &#10;            --             I8[    &quot;&quot;  88  88P'   &quot;Y8  88P'   &quot;88&quot;    &quot;8a  &quot;&quot;     `Y8    88    a8P_____88  &#10;            --              `&quot;Y8ba,   88  88          88      88      88  ,adPPPPP88    88    8PP&quot;&quot;&quot;&quot;&quot;&quot;&quot;  &#10;            --             aa    ]8I  88  88          88      88      88  88,    ,88    88,   &quot;8b,   ,aa  &#10;            --   Author:   `&quot;YbbdP&quot;'  88  88          88      88      88  `&quot;8bbdP&quot;Y8    &quot;Y888  `&quot;Ybbd8&quot;'  &#10;            --  &#10;            --   Monitor My Hunting!&#10;            --&#10;            --   Version: 1.0&#10;            --   Created: 29.12.2013&#10;            --   Last update: 29.12.2013&#10;            --&#10;     &#10;            local MMH = {&#10;                    SHOW_ALL_ITEMS = false,&#10;                    SHOW_ALL_SUPPLIES = false,&#10;            }&#10;     &#10;            -- [[ Do not change anything below this line. ]] --&#10;     &#10;            -- [[ COLORS ]] --&#10;            MMH.COLORS = {}&#10;            MMH.COLORS.FONT_COLOR = color(255, 255, 255, 0)&#10;            MMH.COLORS.SECTION_HEADER_BACKGROUND = {0.0, color(36, 68, 105, 20), 0.23, color(99, 99, 99, 20), 0.76, color(21, 39, 60, 20)}&#10;            MMH.COLORS.ENTRY_NAME_BACKGROUND = {0.0, color(75, 75, 75, 20), 0.23, color(45, 45, 45, 20), 0.76, color(19, 19, 19, 20)}&#10;            MMH.COLORS.ENTRY_VALUE_BACKGROUND =  {0.0, color(255, 100, 40, 20), 0.23, color(225, 80, 30, 20), 0.76, color(98, 13, 17, 20)}&#10;            MMH.COLORS.RESULT_POSITIVE_BACKGROUND = {0.0, color(65, 96, 12, 20), 0.23, color(67, 99, 13, 20), 0.76, color(36, 52, 6, 20)}&#10;            MMH.COLORS.RESULT_NEGATIVE_BACKGROUND = {0.0, color(90, 12, 15, 20), 0.23, color(98, 13, 17, 20), 0.76, color(52, 6, 9, 20)}&#10;            MMH.COLORS.RESET_BUTTON_BACKGROUND = MMH.COLORS.RESULT_POSITIVE_BACKGROUND&#10;     &#10;            -- [[ ELEMENTS ]] --&#10;            MMH.ELEMENTS = {}&#10;            MMH.ELEMENTS.RESET_BUTTON = -1&#10;            MMH.ELEMENTS.SWITCH_ITEMS_LOOTED = -1&#10;            MMH.ELEMENTS.SWITCH_SUPPLIES_USED = -1&#10;     &#10;            -- [[ SECTION STATES ]] --&#10;            MMH.SECTIONS = {}&#10;            MMH.SECTIONS.ITEMS_LOOTED = true&#10;            MMH.SECTIONS.SUPPLIES_USED = true&#10;     &#10;            -- [[ OTHERS ]] --     &#10;            filterinput(false, true, false, false)&#10;     &#10;            local MOVING, TEMP, MOVED = false, {0, 0}, {0, 0}&#10;     &#10;            function inputevents(e)&#10;                    if (e.type == IEVENT_LMOUSEDOWN) then&#10;                            if (e.elementid == MMH.ELEMENTS.RESET_BUTTON) then&#10;                                    resetcharactertime()&#10;                                    resetlootcounter()&#10;                                    resetexpcounter()&#10;                            elseif (e.elementid == MMH.ELEMENTS.SWITCH_ITEMS_LOOTED) then&#10;                                    MMH.SECTIONS.ITEMS_LOOTED = not MMH.SECTIONS.ITEMS_LOOTED&#10;                            elseif (e.elementid == MMH.ELEMENTS.SWITCH_SUPPLIES_USED) then&#10;                                    MMH.SECTIONS.SUPPLIES_USED = not MMH.SECTIONS.SUPPLIES_USED&#10;                            end&#10;                    end&#10;     &#10;                    if (e.type == IEVENT_MMOUSEDOWN) then&#10;                            MOVING, TEMP = true, {$cursor.x - MOVED[1], $cursor.y - MOVED[2]}&#10;                    end&#10;     &#10;                    if (e.type == IEVENT_MMOUSEUP) then&#10;                            MOVING = false&#10;                    end&#10;            end&#10;    init end&#10;     &#10;    if (MOVING) then&#10;        auto(10)&#10;        MOVED = {$cursor.x - TEMP[1], $cursor.y - TEMP[2]}&#10;    end&#10;     &#10;    setposition($clientwin.right - 424 + MOVED[1], $worldwin.top + MOVED[2])&#10;    setfontstyle('Tahoma', 8, 75, MMH.COLORS.FONT_COLOR, 1, color(0, 0, 0, 20))&#10;     &#10;    local ROW_QUANTITY, STRING_WIDTH, STRING_HEIGHT = 0, measurestring('TEMP')&#10;    local ITEMS_LOOTED_WORTH, ITEM_LOOTED_QUANTITY, ITEM_LOOTED_WORTH = 0, 0, 0&#10;    local SUPPLIES_USED_WORTH, SUPPLY_USED_QUANTITY, SUPPLY_USED_WORTH = 0, 0, 0&#10;     &#10;    setfillstyle('gradient', 'linear', 2, 0, 0, 0, 21)&#10;    addgradcolors(unpack(MMH.COLORS.ENTRY_NAME_BACKGROUND))&#10;    drawroundrect(0, 0, 240, 20, 2, 2)&#10;    drawtext('Monitor My Hunting v1.0', 6, 20 / 2 - STRING_HEIGHT * 0.5)&#10;     &#10;    setfillstyle('gradient', 'linear', 2, 0, 0, 0, 21)&#10;    addgradcolors(unpack(MMH.COLORS.RESET_BUTTON_BACKGROUND))&#10;    MMH.ELEMENTS.RESET_BUTTON = drawroundrect(196, 0, 44, 20, 2, 2)&#10;    drawtext('RESET', 202, 20 / 2 - STRING_HEIGHT * 0.5)&#10;     &#10;    setfontsize(7)&#10;     &#10;    STRING_WIDTH, STRING_HEIGHT = measurestring('TEMP')&#10;     &#10;    setfillstyle('gradient', 'linear', 2, 0, 0, 0, 16)&#10;    addgradcolors(unpack(MMH.COLORS.ENTRY_NAME_BACKGROUND))&#10;    drawroundrect(0, 23, 240, 15, 2, 2)&#10;    drawtext('Looting Accuracy', 6, 23 + 15 / 2 - STRING_HEIGHT * 0.5 + 1)&#10;     &#10;    setfillstyle('gradient', 'linear', 2, 0, 0, 0, 16)&#10;    addgradcolors(unpack(MMH.COLORS.ENTRY_VALUE_BACKGROUND))&#10;    drawroundrect(130, 23, 110, 15, 2, 2)&#10;    drawtext(string.format('%.2f', $lootaccuracy) .. '%', 136, 23 + 15 / 2 - STRING_HEIGHT * 0.5 + 1)&#10;     &#10;    setfontsize(8)&#10;     &#10;    STRING_WIDTH, STRING_HEIGHT = measurestring('TEMP')&#10;     &#10;    setfillstyle('gradient', 'linear', 2, 0, 0, 0, 21)&#10;    addgradcolors(unpack(MMH.COLORS.SECTION_HEADER_BACKGROUND))&#10;    drawroundrect(0, 41, 240, 20, 2, 2)&#10;    drawtext('ITEMS LOOTED', 6, 41 + 20 / 2 - STRING_HEIGHT * 0.5)&#10;     &#10;    setfillstyle('gradient', 'linear', 2, 0, 0, 0, 21)&#10;    if (MMH.SECTIONS.ITEMS_LOOTED) then&#10;            addgradcolors(unpack(MMH.COLORS.RESULT_POSITIVE_BACKGROUND))&#10;    else&#10;            addgradcolors(unpack(MMH.COLORS.RESULT_NEGATIVE_BACKGROUND))&#10;    end&#10;    MMH.ELEMENTS.SWITCH_ITEMS_LOOTED = drawroundrect(220, 41, 20, 20, 2, 2)&#10;    drawtext('X', 228, 41 + 20 / 2 - STRING_HEIGHT * 0.5)&#10;     &#10;    setfontsize(7)&#10;     &#10;    STRING_WIDTH, STRING_HEIGHT = measurestring('TEMP')&#10;     &#10;    foreach lootingitem ItemEntry do&#10;            if (MMH.SHOW_ALL_ITEMS or ItemEntry.amountlooted &gt; 0) then&#10;                    ITEM_LOOTED_QUANTITY = ItemEntry.amountlooted&#10;                    ITEM_LOOTED_WORTH = ItemEntry.sellprice * ITEM_LOOTED_QUANTITY&#10;     &#10;                    if (MMH.SECTIONS.ITEMS_LOOTED) then&#10;                            setfillstyle('gradient', 'linear', 2, 0, 0, 0, 16)&#10;                            addgradcolors(unpack(MMH.COLORS.ENTRY_NAME_BACKGROUND))&#10;                            drawroundrect(0, 64 + ROW_QUANTITY * 18, 240, 15, 2, 2)&#10;                   &#10;                            setcompositionmode(CompositionMode_SourceOver)&#10;                            drawitem(ItemEntry.id, 6, 64 + ROW_QUANTITY * 18, 50, 100)&#10;                            setcompositionmode(CompositionMode_Automatic)&#10;     &#10;                            drawtext(((#ItemEntry.name &gt; 16 and string.match(string.sub(ItemEntry.name, 1, 16), '(.-)%s?$') .. '...') or ItemEntry.name):capitalizeall(), 28, 64 + ROW_QUANTITY * 18 + 15 / 2 - STRING_HEIGHT * 0.5)&#10;     &#10;                            setfillstyle('gradient', 'linear', 2, 0, 0, 0, 16)&#10;                            addgradcolors(unpack(MMH.COLORS.ENTRY_VALUE_BACKGROUND))&#10;                            drawroundrect(130, 64 + ROW_QUANTITY * 18, 110, 15, 2, 2)&#10;                            drawtext(num(ITEM_LOOTED_QUANTITY) .. ' (' .. math.floor(ITEM_LOOTED_WORTH / 100) / 10 .. 'K)', 136, 64 + ROW_QUANTITY * 18 + 15 / 2 - STRING_HEIGHT * 0.5)&#10;     &#10;                            ROW_QUANTITY = ROW_QUANTITY + 1&#10;                    end&#10;     &#10;                    ITEMS_LOOTED_WORTH = ITEMS_LOOTED_WORTH + ITEM_LOOTED_WORTH&#10;            end&#10;    end&#10;     &#10;    setfillstyle('gradient', 'linear', 2, 0, 0, 0, 16)&#10;    addgradcolors(unpack(MMH.COLORS.ENTRY_NAME_BACKGROUND))&#10;    drawroundrect(0, 64 + ROW_QUANTITY * 18, 240, 15, 2, 2)&#10;    drawtext('Total: ' .. num(ITEMS_LOOTED_WORTH) .. ' GPs', 6, 64 + ROW_QUANTITY * 18 + 15 / 2 - STRING_HEIGHT * 0.5)&#10;     &#10;    ROW_QUANTITY = ROW_QUANTITY + 1&#10;     &#10;    setfontsize(8)&#10;     &#10;    STRING_WIDTH, STRING_HEIGHT = measurestring('TEMP')&#10;     &#10;    setfillstyle('gradient', 'linear', 2, 0, 0, 0, 21)&#10;    addgradcolors(unpack(MMH.COLORS.SECTION_HEADER_BACKGROUND))&#10;    drawroundrect(0, 64 + ROW_QUANTITY * 18, 240, 20, 2, 2)&#10;    drawtext('SUPPLIES USED', 6, 64 + ROW_QUANTITY * 18 + 20 / 2 - STRING_HEIGHT * 0.5)&#10;     &#10;    setfillstyle('gradient', 'linear', 2, 0, 0, 0, 21)&#10;    if (MMH.SECTIONS.SUPPLIES_USED) then&#10;            addgradcolors(unpack(MMH.COLORS.RESULT_POSITIVE_BACKGROUND))&#10;    else&#10;            addgradcolors(unpack(MMH.COLORS.RESULT_NEGATIVE_BACKGROUND))&#10;    end&#10;    MMH.ELEMENTS.SWITCH_SUPPLIES_USED = drawroundrect(220, 64 + ROW_QUANTITY * 18, 20, 20, 2, 2)&#10;    drawtext('X', 228, 64 + ROW_QUANTITY * 18 + 20 / 2 - STRING_HEIGHT * 0.5)&#10;     &#10;    setfontsize(7)&#10;     &#10;    STRING_WIDTH, STRING_HEIGHT = measurestring('TEMP')&#10;     &#10;    foreach supplyitem ItemEntry do&#10;            if (MMH.SHOW_ALL_SUPPLIES or ItemEntry.amountused &gt; 0) then&#10;                    SUPPLY_USED_QUANTITY = ItemEntry.amountused&#10;                    SUPPLY_USED_WORTH = ItemEntry.buyprice * SUPPLY_USED_QUANTITY&#10;     &#10;                    if (MMH.SECTIONS.SUPPLIES_USED) then&#10;                            setfillstyle('gradient', 'linear', 2, 0, 0, 0, 16)&#10;                            addgradcolors(unpack(MMH.COLORS.ENTRY_NAME_BACKGROUND))&#10;                            drawroundrect(0, 87 + ROW_QUANTITY * 18, 240, 15, 2, 2)&#10;     &#10;                            setcompositionmode(CompositionMode_SourceOver)&#10;                            drawitem(ItemEntry.id, 6, 87 + ROW_QUANTITY * 18, 50, 100)&#10;                            setcompositionmode(CompositionMode_Automatic)&#10;     &#10;                            drawtext(((#ItemEntry.name &gt; 16 and string.match(string.sub(ItemEntry.name, 1, 16), '(.-)%s?$') .. '...') or ItemEntry.name):capitalizeall(), 28, 87 + ROW_QUANTITY * 18 + 15 / 2 - STRING_HEIGHT * 0.5)&#10;     &#10;                            setfillstyle('gradient', 'linear', 2, 0, 0, 0, 16)&#10;                            addgradcolors(unpack(MMH.COLORS.ENTRY_VALUE_BACKGROUND))&#10;                            drawroundrect(130, 87 + ROW_QUANTITY * 18, 110, 15, 2, 2)&#10;                            drawtext(num(SUPPLY_USED_QUANTITY) .. ' (' .. math.floor(SUPPLY_USED_WORTH / 100) / 10 .. 'K)', 136, 87 + ROW_QUANTITY * 18 + 15 / 2 - STRING_HEIGHT * 0.5)&#10;     &#10;                            ROW_QUANTITY = ROW_QUANTITY + 1&#10;                    end&#10;     &#10;                    SUPPLIES_USED_WORTH = SUPPLIES_USED_WORTH + SUPPLY_USED_WORTH&#10;            end&#10;    end&#10;     &#10;    if (MMH.SECTIONS.SUPPLIES_USED) then&#10;            setfillstyle('gradient', 'linear', 2, 0, 0, 0, 16)&#10;            addgradcolors(unpack(MMH.COLORS.ENTRY_NAME_BACKGROUND))&#10;            drawroundrect(0, 87 + ROW_QUANTITY * 18, 240, 15, 2, 2)&#10;     &#10;            setcompositionmode(CompositionMode_SourceOver)&#10;            drawitem(3031, 6, 87 + ROW_QUANTITY * 18, 50, 100)&#10;            setcompositionmode(CompositionMode_Automatic)&#10;     &#10;            drawtext('Money Spent', 28, 87 + ROW_QUANTITY * 18 + 15 / 2 - STRING_HEIGHT * 0.5)&#10;     &#10;            setfillstyle('gradient', 'linear', 2, 0, 0, 0, 16)&#10;            addgradcolors(unpack(MMH.COLORS.ENTRY_VALUE_BACKGROUND))&#10;            drawroundrect(130, 87 + ROW_QUANTITY * 18, 110, 15, 2, 2)&#10;            drawtext(num($moneyspent) .. ' (' .. math.floor($moneyspent / 100) / 10 .. 'K)', 136, 87 + ROW_QUANTITY * 18 + 15 / 2 - STRING_HEIGHT * 0.5)&#10;     &#10;            ROW_QUANTITY = ROW_QUANTITY + 1&#10;    end&#10;     &#10;    SUPPLIES_USED_WORTH = SUPPLIES_USED_WORTH + $moneyspent&#10;     &#10;    setfillstyle('gradient', 'linear', 2, 0, 0, 0, 16)&#10;    addgradcolors(unpack(MMH.COLORS.ENTRY_NAME_BACKGROUND))&#10;    drawroundrect(0, 87 + ROW_QUANTITY * 18, 240, 15, 2, 2)&#10;    drawtext('Total: ' .. num(SUPPLIES_USED_WORTH) .. ' GPs', 6, 87 + ROW_QUANTITY * 18 + 15 / 2 - STRING_HEIGHT * 0.5)&#10;     &#10;    ROW_QUANTITY = ROW_QUANTITY + 1&#10;     &#10;    setfontsize(8)&#10;     &#10;    STRING_WIDTH, STRING_HEIGHT = measurestring('TEMP')&#10;     &#10;    setfillstyle('gradient', 'linear', 2, 0, 0, 0, 21)&#10;    if (ITEMS_LOOTED_WORTH &gt;= SUPPLIES_USED_WORTH) then&#10;            addgradcolors(unpack(MMH.COLORS.RESULT_POSITIVE_BACKGROUND))&#10;    else&#10;            addgradcolors(unpack(MMH.COLORS.RESULT_NEGATIVE_BACKGROUND))&#10;    end&#10;    drawroundrect(0, 87 + ROW_QUANTITY * 18, 240, 20, 2, 2)&#10;    drawtext(((ITEMS_LOOTED_WORTH &gt;= SUPPLIES_USED_WORTH and ('PROFIT: ')) or ('WASTE: ')) .. num(ITEMS_LOOTED_WORTH - SUPPLIES_USED_WORTH) .. ' GPs (' .. math.abs(math.floor(((ITEMS_LOOTED_WORTH - SUPPLIES_USED_WORTH) * 3600) / ($charactertime / 1000) / 100) / 10) .. ' k/h)', 6, 87 + ROW_QUANTITY * 18 + 20 / 2 - STRING_HEIGHT * 0.5)&#10;&#10;" enabled="no" refreshRate="100"/>
            <HUDScript name="ShowWaypoints" script="init start&#10;&#9;-- local SCRIPT_VERSION = '1.0.0'&#10;&#9;&#10;&#9;local waypointColors = {&#10;&#9;&#9;walk    = 0xAAF200,&#10;&#9;&#9;node    = 0x2A0736,&#10;&#9;&#9;stand   = 0x00AACC,&#10;&#9;&#9;shovel  = 0xEB8540,&#10;&#9;&#9;rope    = 0xFFCC00,&#10;&#9;&#9;machete = 0x003366,&#10;&#9;&#9;ladder  = 0xC55186,&#10;&#9;&#9;use     = 0x36693E,&#10;&#9;&#9;action  = 0x00FFFF,&#10;&#9;&#9;lure    = 0xCCCCCC&#10;&#9;}&#10;&#10;&#9;local xOffset, yOffset, worldWidth, worldHeight, x, y, z, topLeftTilePos,&#10;&#9;      botRightTilePos, width, height, text, label&#10;&#9;local waypointRect = {}&#10;&#10;&#9;function gettilepos(x, y, z)&#10;&#9;&#9;local tile = getobjectarea(x, y, z)&#10;&#10;&#9;&#9;if tile == nil then&#10;&#9;&#9;&#9;local xDiff, yDiff = x - $posx, y - $posy&#10;&#9;&#9;&#9;if math.abs($posx - x) &lt;= 7 then&#10;&#9;&#9;&#9;&#9;tile = getobjectarea(x, $posy, $posz)&#10;&#9;&#9;&#9;&#9;xDiff = 0&#10;&#9;&#9;&#9;elseif math.abs($posy - y) &lt;= 5 then&#10;&#9;&#9;&#9;&#9;tile = getobjectarea($posx, y, $posz)&#10;&#9;&#9;&#9;&#9;yDiff = 0&#10;&#9;&#9;&#9;else&#10;&#9;&#9;&#9;&#9;tile = getobjectarea($posx, $posy, $posz)&#10;&#9;&#9;&#9;end&#10;&#10;&#9;&#9;&#9;-- Some strange stuff happens when you go from 0 to -1, so I'm&#10;&#9;&#9;&#9;-- adding this as a precaution.&#10;&#9;&#9;&#9;if tile ~= nil then&#10;&#9;&#9;&#9;&#9;local width, height = $worldwin.width, $worldwin.height&#10;&#10;&#9;&#9;&#9;&#9;tile.left    = tile.left    + (width * xDiff)&#10;&#9;&#9;&#9;&#9;tile.right   = tile.right   + (width * xDiff)&#10;&#9;&#9;&#9;&#9;tile.centerx = tile.centerx + (width * xDiff)&#10;&#9;&#9;&#9;&#9;tile.top     = tile.top     + (height * yDiff)&#10;&#9;&#9;&#9;&#9;tile.bottom  = tile.bottom  + (height * yDiff)&#10;&#9;&#9;&#9;&#9;tile.centery = tile.centery + (height * yDiff)&#10;&#9;&#9;&#9;end&#10;&#9;&#9;end&#10;&#10;&#9;&#9;return tile&#10;&#9;end&#10;&#10;&#9;useworldhud()&#10;init end&#10;&#10;setfontstyle('Tahoma', 7, 75, 0xFFFFFF, 1, 0x000000)&#10;&#10;xOffset, yOffset = $worldwin.left - $clientwin.left, $worldwin.top - $clientwin.top&#10;worldWidth, worldHeight = $worldwin.right - $worldwin.left - 2, $worldwin.bottom - $worldwin.top - 2&#10;&#10;local i = 0&#10;foreach settingsentry e 'Cavebot/Waypoints' do&#10;&#9;x, y, z = getsetting(e, 'Coordinates'):match(REGEX_SPA_COORDS)&#10;&#9;x, y, z = tonumber(x), tonumber(y), tonumber(z)&#10;&#10;&#9;if z == $posz then&#10;&#9;&#9;width, height = getsetting(e, 'Range'):match(REGEX_SPA_SIZE)&#10;&#9;&#9;width, height = tonumber(width), tonumber(height)&#10;&#10;&#9;&#9;topLeftTilePos = gettilepos(x, y, z)&#10;&#9;&#9;botRightTilePos = gettilepos(x + width - 1, y + height - 1, z)&#10;&#10;&#9;&#9;if topLeftTilePos and botRightTilePos then&#10;&#9;&#9;&#9;waypointRect.left   = math.max(topLeftTilePos.left  , 0)&#10;&#9;&#9;&#9;waypointRect.top    = math.max(topLeftTilePos.top   , 0)&#10;&#9;&#9;&#9;waypointRect.right  = math.min(botRightTilePos.right , worldWidth)&#10;&#9;&#9;&#9;waypointRect.bottom = math.min(botRightTilePos.bottom, worldHeight)&#10;&#9;&#9;&#9;waypointRect.width  = waypointRect.right - waypointRect.left&#10;&#9;&#9;&#9;waypointRect.height = waypointRect.bottom - waypointRect.top&#10;&#10;&#9;&#9;&#9;if waypointRect.width &gt; 0 and waypointRect.height &gt; 0 then&#10;&#9;&#9;&#9;&#9;label = getsetting(e, 'Label')&#10;&#9;&#9;&#9;&#9;text = tern(#label == 0, tostring(i), label .. ' (' .. i .. ')')&#10;&#9;&#9;&#9;&#9;wptType = getsetting(e, 'Type')&#10;&#10;&#9;&#9;&#9;&#9;setfillstyle('color', (waypointColors[wptType:lower()] or 0) + (math.floor(2.55*50)*16777216))&#10;&#9;&#9;&#9;&#9;drawroundrect(&#10;&#9;&#9;&#9;&#9;&#9;waypointRect.left,&#10;&#9;&#9;&#9;&#9;&#9;waypointRect.top,&#10;&#9;&#9;&#9;&#9;&#9;waypointRect.width,&#10;&#9;&#9;&#9;&#9;&#9;waypointRect.height,&#10;&#9;&#9;&#9;&#9;&#9;10, 10&#10;&#9;&#9;&#9;&#9;)&#10;&#10;&#9;&#9;&#9;&#9;if waypointRect.width &gt; 10 then&#10;&#9;&#9;&#9;&#9;&#9;drawtext(&#10;&#9;&#9;&#9;&#9;&#9;&#9;string.fit(text, waypointRect.width - 10, '...', true),&#10;&#9;&#9;&#9;&#9;&#9;&#9;waypointRect.left + 5,&#10;&#9;&#9;&#9;&#9;&#9;&#9;waypointRect.top + 3&#10;&#9;&#9;&#9;&#9;&#9;)&#10;&#9;&#9;&#9;&#9;&#9;drawtext(&#10;&#9;&#9;&#9;&#9;&#9;&#9;string.fit(wptType, waypointRect.width - 10, '...', true),&#10;&#9;&#9;&#9;&#9;&#9;&#9;waypointRect.left + 5,&#10;&#9;&#9;&#9;&#9;&#9;&#9;waypointRect.top + 15&#10;&#9;&#9;&#9;&#9;&#9;)&#10;&#9;&#9;&#9;&#9;end&#10;&#9;&#9;&#9;end&#10;&#9;&#9;end&#10;&#9;end&#10;&#10;&#9;i = i + 1&#10;end" enabled="no" refreshRate="100"/>
            <HUDScript name="MonitorMyStats" script="init start&#10;    --&#10;    --              88                                                                  &#10;    --              &quot;&quot;                                                ,d                &#10;    --                                                                88                &#10;    --   ,adPPYba,  88  8b,dPPYba,  88,dPYba,,adPYba,   ,adPPYYba,  MM88MMM  ,adPPYba,  &#10;    --   I8[    &quot;&quot;  88  88P'   &quot;Y8  88P'   &quot;88&quot;    &quot;8a  &quot;&quot;     `Y8    88    a8P_____88  &#10;    --    `&quot;Y8ba,   88  88          88      88      88  ,adPPPPP88    88    8PP&quot;&quot;&quot;&quot;&quot;&quot;&quot;  &#10;    --   aa    ]8I  88  88          88      88      88  88,    ,88    88,   &quot;8b,   ,aa  &#10;    --   `&quot;YbbdP&quot;'  88  88          88      88      88  `&quot;8bbdP&quot;Y8    &quot;Y888  `&quot;Ybbd8&quot;'  &#10;    --&#10;&#10;    --   Name: Monitor My Stats&#10;    --   Last Updated: 19/12/2013&#10;    --   Version: 1.0&#10;&#10;    local MMS = {&#10;        ShowInfo = false,&#10;&#10;        Title = &quot;SCRIPT INFO&quot;,&#10;        Creator = &quot;CREATOR NAME&quot;,&#10;        Info = 'Voc - Script Name',&#10;        Version = '1.0.0'&#10;    }&#10;&#10;    -- [[ Do not change anything below this line. ]] --&#10;&#10;    filterinput(false, true, false, false)&#10;&#10;    local HUD_Sections = {&#10;        {Name = 'OTHERS', State = true, Items = {&#10;                {'Ping', function() return $ping .. ' (avg: ' .. $pingaverage .. ')' end},&#10;                {'Bank Balance', function() return num($balance) end},&#10;            }&#10;        },&#10;&#10;        {Name = 'CHARACTER STATS', State = true, Items = {&#10;                {'Level', function() return $level .. ' (' .. 100 - math.floor(($exp - expatlvl($level)) * 100 / (expatlvl($level + 1) - expatlvl($level))) .. '%)' end},&#10;                {'Experience', function() return num($exp) end},&#10;                {'Magic Level', function() return $mlevel .. ' (' .. 100 - $mlevelpc .. '%)' end},&#10;                {'Weapon Skill', function() local _ = WeaponSkill() return _.skill .. ' (' .. 100 - _.skillpc .. '%)' end},&#10;                {'Shielding', function() return $shielding .. ' (' .. 100 - $shieldingpc .. '%)' end},&#10;                {'Fishing', function() return $fishing .. ' (' .. 100 - $fishingpc .. '%)' end}&#10;            }&#10;        },&#10;&#10;        {Name = 'ENGINE STATES', State = true, Items = {&#10;                {'Spell Healer', function() return getsetting('SpellHealer/Enabled') end, function() return toggle('SpellHealer/Enabled') end},&#10;                {'Potion Healer', function() return getsetting('PotionHealer/Enabled') end, function() return toggle('PotionHealer/Enabled') end},&#10;                {'Condition Healer', function() return getsetting('ConditionHealer/Enabled') end, function() return toggle('ConditionHealer/Enabled') end},&#10;                {'Mana Training', function() return getsetting('ManaTrainer/Enabled') end, function() return toggle('ManaTrainer/Enabled') end},&#10;                {'Cavebot', function() return getsetting('Cavebot/Enabled') end, function() return toggle('Cavebot/Enabled') end},&#10;                {'Looting', function() return getsetting('Looting/Enabled') end, function() return toggle('Looting/Enabled') end},&#10;                {'Targeting', function() return getsetting('Targeting/Enabled') end, function() return toggle('Targeting/Enabled') end}&#10;            }&#10;        },&#10;&#10;        {Name = 'BOTTING STATS', State = true, Items = {&#10;                {'Experience per Hour', function() return num($exphour) end},&#10;                {'Experience Left', function() return num(exptolevel()) end},&#10;                {'Experience Today', function() return num($expgained) end},&#10;                {'Time to Next Level', function() return time(timetolevel()) end},&#10;                {'Played Time', function() return time(math.floor($charactertime / 1000)) end},&#10;                {'Stamina', function() return time($stamina) end}&#10;            }&#10;        }&#10;    }&#10;&#10;    local HUD_Colors = {&#10;            Font = color(255, 255, 255, 0),&#10;            SectionHeaderBackground = {0.0, color(36, 68, 105, 20), 0.23, color(39, 73, 114, 20), 0.76, color(21, 39, 60, 20)},&#10;            EntryNameBackground = {0.0, color(75, 75, 75, 20), 0.23, color(45, 45, 45, 20), 0.76, color(19, 19, 19, 20)},&#10;            EntryValueBackground = {0.0, color(145, 95, 0, 20), 0.23, color(158, 104, 0, 20), 0.76, color(84, 55, 0, 20)},&#10;            EntryValueEnabledBackground = {0.0, color(65, 96, 12, 20), 0.23, color(67, 99, 13, 20), 0.76, color(36, 52, 6, 20)},&#10;            EntryValueDisabledBackground = {0.0, color(90, 12, 15, 20), 0.23, color(98, 13, 17, 20), 0.76, color(52, 6, 9, 20)},&#10;    }&#10;&#10;    function WeaponSkill()&#10;        local SkillTypes = {&#10;            ['axe'] = {type = 'axe', skill = $axe, skillpc = $axepc},&#10;            ['club'] = {type = 'club', skill = $club, skillpc = $clubpc},&#10;            ['sword'] = {type = 'sword', skill = $sword, skillpc = $swordpc},&#10;            ['bow'] = {type = 'distance', skill = $distance, skillpc = $distancepc},&#10;            ['distance weapon'] = {type = 'distance', skill = $distance, skillpc = $distancepc},&#10;            ['no weapon'] = {type = 'fist', skill = $fist, skillpc = $fistpc},&#10;            ['rod'] = {type = 'magic', skill = $mlevel, skillpc = $mlevelpc},&#10;            ['wand'] = {type = 'magic', skill = $mlevel, skillpc = $mlevelpc},&#10;        }&#10;&#10;        return SkillTypes[findweapontype()]&#10;    end&#10;&#10;    local Moving, Temp, Moved = false, {0, 0}, {0, 0}&#10;&#10;    function inputevents(e)&#10;        if (e.type == IEVENT_LMOUSEDOWN) then&#10;            for _, Section in ipairs(HUD_Sections) do&#10;                if (e.elementid == Section.StateSwitch) then&#10;                    Section.State = not Section.State&#10;                    return&#10;                end&#10;            end&#10;        for _, Section in ipairs(HUD_Sections) do&#10;                if (Section.Name == 'ENGINE STATES') then&#10;                    for _, SectionItem in ipairs(Section.Items) do&#10;                        if (e.elementid == SectionItem[4]) then&#10;                            SectionItem[3]()&#10;                            return&#10;                        end&#10;                    end&#10;                end&#10;            end&#10;        end&#10;&#10;        if (e.type == IEVENT_MMOUSEDOWN) then&#10;            Moving, Temp = true, {$cursor.x - Moved[1], $cursor.y - Moved[2]}&#10;        end&#10;&#10;        if (e.type == IEVENT_MMOUSEUP) then&#10;            Moving = false&#10;        end&#10;    end&#10;    &#10;    setmaskcolorxp(0)&#10;init end&#10;&#10;if (Moving) then&#10;    auto(10)&#10;    Moved = {$cursor.x - Temp[1], $cursor.y - Temp[2]}&#10;end&#10;&#10;setposition($clientwin.left + 5 + Moved[1], $worldwin.top + Moved[2])&#10;setfontstyle('Tahoma', 8, 75, 0xFFFFFF, 1, color(0, 0, 0, 20))&#10;&#10;local YPosition, SectionRow, SectionItemsRow = 0, 0, 0&#10;&#10;if MMS.ShowInfo then&#10;    local StringWidth, StringHeight = measurestring('TEMP')&#10;&#10;    setfillstyle('gradient', 'linear', 2, 0, 0, 0, 22)&#10;    addgradcolors(unpack(HUD_Colors.SectionHeaderBackground))&#10;    drawroundrect(0, 0, 240, 21, 2, 2)&#10;    drawtext(MMS.Title, 6, 21 / 2 - StringHeight * 0.5)&#10;&#10;    setfillstyle('gradient', 'linear', 2, 0, 0, 0, 22)&#10;    addgradcolors(unpack(HUD_Colors.EntryValueBackground))&#10;    drawroundrect(130, 0, 110, 21, 2, 2)&#10;    drawtext(MMS.Creator, 136, 21 / 2 - StringHeight * 0.5)&#10;&#10;    setfontsize(7)&#10;&#10;    local StringWidth, StringHeight = measurestring('TEMP')&#10;&#10;    setfillstyle('gradient', 'linear', 2, 0, 0, 0, 16)&#10;    addgradcolors(unpack(HUD_Colors.EntryNameBackground))&#10;    drawroundrect(0, 24 + 0 * 18, 240, 15, 2, 2)&#10;    drawtext(MMS.Info, 6, 24 + 0 * 18 + 15 / 2 - StringHeight * 0.5 + 1)&#10;     &#10;    setfillstyle('gradient', 'linear', 2, 0, 0, 0, 16)&#10;    addgradcolors(unpack(HUD_Colors.EntryNameBackground))&#10;    drawroundrect(0, 24 + 1 * 18, 240, 15, 2, 2)&#10;    drawtext('Script version:', 6, 24 + 1 * 18 + 15 / 2 - StringHeight * 0.5 + 1)&#10;     &#10;    setfillstyle('gradient', 'linear', 2, 0, 0, 0, 16)&#10;    addgradcolors(unpack(HUD_Colors.EntryValueBackground))&#10;    drawroundrect(130, 24 + 1 * 18, 110, 15, 2, 2)&#10;    drawtext(MMS.Version, 136, 24 + 1 * 18 + 15 / 2 - StringHeight * 0.5 + 1)&#10;    &#10;    YPosition = 22 + 2 * 19&#10;end&#10;&#10;for SectionIndex, Section in ipairs(HUD_Sections) do&#10;    setfontsize(8)&#10;&#10;    local StringWidth, StringHeight = measurestring('TEMP')&#10;&#10;    setfillstyle('gradient', 'linear', 2, 0, 0, 0, 21)&#10;    addgradcolors(unpack(HUD_Colors.SectionHeaderBackground))&#10;    drawroundrect(0, YPosition + (SectionRow * 23) + (SectionItemsRow * 19), 240, 20, 2, 2)&#10;    drawtext(Section.Name, 6, YPosition + (SectionRow * 23) + (SectionItemsRow * 19) + 20 / 2 - StringHeight * 0.5 + 1)&#10;&#10;    setfillstyle('gradient', 'linear', 2, 0, 0, 0, 21)&#10;    if (Section.State) then&#10;        addgradcolors(unpack(HUD_Colors.EntryValueEnabledBackground))&#10;    else&#10;        addgradcolors(unpack(HUD_Colors.EntryValueDisabledBackground))&#10;    end&#10;    Section.StateSwitch = drawroundrect(220, YPosition + (SectionRow * 23) + (SectionItemsRow * 19), 20, 20, 2, 2)&#10;    drawtext('X', 228, YPosition + (SectionRow * 23) + (SectionItemsRow * 19) + 20 / 2 - StringHeight * 0.5 + 1)&#10;&#10;    SectionRow = SectionRow + 1&#10;&#10;    if (Section.State) then&#10;        setfontsize(7)&#10;&#10;        local StringWidth, StringHeight = measurestring('TEMP')&#10;&#10;        for SectionItemIndex, SectionItem in ipairs(Section.Items) do&#10;            setfillstyle('gradient', 'linear', 2, 0, 0, 0, 17)     &#10;            addgradcolors(unpack(HUD_Colors.EntryNameBackground))&#10;            drawroundrect(0, YPosition + (SectionRow * 23) + (SectionItemsRow * 19), 240, 16, 2, 2)&#10;            drawtext(SectionItem[1], 6, YPosition + (SectionRow * 23) + (SectionItemsRow * 19) + 16 / 2 - StringHeight * 0.5 + 1)&#10;&#10;            if (Section.Name == 'ENGINE STATES') then&#10;                local EngineCurrentState = SectionItem[2]()&#10;&#10;                setfillstyle('gradient', 'linear', 2, 0, 0, 0, 17)&#10;                if (EngineCurrentState == 'yes') then&#10;                    addgradcolors(unpack(HUD_Colors.EntryValueEnabledBackground))&#10;                else&#10;                    addgradcolors(unpack(HUD_Colors.EntryValueDisabledBackground))&#10;                end&#10;                HUD_Sections[SectionIndex].Items[SectionItemIndex][4] = drawroundrect(130, YPosition + (SectionRow * 23) + (SectionItemsRow * 19), 110, 16, 2, 2)&#10;&#10;&#10;                drawtext((EngineCurrentState == 'yes' and ('On')) or ('Off'), 136, YPosition + (SectionRow * 23) + (SectionItemsRow * 19) + 16 / 2 - StringHeight * 0.5 + 1)&#10;            else&#10;                setfillstyle('gradient', 'linear', 2, 0, 0, 0, 17)&#10;                addgradcolors(unpack(HUD_Colors.EntryValueBackground))&#10;                drawroundrect(130, YPosition + (SectionRow * 23) + (SectionItemsRow * 19), 110, 16, 2, 2)&#10;                drawtext(SectionItem[2](), 136, YPosition + (SectionRow * 23) + (SectionItemsRow * 19) + 16 / 2 - StringHeight * 0.5 + 1)&#10;            end&#10;&#10;            SectionItemsRow = SectionItemsRow + 1&#10;        end&#10;    end&#10;end" enabled="yes" refreshRate="100"/>
            <HUDScript name="MonitorMyHunting" script="init start&#13;&#10;&#9;--&#13;&#10;&#9;--                        88                                                                  &#13;&#10;&#9;--                        &quot;&quot;                                                ,d                &#13;&#10;&#9;--                                                                          88                &#13;&#10;&#9;--             ,adPPYba,  88  8b,dPPYba,  88,dPYba,,adPYba,   ,adPPYYba,  MM88MMM  ,adPPYba,  &#13;&#10;&#9;--             I8[    &quot;&quot;  88  88P'   &quot;Y8  88P'   &quot;88&quot;    &quot;8a  &quot;&quot;     `Y8    88    a8P_____88  &#13;&#10;&#9;--              `&quot;Y8ba,   88  88          88      88      88  ,adPPPPP88    88    8PP&quot;&quot;&quot;&quot;&quot;&quot;&quot;  &#13;&#10;&#9;--             aa    ]8I  88  88          88      88      88  88,    ,88    88,   &quot;8b,   ,aa  &#13;&#10;&#9;--   Author:   `&quot;YbbdP&quot;'  88  88          88      88      88  `&quot;8bbdP&quot;Y8    &quot;Y888  `&quot;Ybbd8&quot;'  &#13;&#10;&#9;--   &#13;&#10;&#9;--   Monitor My Hunting!&#13;&#10;&#9;--&#13;&#10;&#9;--   Version: 1.0&#13;&#10;&#9;--   Created: 29.12.2013&#13;&#10;&#9;--   Last update: 29.12.2013&#13;&#10;&#9;--&#13;&#10;&#13;&#10;&#9;local MMH = {&#13;&#10;&#9;&#9;SHOW_ALL_ITEMS = false,&#13;&#10;&#9;&#9;SHOW_ALL_SUPPLIES = false,&#13;&#10;&#9;}&#13;&#10;&#13;&#10;&#9;-- [[ Do not change anything below this line. ]] --&#13;&#10;&#13;&#10;&#9;-- [[ COLORS ]] --&#13;&#10;&#9;MMH.COLORS = {}&#13;&#10;&#9;MMH.COLORS.FONT_COLOR = color(255, 255, 255, 0)&#13;&#10;&#9;MMH.COLORS.SECTION_HEADER_BACKGROUND = {0.0, color(36, 68, 105, 20), 0.23, color(39, 73, 114, 20), 0.76, color(21, 39, 60, 20)}&#13;&#10;&#9;MMH.COLORS.ENTRY_NAME_BACKGROUND = {0.0, color(75, 75, 75, 20), 0.23, color(45, 45, 45, 20), 0.76, color(19, 19, 19, 20)}&#13;&#10;&#9;MMH.COLORS.ENTRY_VALUE_BACKGROUND = {0.0, color(145, 95, 0, 20), 0.23, color(158, 104, 0, 20), 0.76, color(84, 55, 0, 20)}&#13;&#10;&#9;MMH.COLORS.RESULT_POSITIVE_BACKGROUND = {0.0, color(65, 96, 12, 20), 0.23, color(67, 99, 13, 20), 0.76, color(36, 52, 6, 20)}&#13;&#10;&#9;MMH.COLORS.RESULT_NEGATIVE_BACKGROUND = {0.0, color(90, 12, 15, 20), 0.23, color(98, 13, 17, 20), 0.76, color(52, 6, 9, 20)}&#13;&#10;&#9;MMH.COLORS.RESET_BUTTON_BACKGROUND = MMH.COLORS.RESULT_POSITIVE_BACKGROUND&#13;&#10;&#13;&#10;&#9;-- [[ ELEMENTS ]] --&#13;&#10;&#9;MMH.ELEMENTS = {}&#13;&#10;&#9;MMH.ELEMENTS.RESET_BUTTON = -1&#13;&#10;&#9;MMH.ELEMENTS.SWITCH_ITEMS_LOOTED = -1&#13;&#10;&#9;MMH.ELEMENTS.SWITCH_SUPPLIES_USED = -1&#13;&#10;&#13;&#10;&#9;-- [[ SECTION STATES ]] --&#13;&#10;&#9;MMH.SECTIONS = {}&#13;&#10;&#9;MMH.SECTIONS.ITEMS_LOOTED = true&#13;&#10;&#9;MMH.SECTIONS.SUPPLIES_USED = true&#13;&#10;&#13;&#10;&#9;-- [[ OTHERS ]] --&#9;&#13;&#10;&#9;filterinput(false, true, false, false)&#13;&#10;&#13;&#10;&#9;local MOVING, TEMP, MOVED = false, {0, 0}, {0, 0}&#13;&#10;&#13;&#10;&#9;function inputevents(e)&#13;&#10;&#9;&#9;if (e.type == IEVENT_LMOUSEDOWN) then&#13;&#10;&#9;&#9;&#9;if (e.elementid == MMH.ELEMENTS.RESET_BUTTON) then&#13;&#10;&#9;&#9;&#9;&#9;resetcharactertime()&#13;&#10;&#9;&#9;&#9;&#9;resetlootcounter()&#13;&#10;&#9;&#9;&#9;&#9;resetexpcounter()&#13;&#10;&#9;&#9;&#9;elseif (e.elementid == MMH.ELEMENTS.SWITCH_ITEMS_LOOTED) then&#13;&#10;&#9;&#9;&#9;&#9;MMH.SECTIONS.ITEMS_LOOTED = not MMH.SECTIONS.ITEMS_LOOTED&#13;&#10;&#9;&#9;&#9;elseif (e.elementid == MMH.ELEMENTS.SWITCH_SUPPLIES_USED) then&#13;&#10;&#9;&#9;&#9;&#9;MMH.SECTIONS.SUPPLIES_USED = not MMH.SECTIONS.SUPPLIES_USED&#13;&#10;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;end&#13;&#10;&#13;&#10;&#9;&#9;if (e.type == IEVENT_MMOUSEDOWN) then&#13;&#10;&#9;&#9;&#9;MOVING, TEMP = true, {$cursor.x - MOVED[1], $cursor.y - MOVED[2]}&#13;&#10;&#9;&#9;end&#13;&#10;&#13;&#10;&#9;&#9;if (e.type == IEVENT_MMOUSEUP) then&#13;&#10;&#9;&#9;&#9;MOVING = false&#13;&#10;&#9;&#9;end&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;setmaskcolorxp(0)&#13;&#10;init end&#13;&#10;&#13;&#10;if (MOVING) then&#13;&#10;    auto(10)&#13;&#10;    MOVED = {$cursor.x - TEMP[1], $cursor.y - TEMP[2]}&#13;&#10;end&#13;&#10;&#13;&#10;setposition($clientwin.right - 424 + MOVED[1], $worldwin.top + MOVED[2])&#13;&#10;setfontstyle('Tahoma', 8, 75, MMH.COLORS.FONT_COLOR, 1, color(0, 0, 0, 20))&#13;&#10;&#13;&#10;local ROW_QUANTITY, STRING_WIDTH, STRING_HEIGHT = 0, measurestring('TEMP')&#13;&#10;local ITEMS_LOOTED_WORTH, ITEM_LOOTED_QUANTITY, ITEM_LOOTED_WORTH = 0, 0, 0&#13;&#10;local SUPPLIES_USED_WORTH, SUPPLY_USED_QUANTITY, SUPPLY_USED_WORTH = 0, 0, 0&#13;&#10;&#13;&#10;setfillstyle('gradient', 'linear', 2, 0, 0, 0, 21)&#13;&#10;addgradcolors(unpack(MMH.COLORS.ENTRY_NAME_BACKGROUND))&#13;&#10;drawroundrect(0, 0, 240, 20, 2, 2)&#13;&#10;drawtext('Monitor My Hunting v1.0', 6, 20 / 2 - STRING_HEIGHT * 0.5)&#13;&#10;&#13;&#10;setfillstyle('gradient', 'linear', 2, 0, 0, 0, 21)&#13;&#10;addgradcolors(unpack(MMH.COLORS.RESET_BUTTON_BACKGROUND))&#13;&#10;MMH.ELEMENTS.RESET_BUTTON = drawroundrect(196, 0, 44, 20, 2, 2)&#13;&#10;drawtext('RESET', 202, 20 / 2 - STRING_HEIGHT * 0.5)&#13;&#10;&#13;&#10;setfontsize(7)&#13;&#10;&#13;&#10;STRING_WIDTH, STRING_HEIGHT = measurestring('TEMP')&#13;&#10;&#13;&#10;setfillstyle('gradient', 'linear', 2, 0, 0, 0, 16)&#13;&#10;addgradcolors(unpack(MMH.COLORS.ENTRY_NAME_BACKGROUND))&#13;&#10;drawroundrect(0, 23, 240, 15, 2, 2)&#13;&#10;drawtext('Looting Accuracy', 6, 23 + 15 / 2 - STRING_HEIGHT * 0.5 + 1)&#13;&#10;&#13;&#10;setfillstyle('gradient', 'linear', 2, 0, 0, 0, 16)&#13;&#10;addgradcolors(unpack(MMH.COLORS.ENTRY_VALUE_BACKGROUND))&#13;&#10;drawroundrect(130, 23, 110, 15, 2, 2)&#13;&#10;drawtext(string.format('%.2f', $lootaccuracy) .. '%', 136, 23 + 15 / 2 - STRING_HEIGHT * 0.5 + 1)&#13;&#10;&#13;&#10;setfontsize(8)&#13;&#10;&#13;&#10;STRING_WIDTH, STRING_HEIGHT = measurestring('TEMP')&#13;&#10;&#13;&#10;setfillstyle('gradient', 'linear', 2, 0, 0, 0, 21)&#13;&#10;addgradcolors(unpack(MMH.COLORS.SECTION_HEADER_BACKGROUND))&#13;&#10;drawroundrect(0, 41, 240, 20, 2, 2)&#13;&#10;drawtext('ITEMS LOOTED', 6, 41 + 20 / 2 - STRING_HEIGHT * 0.5)&#13;&#10;&#13;&#10;setfillstyle('gradient', 'linear', 2, 0, 0, 0, 21)&#13;&#10;if (MMH.SECTIONS.ITEMS_LOOTED) then&#13;&#10;&#9;addgradcolors(unpack(MMH.COLORS.RESULT_POSITIVE_BACKGROUND))&#13;&#10;else&#13;&#10;&#9;addgradcolors(unpack(MMH.COLORS.RESULT_NEGATIVE_BACKGROUND))&#13;&#10;end&#13;&#10;MMH.ELEMENTS.SWITCH_ITEMS_LOOTED = drawroundrect(220, 41, 20, 20, 2, 2)&#13;&#10;drawtext('X', 228, 41 + 20 / 2 - STRING_HEIGHT * 0.5)&#13;&#10;&#13;&#10;setfontsize(7)&#13;&#10;&#13;&#10;STRING_WIDTH, STRING_HEIGHT = measurestring('TEMP')&#13;&#10;&#13;&#10;foreach lootingitem ItemEntry do&#13;&#10;&#9;if (MMH.SHOW_ALL_ITEMS or ItemEntry.amountlooted &gt; 0) then&#13;&#10;&#9;&#9;ITEM_LOOTED_QUANTITY = ItemEntry.amountlooted&#13;&#10;&#9;&#9;ITEM_LOOTED_WORTH = ItemEntry.sellprice * ITEM_LOOTED_QUANTITY&#13;&#10;&#13;&#10;&#9;&#9;if (MMH.SECTIONS.ITEMS_LOOTED) then&#13;&#10;&#9;&#9;&#9;setfillstyle('gradient', 'linear', 2, 0, 0, 0, 16)&#13;&#10;&#9;&#9;&#9;addgradcolors(unpack(MMH.COLORS.ENTRY_NAME_BACKGROUND))&#13;&#10;&#9;&#9;&#9;drawroundrect(0, 64 + ROW_QUANTITY * 18, 240, 15, 2, 2)&#13;&#10;&#9;&#9;&#13;&#10;&#9;&#9;&#9;setcompositionmode(CompositionMode_SourceOver)&#13;&#10;&#9;&#9;&#9;drawitem(ItemEntry.id, 6, 64 + ROW_QUANTITY * 18, 50, 100)&#13;&#10;&#9;&#9;&#9;setcompositionmode(CompositionMode_Automatic)&#13;&#10;&#13;&#10;&#9;&#9;&#9;drawtext(((#ItemEntry.name &gt; 16 and string.match(string.sub(ItemEntry.name, 1, 16), '(.-)%s?$') .. '...') or ItemEntry.name):capitalizeall(), 28, 64 + ROW_QUANTITY * 18 + 15 / 2 - STRING_HEIGHT * 0.5)&#13;&#10;&#13;&#10;&#9;&#9;&#9;setfillstyle('gradient', 'linear', 2, 0, 0, 0, 16)&#13;&#10;&#9;&#9;&#9;addgradcolors(unpack(MMH.COLORS.ENTRY_VALUE_BACKGROUND))&#13;&#10;&#9;&#9;&#9;drawroundrect(130, 64 + ROW_QUANTITY * 18, 110, 15, 2, 2)&#13;&#10;&#9;&#9;&#9;drawtext(num(ITEM_LOOTED_QUANTITY) .. ' (' .. math.floor(ITEM_LOOTED_WORTH / 100) / 10 .. 'K)', 136, 64 + ROW_QUANTITY * 18 + 15 / 2 - STRING_HEIGHT * 0.5)&#13;&#10;&#13;&#10;&#9;&#9;&#9;ROW_QUANTITY = ROW_QUANTITY + 1&#13;&#10;&#9;&#9;end&#13;&#10;&#13;&#10;&#9;&#9;ITEMS_LOOTED_WORTH = ITEMS_LOOTED_WORTH + ITEM_LOOTED_WORTH&#13;&#10;&#9;end&#13;&#10;end&#13;&#10;&#13;&#10;setfillstyle('gradient', 'linear', 2, 0, 0, 0, 16)&#13;&#10;addgradcolors(unpack(MMH.COLORS.ENTRY_NAME_BACKGROUND))&#13;&#10;drawroundrect(0, 64 + ROW_QUANTITY * 18, 240, 15, 2, 2)&#13;&#10;drawtext('Total: ' .. num(ITEMS_LOOTED_WORTH) .. ' GPs', 6, 64 + ROW_QUANTITY * 18 + 15 / 2 - STRING_HEIGHT * 0.5)&#13;&#10;&#13;&#10;ROW_QUANTITY = ROW_QUANTITY + 1&#13;&#10;&#13;&#10;setfontsize(8)&#13;&#10;&#13;&#10;STRING_WIDTH, STRING_HEIGHT = measurestring('TEMP')&#13;&#10;&#13;&#10;setfillstyle('gradient', 'linear', 2, 0, 0, 0, 21)&#13;&#10;addgradcolors(unpack(MMH.COLORS.SECTION_HEADER_BACKGROUND))&#13;&#10;drawroundrect(0, 64 + ROW_QUANTITY * 18, 240, 20, 2, 2)&#13;&#10;drawtext('SUPPLIES USED', 6, 64 + ROW_QUANTITY * 18 + 20 / 2 - STRING_HEIGHT * 0.5)&#13;&#10;&#13;&#10;setfillstyle('gradient', 'linear', 2, 0, 0, 0, 21)&#13;&#10;if (MMH.SECTIONS.SUPPLIES_USED) then&#13;&#10;&#9;addgradcolors(unpack(MMH.COLORS.RESULT_POSITIVE_BACKGROUND))&#13;&#10;else&#13;&#10;&#9;addgradcolors(unpack(MMH.COLORS.RESULT_NEGATIVE_BACKGROUND))&#13;&#10;end&#13;&#10;MMH.ELEMENTS.SWITCH_SUPPLIES_USED = drawroundrect(220, 64 + ROW_QUANTITY * 18, 20, 20, 2, 2)&#13;&#10;drawtext('X', 228, 64 + ROW_QUANTITY * 18 + 20 / 2 - STRING_HEIGHT * 0.5)&#13;&#10;&#13;&#10;setfontsize(7)&#13;&#10;&#13;&#10;STRING_WIDTH, STRING_HEIGHT = measurestring('TEMP')&#13;&#10;&#13;&#10;foreach supplyitem ItemEntry do&#13;&#10;&#9;if (MMH.SHOW_ALL_SUPPLIES or ItemEntry.amountused &gt; 0) then&#13;&#10;&#9;&#9;SUPPLY_USED_QUANTITY = ItemEntry.amountused&#13;&#10;&#9;&#9;SUPPLY_USED_WORTH = ItemEntry.buyprice * SUPPLY_USED_QUANTITY&#13;&#10;&#13;&#10;&#9;&#9;if (MMH.SECTIONS.SUPPLIES_USED) then&#13;&#10;&#9;&#9;&#9;setfillstyle('gradient', 'linear', 2, 0, 0, 0, 16)&#13;&#10;&#9;&#9;&#9;addgradcolors(unpack(MMH.COLORS.ENTRY_NAME_BACKGROUND))&#13;&#10;&#9;&#9;&#9;drawroundrect(0, 87 + ROW_QUANTITY * 18, 240, 15, 2, 2)&#13;&#10;&#13;&#10;&#9;&#9;&#9;setcompositionmode(CompositionMode_SourceOver)&#13;&#10;&#9;&#9;&#9;drawitem(ItemEntry.id, 6, 87 + ROW_QUANTITY * 18, 50, 100)&#13;&#10;&#9;&#9;&#9;setcompositionmode(CompositionMode_Automatic)&#13;&#10;&#13;&#10;&#9;&#9;&#9;drawtext(((#ItemEntry.name &gt; 16 and string.match(string.sub(ItemEntry.name, 1, 16), '(.-)%s?$') .. '...') or ItemEntry.name):capitalizeall(), 28, 87 + ROW_QUANTITY * 18 + 15 / 2 - STRING_HEIGHT * 0.5)&#13;&#10;&#13;&#10;&#9;&#9;&#9;setfillstyle('gradient', 'linear', 2, 0, 0, 0, 16)&#13;&#10;&#9;&#9;&#9;addgradcolors(unpack(MMH.COLORS.ENTRY_VALUE_BACKGROUND))&#13;&#10;&#9;&#9;&#9;drawroundrect(130, 87 + ROW_QUANTITY * 18, 110, 15, 2, 2)&#13;&#10;&#9;&#9;&#9;drawtext(num(SUPPLY_USED_QUANTITY) .. ' (' .. math.floor(SUPPLY_USED_WORTH / 100) / 10 .. 'K)', 136, 87 + ROW_QUANTITY * 18 + 15 / 2 - STRING_HEIGHT * 0.5)&#13;&#10;&#13;&#10;&#9;&#9;&#9;ROW_QUANTITY = ROW_QUANTITY + 1&#13;&#10;&#9;&#9;end&#13;&#10;&#13;&#10;&#9;&#9;SUPPLIES_USED_WORTH = SUPPLIES_USED_WORTH + SUPPLY_USED_WORTH&#13;&#10;&#9;end&#13;&#10;end&#13;&#10;&#13;&#10;if (MMH.SECTIONS.SUPPLIES_USED) then&#13;&#10;&#9;setfillstyle('gradient', 'linear', 2, 0, 0, 0, 16)&#13;&#10;&#9;addgradcolors(unpack(MMH.COLORS.ENTRY_NAME_BACKGROUND))&#13;&#10;&#9;drawroundrect(0, 87 + ROW_QUANTITY * 18, 240, 15, 2, 2)&#13;&#10;&#13;&#10;&#9;setcompositionmode(CompositionMode_SourceOver)&#13;&#10;&#9;drawitem(3031, 6, 87 + ROW_QUANTITY * 18, 50, 100)&#13;&#10;&#9;setcompositionmode(CompositionMode_Automatic)&#13;&#10;&#13;&#10;&#9;drawtext('Money Spent', 28, 87 + ROW_QUANTITY * 18 + 15 / 2 - STRING_HEIGHT * 0.5)&#13;&#10;&#13;&#10;&#9;setfillstyle('gradient', 'linear', 2, 0, 0, 0, 16)&#13;&#10;&#9;addgradcolors(unpack(MMH.COLORS.ENTRY_VALUE_BACKGROUND))&#13;&#10;&#9;drawroundrect(130, 87 + ROW_QUANTITY * 18, 110, 15, 2, 2)&#13;&#10;&#9;drawtext(num($moneyspent) .. ' (' .. math.floor($moneyspent / 100) / 10 .. 'K)', 136, 87 + ROW_QUANTITY * 18 + 15 / 2 - STRING_HEIGHT * 0.5)&#13;&#10;&#13;&#10;&#9;ROW_QUANTITY = ROW_QUANTITY + 1&#13;&#10;end&#13;&#10;&#13;&#10;SUPPLIES_USED_WORTH = SUPPLIES_USED_WORTH + $moneyspent&#13;&#10;&#13;&#10;setfillstyle('gradient', 'linear', 2, 0, 0, 0, 16)&#13;&#10;addgradcolors(unpack(MMH.COLORS.ENTRY_NAME_BACKGROUND))&#13;&#10;drawroundrect(0, 87 + ROW_QUANTITY * 18, 240, 15, 2, 2)&#13;&#10;drawtext('Total: ' .. num(SUPPLIES_USED_WORTH) .. ' GPs', 6, 87 + ROW_QUANTITY * 18 + 15 / 2 - STRING_HEIGHT * 0.5)&#13;&#10;&#13;&#10;ROW_QUANTITY = ROW_QUANTITY + 1&#13;&#10;&#13;&#10;setfontsize(8)&#13;&#10;&#13;&#10;STRING_WIDTH, STRING_HEIGHT = measurestring('TEMP')&#13;&#10;&#13;&#10;setfillstyle('gradient', 'linear', 2, 0, 0, 0, 21)&#13;&#10;if (ITEMS_LOOTED_WORTH &gt;= SUPPLIES_USED_WORTH) then&#13;&#10;&#9;addgradcolors(unpack(MMH.COLORS.RESULT_POSITIVE_BACKGROUND))&#13;&#10;else&#13;&#10;&#9;addgradcolors(unpack(MMH.COLORS.RESULT_NEGATIVE_BACKGROUND))&#13;&#10;end&#13;&#10;drawroundrect(0, 87 + ROW_QUANTITY * 18, 240, 20, 2, 2)&#13;&#10;drawtext(((ITEMS_LOOTED_WORTH &gt;= SUPPLIES_USED_WORTH and ('PROFIT: ')) or ('WASTE: ')) .. num(ITEMS_LOOTED_WORTH - SUPPLIES_USED_WORTH) .. ' GPs (' .. math.abs(math.floor(((ITEMS_LOOTED_WORTH - SUPPLIES_USED_WORTH) * 3600) / ($charactertime / 1000) / 100) / 10) .. ' k/h)', 6, 87 + ROW_QUANTITY * 18 + 20 / 2 - STRING_HEIGHT * 0.5)" enabled="yes" refreshRate="100"/>
            <HUDScript name="ActiveHotkeys" script="init start&#13;&#10;&#9;-- local SCRIPT_VERSION = '1.0.1'&#13;&#10;&#9;&#13;&#10;&#9;local types = {&quot;hotkey&quot;, &quot;persistent&quot;, &quot;cavebot&quot;}&#13;&#10;&#9;local fontsize = 7&#13;&#10;&#9;local fontspacing = fontsize + 6&#13;&#10;&#9;&#13;&#10;&#9;setfontstyle(&quot;Tahoma&quot;, fontsize, 99, 0xE4B31B, 1)&#13;&#10;&#9;setmaskcolorxp(0)&#13;&#10;init end&#13;&#10;&#13;&#10;local row = 0&#13;&#10;for _,scripttype in ipairs(types) do&#13;&#10;&#9;local i = 0&#13;&#10;&#9;while isscript(scripttype, i) do&#13;&#10;&#9;&#9;local listname = scriptlistname(scripttype, i)&#13;&#10;&#9;&#9;&#13;&#10;&#9;&#9;if listname ~= &quot;&quot; then&#13;&#10;&#9;&#9;&#9;setfontcolor(scriptlistcolor(scripttype, i))&#13;&#10;&#9;&#9;&#9;drawtext(listname, 2, 2 + row*fontspacing)&#13;&#10;&#9;&#9;&#9;row = row + 1&#13;&#10;&#9;&#9;end&#13;&#10;&#9;&#9;&#13;&#10;&#9;&#9;i = i + 1&#13;&#10;&#9;end&#13;&#10;end&#13;&#10;&#13;&#10;setposition($clientwin.left + 7, $worldwin.bottom - row*fontspacing - 1)" enabled="yes" refreshRate="100"/>
        </HUDScripts>
    </HUDs>
    <GeneralSettings>
        <Input>
            <MouseOption mouseMode="Simulate Mouse"/>
            <MouseOption scrollMode="Use mouse wheel"/>
            <MouseOption stuckCursorPolicy="If Cavebot on, Release Instantly"/>
            <MouseOption moveSpeed="9"/>
            <MouseOption clickWaitMin="30" clickWaitMax="80"/>
            <KeyboardOption keyboardMode="Simulate Keyboard"/>
            <KeyboardOption stuckCtrlShiftPolicy="If Cavebot on, Release Instantly"/>
            <KeyboardOption typeWaitMin="20" typeWaitMax="50"/>
            <KeyboardOption pressWaitMin="30" pressWaitMax="50"/>
            <FocusOption focusPolicy="Don't auto-focus"/>
            <FocusOption openMenuPolicy="Confirm if cavebotting"/>
        </Input>
    </GeneralSettings>
    <Alerts disableSounds="no">
        <alert name="Player On Screen" playSound="no" pauseBot="no" logout="no" safeList="&lt;SafeList&gt;&#10;"/>
        <alert name="Player Attacking" playSound="yes" pauseBot="no" logout="no" safeList="&lt;SafeList&gt;&#10;"/>
        <alert name="Monster Attacking" playSound="no" pauseBot="no" logout="no" safeList="&lt;SafeList&gt;&#10;"/>
        <alert name="Private Message" playSound="no" pauseBot="no" logout="no" safeList="&lt;SafeList&gt;&#10;"/>
        <alert name="Default Message" playSound="no" pauseBot="no" logout="no" safeList="&lt;SafeList&gt;&#10;"/>
        <alert name="GM Detected" playSound="yes" pauseBot="no" logout="no"/>
        <alert name="Disconnected" playSound="yes" pauseBot="no" logout="no"/>
        <alert name="Character Stuck" playSound="no" pauseBot="no" logout="no" standTime="30000"/>
        <alert name="Health Below" playSound="no" pauseBot="no" logout="no" healthPercent="50"/>
        <alert name="Mana Below" playSound="no" pauseBot="no" logout="no" manaPercent="50"/>
        <alert name="Unjust Kill" playSound="no" pauseBot="no" logout="no"/>
        <alert name="Enemies Online" playSound="no" pauseBot="no" logout="no" enemiesCount="50"/>
    </Alerts>
    <Cavebot enabled="no">
        <Options>
            <Option shovel="5710"/>
            <Option rope="3003"/>
            <Option machete="3308"/>
            <Option pick="3456"/>
            <Option nodeRange="2"/>
            <Option pauseBotOnDeath="yes"/>
            <Option refillAmmo="no" refillAmmoMin="30" refillAmmoMax="70"/>
            <Option autoMount="no"/>
            <Option fireAvoidanceMin="15" fireAvoidanceMax="20"/>
            <Option energyAvoidanceMin="15" energyAvoidanceMax="20"/>
            <Option poisonAvoidanceMin="15" poisonAvoidanceMax="20"/>
            <Option walkThroughPlayers="yes"/>
            <Option walkMethod="Walk With Arrow Keys"/>
            <Option walkableItems=""/>
            <Option mapWalkDistMin="26" mapWalkDistMax="36"/>
            <Option userOptionsScript="{&#10;&#9;&quot;type&quot;: &quot;scriptinfo&quot;,&#10;&#9;&quot;name&quot;: &quot;Venore Coryms by Garkstal&quot;,&#10;&#9;&quot;version&quot;: &quot;1.0.2&quot;&#10;},&#10;{&#10; &quot;type&quot;  : &quot;group&quot;,&#10; &quot;name&quot;  : &quot;Venore Coryms by Garkstal - Setup&quot;,&#10; &quot;children&quot; : &#10;     [&#10;&#9;{&#10;       &quot;type&quot; : &quot;checkbox&quot;,&#10;       &quot;name&quot; : &quot;items&quot;,&#10;       &quot;text&quot; : &quot;Sell Earflaps&quot;,&#10;       &quot;value&quot; : true&#10;      }, &#10;&#9;&#9;{&#10;       &quot;type&quot; : &quot;checkbox&quot;,&#10;       &quot;name&quot; : &quot;extra&quot;,&#10;&#9;&#9;&quot;description&quot; : &quot;Use extra checker after Raffzan shop?&quot;,&#10;       &quot;text&quot; : &quot;Extra Checker&quot;,&#10;       &quot;value&quot; : true&#10;      }&#10;     ]&#10;},&#10;{&#10; &quot;type&quot;  : &quot;group&quot;,&#10; &quot;name&quot;  : &quot;Hunting Settings&quot;,&#10; &quot;column&quot; : 2,&#10; &quot;children&quot; : &#10;     [&#10;&#9;&#9;&#9;{&#10;&#9;&#9; &#9;&quot;type&quot;  : &quot;group&quot;,&#10; &#9;&#9;&#9;&quot;name&quot;  : &quot;Floor-1&quot;,&#10; &#9;&#9;&#9;&quot;column&quot; : 2,&#10; &#9;&#9;&#9;&quot;children&quot; : &#10;&#9;&#9;&#9;[&#10;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&quot;type&quot; : &quot;checkbox&quot;,&#10;       &#9;&#9;&#9;&quot;name&quot; : &quot;NW-1&quot;,&#10;       &#9;&#9;&#9;&quot;text&quot; : &quot;North West - 1&quot;,&#10;       &#9;&#9;&#9;&quot;value&quot; : false&#10;      &#9;&#9;&#9;},&#10;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&quot;type&quot; : &quot;checkbox&quot;,&#10;       &#9;&#9;&#9;&quot;name&quot; : &quot;E-1&quot;,&#10;       &#9;&#9;&#9;&quot;text&quot; : &quot;East - 1&quot;,&#10;       &#9;&#9;&#9;&quot;value&quot; : false&#10;      &#9;&#9;&#9;},&#10;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&quot;type&quot; : &quot;checkbox&quot;,&#10;       &#9;&#9;&#9;&quot;name&quot; : &quot;S-1&quot;,&#10;       &#9;&#9;&#9;&quot;text&quot; : &quot;South - 1&quot;,&#10;       &#9;&#9;&#9;&quot;value&quot; : false&#10;      &#9;&#9;&#9;}&#10;&#9;&#9;&#9;]&#10;     &#9;&#9;}&#10;&#9;]&#10;},&#10;{&#10; &quot;type&quot;  : &quot;group&quot;,&#10; &quot;name&quot;  : &quot;Potions Configuration&quot;,&#10;&quot;column&quot; : 2,&#10; &quot;children&quot; : &#10;     [&#10;{&#10;       &quot;type&quot; : &quot;lineedit&quot;,&#10;       &quot;name&quot; : &quot;MpToBuy&quot;,&#10;       &quot;text&quot; : &quot;Mp To Buy&quot;,&#10;       &quot;value&quot; : &quot;1500&quot;&#10;      },&#10;{&#10;       &quot;type&quot; : &quot;lineedit&quot;,&#10;       &quot;name&quot; : &quot;MpToLeave&quot;,&#10;       &quot;text&quot; : &quot;Mp To Leave&quot;,&#10;       &quot;value&quot; : &quot;130&quot;&#10;      },&#10;&#9; {&#10;       &quot;type&quot; : &quot;combobox&quot;,&#10;       &quot;name&quot; : &quot;HpName&quot;,&#10;       &quot;text&quot; : &quot;Type of Health Potions:&quot;,&#10;       &quot;items&quot; : [&quot;Health Potion&quot;, &quot;Strong Health Potion&quot;, &quot;Great Health Potion&quot;, &quot;Ultimate Health Potion&quot;]&#10;      },&#10; {&#10;       &quot;type&quot; : &quot;lineedit&quot;,&#10;       &quot;name&quot; : &quot;GhpToBuy&quot;,&#10;       &quot;text&quot; : &quot;Health Potions To Buy&quot;,&#10;       &quot;value&quot; : &quot;100&quot;&#10;      },&#10;{&#10;       &quot;type&quot; : &quot;lineedit&quot;,&#10;       &quot;name&quot; : &quot;GhpToLeave&quot;,&#10;       &quot;text&quot; : &quot;Health Potions To Leave&quot;,&#10;       &quot;value&quot; : &quot;40&quot;&#10;      },&#10;&#9;{&#10;       &quot;type&quot; : &quot;lineedit&quot;,&#10;       &quot;name&quot; : &quot;CapToLeave&quot;,&#10;       &quot;text&quot; : &quot;Cap To Leave&quot;,&#10;       &quot;value&quot; : &quot;100&quot;&#10;      }&#10;     ]&#10;},&#10;{&#10; &quot;type&quot;  : &quot;group&quot;,&#10; &quot;name&quot;  : &quot;Backpack Setup&quot;,&#10; &quot;children&quot; : &#10;     [&#10;       {&#10;  &#9;&#9;&quot;type&quot; : &quot;combobox&quot;,&#10;  &#9;&#9;&quot;name&quot; : &quot;mainbp&quot;,&#10;  &#9;&#9;&quot;text&quot; : &quot;Main Backpack Name&quot;,&#10;  &#9;&#9;&quot;items&quot; : [&quot;Anniversary Backpack&quot;, &quot;Brown Backpack&quot;, &quot;Backpack of holding&quot;, &quot;Beach Backpack&quot;, &quot;Blue Backpack&quot;, &quot;Brocade Backpack&quot;, &quot;Buggy Backpack&quot;, &quot;Camouflage Backpack&quot;, &quot;Crown Backpack&quot;, &quot;Crystal Backpack&quot;, &quot;Deepling Backpack&quot;, &quot;Demon Backpack&quot;, &quot;Dragon Backpack&quot;, &quot;Expedition Backpack&quot;, &quot;Fur Backpack&quot;, &quot;Golden Backpack&quot;, &quot;Green Backpack&quot;, &quot;Heart Backpack&quot;, &quot;Jewelled Backpack&quot;, &quot;Minotaur Backpack&quot;, &quot;Moon Backpack&quot;, &quot;Mushroom Backpack&quot;, &quot;Orange Backpack&quot;, &quot;Pannier Backpack&quot;, &quot;Pirate Backpack&quot;, &quot;Purple Backpack&quot;, &quot;Red Backpack&quot;, &quot;Santa Backpack&quot;, &quot;Yellow Backpack&quot;]&#10;  &#9;&#9;},&#10;&#9;&#9;{&#10;  &#9;&#9;&quot;type&quot; : &quot;combobox&quot;,&#10;  &#9;&#9;&quot;name&quot; : &quot;rarebp&quot;,&#10;  &#9;&#9;&quot;text&quot; : &quot;Loot Backpack Name&quot;,&#10;  &#9;&#9;&quot;items&quot; : [&quot;Anniversary Backpack&quot;, &quot;Brown Backpack&quot;, &quot;Backpack of holding&quot;, &quot;Beach Backpack&quot;, &quot;Blue Backpack&quot;, &quot;Brocade Backpack&quot;, &quot;Buggy Backpack&quot;, &quot;Camouflage Backpack&quot;, &quot;Crown Backpack&quot;, &quot;Crystal Backpack&quot;, &quot;Deepling Backpack&quot;, &quot;Demon Backpack&quot;, &quot;Dragon Backpack&quot;, &quot;Expedition Backpack&quot;, &quot;Fur Backpack&quot;, &quot;Golden Backpack&quot;, &quot;Green Backpack&quot;, &quot;Heart Backpack&quot;, &quot;Jewelled Backpack&quot;, &quot;Minotaur Backpack&quot;, &quot;Moon Backpack&quot;, &quot;Mushroom Backpack&quot;, &quot;Orange Backpack&quot;, &quot;Pannier Backpack&quot;, &quot;Pirate Backpack&quot;, &quot;Purple Backpack&quot;, &quot;Red Backpack&quot;, &quot;Santa Backpack&quot;, &quot;Yellow Backpack&quot;]&#10;  &#9;&#9;},&#10;&#9;&#9;{&#10;  &#9;&#9;&quot;type&quot; : &quot;combobox&quot;,&#10;  &#9;&#9;&quot;name&quot; : &quot;goldbp&quot;,&#10;  &#9;&#9;&quot;text&quot; : &quot;Gold Backpack Name&quot;,&#10;  &#9;&#9;&quot;items&quot; : [&quot;Anniversary Backpack&quot;, &quot;Brown Backpack&quot;, &quot;Backpack of holding&quot;, &quot;Beach Backpack&quot;, &quot;Blue Backpack&quot;, &quot;Brocade Backpack&quot;, &quot;Buggy Backpack&quot;, &quot;Camouflage Backpack&quot;, &quot;Crown Backpack&quot;, &quot;Crystal Backpack&quot;, &quot;Deepling Backpack&quot;, &quot;Demon Backpack&quot;, &quot;Dragon Backpack&quot;, &quot;Expedition Backpack&quot;, &quot;Fur Backpack&quot;, &quot;Golden Backpack&quot;, &quot;Green Backpack&quot;, &quot;Heart Backpack&quot;, &quot;Jewelled Backpack&quot;, &quot;Minotaur Backpack&quot;, &quot;Moon Backpack&quot;, &quot;Mushroom Backpack&quot;, &quot;Orange Backpack&quot;, &quot;Pannier Backpack&quot;, &quot;Pirate Backpack&quot;, &quot;Purple Backpack&quot;, &quot;Red Backpack&quot;, &quot;Santa Backpack&quot;, &quot;Yellow Backpack&quot;]&#10;  &#9;&#9;},&#10;&#9;&#9;{&#10;  &#9;&#9;&quot;type&quot; : &quot;combobox&quot;,&#10;  &#9;&#9;&quot;name&quot; : &quot;rarebpn&quot;,&#10;  &#9;&#9;&quot;text&quot; : &quot;Supplies Backpack Name&quot;,&#10;  &#9;&#9;&quot;items&quot; : [&quot;Anniversary Backpack&quot;, &quot;Brown Backpack&quot;, &quot;Backpack of holding&quot;, &quot;Beach Backpack&quot;, &quot;Blue Backpack&quot;, &quot;Brocade Backpack&quot;, &quot;Buggy Backpack&quot;, &quot;Camouflage Backpack&quot;, &quot;Crown Backpack&quot;, &quot;Crystal Backpack&quot;, &quot;Deepling Backpack&quot;, &quot;Demon Backpack&quot;, &quot;Dragon Backpack&quot;, &quot;Expedition Backpack&quot;, &quot;Fur Backpack&quot;, &quot;Golden Backpack&quot;, &quot;Green Backpack&quot;, &quot;Heart Backpack&quot;, &quot;Jewelled Backpack&quot;, &quot;Minotaur Backpack&quot;, &quot;Moon Backpack&quot;, &quot;Mushroom Backpack&quot;, &quot;Orange Backpack&quot;, &quot;Pannier Backpack&quot;, &quot;Pirate Backpack&quot;, &quot;Purple Backpack&quot;, &quot;Red Backpack&quot;, &quot;Santa Backpack&quot;, &quot;Yellow Backpack&quot;]&#10;  &#9;&#9;}&#10;     ]&#10;},&#10;{&#10; &quot;type&quot;  : &quot;group&quot;,&#10; &quot;name&quot;  : &quot;Depot Backpack Setup&quot;,&#10; &quot;children&quot; : &#10;     [&#10;       {&#10;  &#9;&#9;&quot;type&quot; : &quot;combobox&quot;,&#10;  &#9;&#9;&quot;name&quot; : &quot;maindp&quot;,&#10;  &#9;&#9;&quot;text&quot; : &quot;Main Depot Backpack Name&quot;,&#10;  &#9;&#9;&quot;items&quot; : [&quot;Anniversary Backpack&quot;, &quot;Brown Backpack&quot;, &quot;Backpack of holding&quot;, &quot;Beach Backpack&quot;, &quot;Blue Backpack&quot;, &quot;Brocade Backpack&quot;, &quot;Buggy Backpack&quot;, &quot;Camouflage Backpack&quot;, &quot;Crown Backpack&quot;, &quot;Crystal Backpack&quot;, &quot;Deepling Backpack&quot;, &quot;Demon Backpack&quot;, &quot;Dragon Backpack&quot;, &quot;Expedition Backpack&quot;, &quot;Fur Backpack&quot;, &quot;Golden Backpack&quot;, &quot;Green Backpack&quot;, &quot;Heart Backpack&quot;, &quot;Jewelled Backpack&quot;, &quot;Minotaur Backpack&quot;, &quot;Moon Backpack&quot;, &quot;Mushroom Backpack&quot;, &quot;Orange Backpack&quot;, &quot;Pannier Backpack&quot;, &quot;Pirate Backpack&quot;, &quot;Purple Backpack&quot;, &quot;Red Backpack&quot;, &quot;Santa Backpack&quot;, &quot;Yellow Backpack&quot;]&#10;  &#9;&#9;},&#10;&#9;&#9;{&#10;  &#9;&#9;&quot;type&quot; : &quot;combobox&quot;,&#10;  &#9;&#9;&quot;name&quot; : &quot;stackdp&quot;,&#10;  &#9;&#9;&quot;text&quot; : &quot;Stackables Backpack Name&quot;,&#10;  &#9;&#9;&quot;items&quot; : [&quot;Anniversary Backpack&quot;, &quot;Brown Backpack&quot;, &quot;Backpack of holding&quot;, &quot;Beach Backpack&quot;, &quot;Blue Backpack&quot;, &quot;Brocade Backpack&quot;, &quot;Buggy Backpack&quot;, &quot;Camouflage Backpack&quot;, &quot;Crown Backpack&quot;, &quot;Crystal Backpack&quot;, &quot;Deepling Backpack&quot;, &quot;Demon Backpack&quot;, &quot;Dragon Backpack&quot;, &quot;Expedition Backpack&quot;, &quot;Fur Backpack&quot;, &quot;Golden Backpack&quot;, &quot;Green Backpack&quot;, &quot;Heart Backpack&quot;, &quot;Jewelled Backpack&quot;, &quot;Minotaur Backpack&quot;, &quot;Moon Backpack&quot;, &quot;Mushroom Backpack&quot;, &quot;Orange Backpack&quot;, &quot;Pannier Backpack&quot;, &quot;Pirate Backpack&quot;, &quot;Purple Backpack&quot;, &quot;Red Backpack&quot;, &quot;Santa Backpack&quot;, &quot;Yellow Backpack&quot;]&#10;  &#9;&#9;},&#10;&#9;&#9;{&#10;  &#9;&#9;&quot;type&quot; : &quot;combobox&quot;,&#10;  &#9;&#9;&quot;name&quot; : &quot;nstackdp&quot;,&#10;  &#9;&#9;&quot;text&quot; : &quot;Not Stackable Backpack Name&quot;,&#10;  &#9;&#9;&quot;items&quot; : [&quot;Anniversary Backpack&quot;, &quot;Brown Backpack&quot;, &quot;Backpack of holding&quot;, &quot;Beach Backpack&quot;, &quot;Blue Backpack&quot;, &quot;Brocade Backpack&quot;, &quot;Buggy Backpack&quot;, &quot;Camouflage Backpack&quot;, &quot;Crown Backpack&quot;, &quot;Crystal Backpack&quot;, &quot;Deepling Backpack&quot;, &quot;Demon Backpack&quot;, &quot;Dragon Backpack&quot;, &quot;Expedition Backpack&quot;, &quot;Fur Backpack&quot;, &quot;Golden Backpack&quot;, &quot;Green Backpack&quot;, &quot;Heart Backpack&quot;, &quot;Jewelled Backpack&quot;, &quot;Minotaur Backpack&quot;, &quot;Moon Backpack&quot;, &quot;Mushroom Backpack&quot;, &quot;Orange Backpack&quot;, &quot;Pannier Backpack&quot;, &quot;Pirate Backpack&quot;, &quot;Purple Backpack&quot;, &quot;Red Backpack&quot;, &quot;Santa Backpack&quot;, &quot;Yellow Backpack&quot;]&#10;  &#9;&#9;}&#10;     ]&#10;}"/>
        </Options>
        <SpecialAreas>
            <Area name="NewSpecialArea1" x="32949" y="31459" z="4" type="Square (Filled)" width="10" height="1" avoidance="250" waitTimeMin="0" waitTimeMax="100" policy="Targeting" ignoreWhenLuring="no" ignoreWhenLooting="no" comment=""/>
        </SpecialAreas>
        <CavebotScripts>
            <CavebotScript name="Vial Dropper" script="auto(200)&#10;local FLASKS = {283,284,285}&#10;&#10;for i = 1, #FLASKS do&#10;&#9;while (itemcount(FLASKS[i]) &gt;= 40) and (maround(4,false) == 0) and $cap &lt;= 300 do&#10;&#9;&#9;pausewalking(10000)&#10;    &#9;moveitems(FLASKS[i], 'ground')&#10;&#9;&#9;pausewalking(0)&#10;    end&#10;end" enabled="no"/>
            <CavebotScript name="Changes" script="auto(5000)&#10;&#10;&#10;if getuseroption(&quot;HpName&quot;) == &quot;Health Potion&quot; then&#10;&#9;setsetting('PotionHealer/Rules/Ghp/Spell', 'Health Potion')&#10;elseif getuseroption(&quot;HpName&quot;) == &quot;Strong Health Potion&quot; then&#10;&#9;setsetting('PotionHealer/Rules/Ghp/Spell', 'Strong Health Potion')&#10;elseif getuseroption(&quot;HpName&quot;) == &quot;Great Health Potion&quot; then&#10;&#9;setsetting('PotionHealer/Rules/Ghp/Spell', 'Great Health Potion')&#10;else&#10;&#9;setsetting('PotionHealer/Rules/Ghp/Spell', 'Ultimate Health Potion')&#10;end" enabled="yes"/>
        </CavebotScripts>
        <WaypointSection name="DepotandBank">
            <Waypoint type="Stand" x="33017" y="32049" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Action" x="32789" y="31247" z="6" rangeX="1" rangeY="1" label="BpOpener" script="--local mainbp = getlootingdestination('mainbp') &#10;--local rarebp = getlootingdestination('rarebp')&#10;&#10;--DEPOSIT STACK SHIT&#10; depotaction('maindp', 'rarebp', {'b','stackdp'})&#10;&#10;--closewindows()&#10;--wait(1000)&#10;&#10;--while windowcount(rarebp) == 0 do&#10;--&#9;closewindows()&#10;--&#9;wait(1000)&#10;--&#9;openitem(0, 'back')&#10;--&#9;wait(1000)&#10;--&#9;openitem(rarebp, mainbp, false)&#10;--&#9;wait(1000)&#10;--end&#10;&#10;--while itemcount(rarebp, rarebp) &gt; 0 do&#10;--&#9;openitem(rarebp, rarebp, false)&#10;--&#9;wait(500)&#10;--end"/>
            <Waypoint type="Action" x="32789" y="31247" z="6" rangeX="1" rangeY="1" label="Depositer" script="--depotaction('maindp', &quot;rarebp&quot;, {'b','stackdp','a','nstackdp'})&#10;"/>
            <Waypoint type="Action" x="32954" y="31472" z="6" rangeX="1" rangeY="1" script="if $stamina &lt;= 15*60 then&#10;&#9;logout()&#10;end"/>
            <Waypoint type="Action" x="32778" y="31243" z="5" rangeX="1" rangeY="1" script="local mainbp = getlootingdestination(&quot;mainbp&quot;)&#10;local goldbp = getlootingdestination(&quot;goldbp&quot;)&#10;local rarebp = getlootingdestination(&quot;rarebp&quot;)&#10;local rarebpn = getlootingdestination(&quot;rarebpn&quot;)&#10;local maindp = getlootingdestination(&quot;maindp&quot;)&#10;local nstackdp = getlootingdestination(&quot;nstackdp&quot;)&#10;closewindows()auto(1000,2000)&#10;openitem(mainbp,&quot;back&quot;)wait(1000,1500)&#10;openitem(goldbp,mainbp,true)wait(1000,1500)&#10;openitem(rarebp,mainbp,true)wait(1000,1500)&#10;openitem(rarebpn,mainbp,true)wait(1000,1500)&#10;resizewindows()"/>
            <Waypoint type="Stand" x="33019" y="32059" z="7" rangeX="1" rangeY="1" label="ToBank"/>
            <Waypoint type="Walk" x="33020" y="32059" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33019" y="32053" z="6" rangeX="1" rangeY="1"/>
            <Waypoint type="Action" x="33019" y="32053" z="6" rangeX="1" rangeY="1" script="--MP = getuseroption(&quot;MpToBuy&quot;)&#10;--Name = getuseroption(&quot;HpName&quot;)&#10;--GHP = getuseroption(&quot;GhpToBuy&quot;)&#10;&#10;--MpCount = math.positive((MP - itemcount(&quot;mana potion&quot;))*50)&#10;--HpCount = math.positive((GHP - itemcount(Name))*itemcount(Name))&#10;--Total = MpCount + HpCount + 1000&#10;&#10;&#10;if not islocation(2) then&#10;&#9;gotolabel($wptid - 3, &quot;DepotandBank&quot;)&#10;else&#10;depositerbank('a')&#10;waitping()&#10;--&#9;if ischannel('NPCs') then&#10;--&#9;&#9;npcsay('hi') &#10;--&#9;&#9;waitping()&#10;--&#9;else&#10;--&#9;&#9;say('hi') &#10;--&#9;&#9;wait(2000,3000)&#10;--&#9;end&#10;--&#9;npcsay(&quot;deposit all&quot;)&#10;--&#9;wait(1000)&#10;--&#9;npcsay(&quot;yes&quot;)&#10;--&#9;wait(1000)&#10;--&#9;if Total &gt; 0 then&#10;--&#9;&#9;npcsay(&quot;withdraw &quot;.. Total)&#10;--&#9;&#9;wait(1200)&#10;--&#9;&#9;npcsay(&quot;yes&quot;)&#10;--&#9;&#9;wait(1000)&#10;--&#9;end&#10;--&#9;npcsay(&quot;balance&quot;)&#10;--&#9;wait(1000)&#10;end"/>
            <Waypoint type="Node" x="33007" y="32062" z="6" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="32988" y="32072" z="6" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="32972" y="32083" z="6" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32971" y="32086" z="6" rangeX="1" rangeY="1"/>
            <Waypoint type="Action" x="32971" y="32085" z="6" rangeX="1" rangeY="1" label="Mana Shop" script="--local mainbp = getlootingdestination('mainbp') &#10;--local suppbp = getlootingdestination('suppbp')&#10;--MP = getuseroption(&quot;MpToBuy&quot;)&#10;--HP = getuseroption(&quot;GhpToBuy&quot;)&#10;--HpName = getuseroption(&quot;HpName&quot;)&#10;--MpCount = (MP - itemcount(&quot;mana potion&quot;))&#10;--GhpCount = (HP - itemcount(HpName))&#10;&#10;if not islocation(1) then&#10;&#9;gotolabel($wptid - 4, &quot;DepotandBank&quot;)&#10;else&#10;resupply(&quot;a&quot;)waitping()&#10;--&#9;sellflasks()&#10;--&#9;wait(800)&#10;--&#9;local ActualAmount = (GhpCount)&#10;--&#9;while ActualAmount &gt; 0 do&#10;--&#9;&#9;buyitems(HpName, ActualAmount)&#10;--&#9;&#9;wait(1000)&#10;--&#9;&#9;moveitems(HpName, suppbp, mainbp, 100)&#10;--&#9;&#9;wait(500)&#10;--&#9;&#9;ActualAmount = ActualAmount - 100&#10;--&#9;end&#10;&#10;--&#9;local ActualAmount = (MpCount)&#10;--while ActualAmount &gt; 0 do&#10;--&#9;&#9;buyitems(&quot;mana potion&quot;, ActualAmount)&#10;--&#9;&#9;wait(1000)&#10;--&#9;&#9;moveitems(&quot;mana potion&quot;, suppbp, mainbp, 100)&#10;--&#9;&#9;wait(500)&#10;--&#9;&#9;ActualAmount = ActualAmount - 100&#10;--&#9;end&#10;end"/>
            <Waypoint type="Node" x="32976" y="32076" z="6" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="32991" y="32073" z="6" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="32998" y="32073" z="6" rangeX="1" rangeY="1"/>
            <Waypoint type="Action" x="32998" y="32073" z="6" rangeX="1" rangeY="1" script="if not islocation(2) then&#10;&#9;gotolabel($wptid - 3, &quot;DepotandBank&quot;)&#10;end&#10;if needresupply(50,'a') then&#10;&#9;gotolabel(&quot;ToBank&quot;, &quot;DepotandBank&quot;)&#10;else&#10;&#9;gotolabel(0, &quot;ToSpawn&quot;)&#10;end"/>
            <Waypoint type="Action" x="32790" y="31233" z="7" rangeX="1" rangeY="1" label="Checker After Mana Shop" script="if not islocation(2) then&#10;&#9;gotolabel($wptid - 3, &quot;DepotandBank&quot;)&#10;elseif needresupply(50,&quot;a&quot;) then&#10;&#9;gotolabel(&quot;ToBank&quot;, &quot;DepotandBank&quot;)&#10;else&#10;&#9;gotolabel(0, &quot;ToSpawn&quot;)&#10;end"/>
            <Waypoint type="Action" x="32817" y="31274" z="6" rangeX="1" rangeY="1" script="usedoor(32817,31275,6,&quot;open&quot;)&#10;wait(400)"/>
            <Waypoint type="Action" x="32953" y="32108" z="6" rangeX="1" rangeY="1" script="if ischannel('NPCs') then&#10;&#9;npcsay('hi') &#10;&#9;waitping()&#10;else&#10;&#9;say('hi') &#10;&#9;wait(2000,3000)&#10;end&#10;&#10;local k = itemcount(&quot;worn soft boots&quot;)&#10;local CashForSofts = k*10000&#10;local Gold = itemcount(&quot;gold coin&quot;) + itemcount(&quot;platinum coin&quot;)*100 + itemcount(&quot;crystal coin&quot;)*10000&#10;for i=1, k do&#10;&#9;npcsay(&quot;repair&quot;)&#10;&#9;wait(1000)&#10;&#9;npcsay(&quot;yes&quot;)&#10;&#9;wait(1000)&#10;&#9;if Gold &lt; CashForSofts+200 then&#10;&#9;&#9;break&#10;&#9;end&#10;end"/>
        </WaypointSection>
        <WaypointSection name="ToSpawn">
            <Waypoint type="Node" x="32998" y="32085" z="6" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32998" y="32096" z="6" rangeX="1" rangeY="1"/>
            <Waypoint type="Action" x="32998" y="32096" z="6" rangeX="1" rangeY="1" script="usedoor(32999,32096,6,&quot;open&quot;)&#10;wait(400)"/>
            <Waypoint type="Stand" x="33004" y="32096" z="6" rangeX="1" rangeY="1"/>
            <Waypoint type="Walk" x="33004" y="32095" z="6" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33004" y="32098" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Action" x="33004" y="32098" z="7" rangeX="1" rangeY="1" script="usedoor(33004,32099,7,&quot;open&quot;)&#10;wait(400)"/>
            <Waypoint type="Stand" x="33006" y="32101" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Action" x="33006" y="32101" z="7" rangeX="1" rangeY="1" script="if not islocation(1) then&#10;&#9;gotolabel(0, &quot;ToSpawn&quot;)&#10;end"/>
            <Waypoint type="Stand" x="33008" y="32100" z="7" rangeX="1" rangeY="1" label="AfterDoors"/>
            <Waypoint type="Ladder" x="33009" y="32100" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="33022" y="32100" z="6" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33032" y="32097" z="6" rangeX="1" rangeY="1"/>
            <Waypoint type="Walk" x="33032" y="32096" z="6" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="33042" y="32096" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="33062" y="32095" z="7" rangeX="1" rangeY="1" label="AfterRaffazan"/>
            <Waypoint type="Node" x="33070" y="32090" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Walk" x="33071" y="32089" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33073" y="32087" z="6" rangeX="1" rangeY="1"/>
            <Waypoint type="Walk" x="33073" y="32086" z="6" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33073" y="32086" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Walk" x="33072" y="32086" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33073" y="32087" z="8" rangeX="1" rangeY="1"/>
            <Waypoint type="Action" x="33073" y="32087" z="8" rangeX="1" rangeY="1" script="local mainbp = getlootingdestination('mainbp')&#10;local rarebpn = getlootingdestination('rarebpn')&#10;local rarebp = getlootingdestination('rarebp')&#10;local goldbp = getlootingdestination('goldbp')&#10;&#10;if not islocation(2) then&#10;&#9;gotolabel(&quot;AfterDoors&quot;, &quot;ToSpawn&quot;)&#10;else&#10;&#9;closewindows()&#10;&#9;wait(1000)&#10;&#9;&#10;&#9;while windowcount() &lt; 4 do&#10;&#9;&#9;openitem(0, 'back')&#10;&#9;&#9;wait(500,1000)&#10;&#9;&#9;resizewindows()&#10;&#9;&#9;wait(500,1000)&#10;&#9;&#9;openitem(goldbp, mainbp, true)&#10;&#9;&#9;wait(500,1000)&#10;&#9;&#9;resizewindows()&#10;&#9;&#9;wait(500,1000)&#10;&#9;&#9;openitem(rarebp, mainbp, true)&#10;&#9;&#9;wait(500,1000)&#10;&#9;&#9;resizewindows()&#10;&#9;&#9;wait(500,1000)&#10;&#9;&#9;openitem(rarebpn, mainbp, true)&#10;&#9;&#9;wait(500,1000)&#10;&#9;&#9;resizewindows()&#10;&#9;&#9;wait(500,1000)&#10;&#9;end&#10;&#9;gotolabel(0, &quot;Spawns&quot;)&#10;end"/>
        </WaypointSection>
        <WaypointSection name="Spawns">
            <Waypoint type="Action" x="33076" y="32083" z="8" rangeX="1" rangeY="1" script="local NW = getuseroption(&quot;NW-1&quot;)&#10;local E = getuseroption(&quot;E-1&quot;)&#10;local S = getuseroption(&quot;S-1&quot;)&#10;&#10;&#10;if $stamina &lt;= 15*60 then&#10;&#9;gotolabel(&quot;Leave&quot;, &quot;LeaveFromSpawn&quot;)&#10;elseif NW then &#10;&#9;return&#10;elseif E then&#10;&#9;gotolabel(&quot;ToE&quot;, &quot;Spawns&quot;)&#10;elseif S then&#10;&#9;gotolabel(&quot;ToS&quot;, &quot;Spawns&quot;)&#10;end"/>
            <Waypoint type="Walk" x="33078" y="32079" z="8" rangeX="1" rangeY="1" label="ToEast"/>
            <Waypoint type="Node" x="33086" y="32071" z="9" rangeX="1" rangeY="1"/>
            <Waypoint type="Walk" x="33092" y="32069" z="9" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33095" y="32066" z="10" rangeX="1" rangeY="1"/>
            <Waypoint type="Action" x="33095" y="32066" z="10" rangeX="1" rangeY="1" script="if not islocation(3) then&#10;&#9;gotolabel(&quot;ToEast&quot;, &quot;Spawns&quot;)&#10;end"/>
            <Waypoint type="Node" x="33105" y="32065" z="10" rangeX="1" rangeY="1" label="StartNw"/>
            <Waypoint type="Node" x="33104" y="32050" z="10" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="33109" y="32036" z="10" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="33111" y="32020" z="10" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="33096" y="32016" z="10" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="33086" y="32020" z="10" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="33077" y="32012" z="10" rangeX="1" rangeY="1"/>
            <Waypoint type="Action" x="33077" y="32012" z="10" rangeX="1" rangeY="1" script="--Resupply check&#10;local cap = tonumber(getuseroption(&quot;CapToLeave&quot;))&#10;&#10;if needresupply(cap, &quot;a&quot;) then&#10;&#9;gotolabel(&quot;AfterChecker1&quot;, &quot;Spawns&quot;)&#10;end"/>
            <Waypoint type="Node" x="33059" y="32016" z="10" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="33038" y="32010" z="10" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="33018" y="32015" z="10" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="32999" y="32011" z="10" rangeX="1" rangeY="1" label="AfterChecker1"/>
            <Waypoint type="Node" x="32979" y="32010" z="10" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="33000" y="32011" z="10" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="33036" y="32011" z="10" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="33052" y="32026" z="10" rangeX="1" rangeY="1"/>
            <Waypoint type="Action" x="33052" y="32026" z="10" rangeX="1" rangeY="1" script="--Resupply check&#10;local cap = tonumber(getuseroption(&quot;CapToLeave&quot;))&#10;&#10;if needresupply(cap, &quot;a&quot;) then&#10;&#9;gotolabel(&quot;AfterChecker2&quot;, &quot;Spawns&quot;)&#10;end"/>
            <Waypoint type="Node" x="33065" y="32037" z="10" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="33073" y="32033" z="10" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="33074" y="32047" z="10" rangeX="1" rangeY="1" label="AfterChecker2"/>
            <Waypoint type="Node" x="33090" y="32041" z="10" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="33101" y="32060" z="10" rangeX="1" rangeY="1"/>
            <Waypoint type="Action" x="33101" y="32060" z="10" rangeX="1" rangeY="1" script="--Resupply check&#10;local cap = tonumber(getuseroption(&quot;CapToLeave&quot;))&#10;&#10;if needresupply(cap, &quot;a&quot;) then&#10;&#9;gotolabel(&quot;LeaveNw&quot;, &quot;LeaveFromSpawn&quot;)&#10;else&#10;&#9;gotolabel(&quot;StartNw&quot;, &quot;Spawns&quot;)&#10;end"/>
            <Waypoint type="Node" x="33082" y="32087" z="8" rangeX="1" rangeY="1" label="ToE"/>
            <Waypoint type="Walk" x="33084" y="32088" z="8" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="33091" y="32089" z="9" rangeX="1" rangeY="1"/>
            <Waypoint type="Walk" x="33093" y="32090" z="9" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="33102" y="32088" z="10" rangeX="1" rangeY="1"/>
            <Waypoint type="Action" x="33102" y="32088" z="10" rangeX="1" rangeY="1" script="if not islocation(3) then&#10;&#9;gotolabel(&quot;ToE&quot;, &quot;Spawns&quot;)&#10;end"/>
            <Waypoint type="Node" x="33121" y="32090" z="10" rangeX="1" rangeY="1" label="StartE"/>
            <Waypoint type="Node" x="33117" y="32107" z="10" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="33114" y="32124" z="10" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="33128" y="32124" z="10" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="33126" y="32112" z="10" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="33136" y="32107" z="10" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="33129" y="32093" z="10" rangeX="1" rangeY="1"/>
            <Waypoint type="Action" x="33129" y="32093" z="10" rangeX="1" rangeY="1" script="--Resupply check&#10;local cap = tonumber(getuseroption(&quot;CapToLeave&quot;))&#10;&#10;if needresupply(cap, &quot;a&quot;) then&#10;&#9;gotolabel(&quot;AfterChecker3&quot;, &quot;Spawns&quot;)&#10;end"/>
            <Waypoint type="Node" x="33136" y="32081" z="10" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="33140" y="32067" z="10" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="33140" y="32051" z="10" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="33137" y="32044" z="10" rangeX="1" rangeY="1"/>
            <Waypoint type="Action" x="33137" y="32044" z="10" rangeX="1" rangeY="1" script="--Resupply check&#10;local cap = tonumber(getuseroption(&quot;CapToLeave&quot;))&#10;&#10;if needresupply(cap, &quot;a&quot;) then&#10;&#9;gotolabel(&quot;AfterChecker3&quot;, &quot;Spawns&quot;)&#10;end"/>
            <Waypoint type="Node" x="33135" y="32031" z="10" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="33142" y="32017" z="10" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="33133" y="32022" z="10" rangeX="1" rangeY="1" label="AfterChecker3"/>
            <Waypoint type="Node" x="33133" y="32046" z="10" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="33132" y="32069" z="10" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="33127" y="32084" z="10" rangeX="1" rangeY="1"/>
            <Waypoint type="Action" x="33127" y="32084" z="10" rangeX="1" rangeY="1" script="--Resupply check&#10;local cap = tonumber(getuseroption(&quot;CapToLeave&quot;))&#10;&#10;if needresupply(cap, &quot;a&quot;) then&#10;&#9;gotolabel(&quot;LeaveEast&quot;, &quot;LeaveFromSpawn&quot;)&#10;else&#10;&#9;gotolabel(&quot;StartE&quot;, &quot;Spawns&quot;)&#10;end"/>
            <Waypoint type="Node" x="33082" y="32088" z="8" rangeX="1" rangeY="1" label="ToS"/>
            <Waypoint type="Walk" x="33084" y="32088" z="8" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="33079" y="32097" z="9" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33071" y="32099" z="9" rangeX="1" rangeY="1"/>
            <Waypoint type="Walk" x="33070" y="32099" z="9" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="33067" y="32103" z="10" rangeX="1" rangeY="1"/>
            <Waypoint type="Action" x="33067" y="32103" z="10" rangeX="1" rangeY="1" script="if not islocation(2) then&#10;&#9;gotolabel(&quot;ToS&quot;, &quot;Spawns&quot;)&#10;end"/>
            <Waypoint type="Node" x="33067" y="32129" z="10" rangeX="1" rangeY="1" label="StartS"/>
            <Waypoint type="Node" x="33062" y="32146" z="10" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="33046" y="32155" z="10" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="33026" y="32166" z="10" rangeX="1" rangeY="1"/>
            <Waypoint type="Action" x="33026" y="32169" z="10" rangeX="1" rangeY="1" script="--Resupply check&#10;local cap = tonumber(getuseroption(&quot;CapToLeave&quot;))&#10;&#10;if needresupply(cap, &quot;a&quot;) then&#10;&#9;gotolabel(&quot;Checker8&quot;, &quot;Spawns&quot;)&#10;end"/>
            <Waypoint type="Node" x="33014" y="32181" z="10" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="32995" y="32195" z="10" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="32978" y="32197" z="10" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="32967" y="32201" z="10" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="32991" y="32193" z="10" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="33009" y="32180" z="10" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="33025" y="32166" z="10" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="33045" y="32153" z="10" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="33060" y="32144" z="10" rangeX="1" rangeY="1" label="Checker8"/>
            <Waypoint type="Action" x="33066" y="32144" z="10" rangeX="1" rangeY="1" script="--Resupply check&#10;local cap = tonumber(getuseroption(&quot;CapToLeave&quot;))&#10;&#10;if needresupply(cap, &quot;a&quot;) then&#10;&#9;gotolabel(&quot;Checker9&quot;, &quot;Spawns&quot;)&#10;end"/>
            <Waypoint type="Node" x="33081" y="32139" z="10" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="33103" y="32146" z="10" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="33121" y="32152" z="10" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="33129" y="32154" z="10" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="33115" y="32149" z="10" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="33101" y="32148" z="10" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="33088" y="32137" z="10" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="33073" y="32129" z="10" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="33068" y="32115" z="10" rangeX="1" rangeY="1" label="Checker9"/>
            <Waypoint type="Action" x="33068" y="32115" z="10" rangeX="1" rangeY="1" script="--Resupply check&#10;local cap = tonumber(getuseroption(&quot;CapToLeave&quot;))&#10;&#10;if needresupply(cap, &quot;a&quot;) then&#10;&#9;gotolabel(&quot;LeaveSouth&quot;, &quot;LeaveFromSpawn&quot;)&#10;else&#10;&#9;gotolabel(&quot;StartS&quot;, &quot;Spawns&quot;)&#10;end"/>
        </WaypointSection>
        <WaypointSection name="LeaveFromSpawn">
            <Waypoint type="Stand" x="33093" y="32067" z="10" rangeX="1" rangeY="1" label="LeaveNw"/>
            <Waypoint type="Rope" x="33092" y="32069" z="10" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="33081" y="32075" z="9" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33079" y="32079" z="9" rangeX="1" rangeY="1"/>
            <Waypoint type="Rope" x="33078" y="32079" z="9" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="33073" y="32086" z="8" rangeX="1" rangeY="1"/>
            <Waypoint type="Action" x="33073" y="32086" z="8" rangeX="1" rangeY="1" script="if not islocation(1) then&#10;&#9;gotolabel(&quot;LeaveNw&quot;, &quot;LeaveFromSpawn&quot;)&#10;else&#10;&#9;gotolabel(0, &quot;LeaveCave&quot;)&#10;end"/>
            <Waypoint type="Node" x="33112" y="32088" z="10" rangeX="1" rangeY="1" label="LeaveEast"/>
            <Waypoint type="Node" x="33094" y="32090" z="10" rangeX="1" rangeY="1"/>
            <Waypoint type="Rope" x="33093" y="32090" z="10" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="33085" y="32088" z="9" rangeX="1" rangeY="1"/>
            <Waypoint type="Rope" x="33084" y="32088" z="9" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="33073" y="32087" z="8" rangeX="1" rangeY="1"/>
            <Waypoint type="Action" x="33073" y="32087" z="8" rangeX="1" rangeY="1" script="if not islocation(1) then&#10;&#9;gotolabel(&quot;LeaveEast&quot;, &quot;LeaveFromSpawn&quot;)&#10;else&#10;&#9;gotolabel(0, &quot;LeaveCave&quot;)&#10;end"/>
            <Waypoint type="Node" x="33069" y="32100" z="10" rangeX="1" rangeY="1" label="LeaveSouth"/>
            <Waypoint type="Rope" x="33070" y="32099" z="10" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="33082" y="32094" z="9" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="33084" y="32089" z="9" rangeX="1" rangeY="1"/>
            <Waypoint type="Rope" x="33084" y="32088" z="9" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="33074" y="32087" z="8" rangeX="1" rangeY="1"/>
            <Waypoint type="Action" x="33074" y="32087" z="8" rangeX="1" rangeY="1" script="if not islocation(1) then&#10;&#9;gotolabel(&quot;LeaveSouth&quot;, &quot;LeaveFromSpawn&quot;)&#10;else&#10;&#9;gotolabel(0, &quot;LeaveCave&quot;)&#10;end"/>
        </WaypointSection>
        <WaypointSection name="LeaveCave">
            <Waypoint type="Stand" x="33072" y="32086" z="8" rangeX="1" rangeY="1"/>
            <Waypoint type="Ladder" x="33072" y="32086" z="8" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33072" y="32087" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Ladder" x="33073" y="32086" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33071" y="32088" z="6" rangeX="1" rangeY="1"/>
            <Waypoint type="Walk" x="33071" y="32089" z="6" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="33067" y="32095" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Action" x="33067" y="32095" z="7" rangeX="1" rangeY="1" script="if not islocation(2) then&#10;&#9;gotolabel(0, &quot;LeaveCave&quot;)&#10;end"/>
            <Waypoint type="Stand" x="33051" y="32099" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Use" x="33052" y="32099" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33052" y="32098" z="6" rangeX="1" rangeY="1"/>
            <Waypoint type="Action" x="33052" y="32098" z="6" rangeX="1" rangeY="1" script="if not islocation() then&#10;&#9;gotolabel($wptid-3, &quot;LeaveCave&quot;)&#10;end"/>
            <Waypoint type="Action" x="33052" y="32098" z="6" rangeX="1" rangeY="1" script="--usedoor(33052, 32097, 6, &quot;open&quot;)&#10;wait(1000)"/>
            <Waypoint type="Stand" x="33052" y="32096" z="6" rangeX="1" rangeY="1"/>
            <Waypoint type="Action" x="33052" y="32096" z="6" rangeX="1" rangeY="1" script="opentrade()&#10;wait(1000)&#10;&#10;local items = {&quot;spike shield&quot;, &quot;life preserver&quot;, &quot;spiky club&quot;, &quot;ratana&quot;, &quot;leather harness&quot;}&#10;for _, v in ipairs(items) do&#10;&#9;a = tradecount(&quot;sell&quot;, v)&#10;&#9;while a &gt; 0 do&#10;&#9;&#9;sellitems(v, a)&#10;&#9;&#9;a = tradecount(&quot;sell&quot;, v)&#10;&#9;end&#10;end"/>
            <Waypoint type="Stand" x="33052" y="32096" z="6" rangeX="1" rangeY="1"/>
            <Waypoint type="Action" x="33052" y="32096" z="6" rangeX="1" rangeY="1" script="--usedoor(33052, 32097, 6, &quot;open&quot;)&#10;wait(1000)"/>
            <Waypoint type="Stand" x="33051" y="32099" z="6" rangeX="1" rangeY="1"/>
            <Waypoint type="Use" x="33052" y="32099" z="6" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="33050" y="32096" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Action" x="33050" y="32096" z="7" rangeX="1" rangeY="1" script="if not islocation(1) then&#10;&#9;gotolabel($wptid-5, &quot;LeaveCave&quot;)&#10;elseif getuseroption(&quot;extra&quot;) then&#10;--Resupply check&#10;&#9;local cap = tonumber(getuseroption(&quot;CapToLeave&quot;))&#10;&#10;&#9;if needresupply(cap, &quot;a&quot;) then&#10;&#9;&#9;return&#10;&#9;else&#10;&#9;&#9;gotolabel(&quot;AfterRaffazan&quot;, &quot;ToSpawn&quot;)&#10;&#9;end&#10;end"/>
            <Waypoint type="Node" x="33040" y="32096" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33032" y="32095" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Ladder" x="33032" y="32096" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="33022" y="32099" z="6" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="33010" y="32100" z="6" rangeX="1" rangeY="1"/>
            <Waypoint type="Walk" x="33009" y="32100" z="6" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="33006" y="32101" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Action" x="33006" y="32101" z="7" rangeX="1" rangeY="1" script="if not islocation(1) then&#10;&#9;gotolabel($wptid-7, &quot;LeaveCave&quot;)&#10;end"/>
            <Waypoint type="Stand" x="33004" y="32100" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Action" x="33004" y="32100" z="7" rangeX="1" rangeY="1" script="usedoor(33004,32099,7,&quot;open&quot;)&#10;wait(400)"/>
            <Waypoint type="Stand" x="33004" y="32096" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Ladder" x="33004" y="32095" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="33000" y="32096" z="6" rangeX="1" rangeY="1"/>
            <Waypoint type="Action" x="33000" y="32096" z="6" rangeX="1" rangeY="1" script="usedoor(32999,32096,6,&quot;open&quot;)&#10;wait(400)"/>
            <Waypoint type="Stand" x="32997" y="32096" z="6" rangeX="1" rangeY="1"/>
            <Waypoint type="Action" x="32997" y="32096" z="6" rangeX="1" rangeY="1" script="local ea = getuseroption(&quot;items&quot;)&#10;&#10;if not islocation(1) then&#10;&#9;gotolabel($wptid-7, &quot;LeaveCave&quot;)&#10;elseif ea then&#10;&#9;return&#10;else&#10;&#9;gotolabel(&quot;ToDepot&quot;, &quot;LeaveCave&quot;)&#10;end"/>
            <Waypoint type="Node" x="32997" y="32107" z="6" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="32960" y="32096" z="6" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="32949" y="32106" z="6" rangeX="1" rangeY="1"/>
            <Waypoint type="Walk" x="32956" y="32106" z="6" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32955" y="32108" z="5" rangeX="1" rangeY="1"/>
            <Waypoint type="Action" x="32955" y="32108" z="5" rangeX="1" rangeY="1" script="usedoor(32954,32108,5,&quot;open&quot;)&#10;wait(400)"/>
            <Waypoint type="Stand" x="32952" y="32108" z="5" rangeX="1" rangeY="1"/>
            <Waypoint type="Action" x="32952" y="32108" z="5" rangeX="1" rangeY="1" label="SellItemsIrmana" script="if not islocation(1) then&#10;&#9;gotolabel($wptid-7, &quot;LeaveCave&quot;)&#10;else&#10;&#9;opentrade()&#10;&#9;wait(1000)&#10;&#10;&#9;local items = {&quot;earflap&quot;}&#10;&#9;for _, v in ipairs(items) do&#10;&#9;&#9;a = tradecount(&quot;sell&quot;, v)&#10;&#9;&#9;while a &gt; 0 do&#10;&#9;&#9;&#9;sellitems(v, a)&#10;&#9;&#9;&#9;a = tradecount(&quot;sell&quot;, v)&#10;&#9;&#9;end&#10;&#9;end&#10;end"/>
            <Waypoint type="Stand" x="32953" y="32108" z="5" rangeX="1" rangeY="1"/>
            <Waypoint type="Action" x="32953" y="32108" z="5" rangeX="1" rangeY="1" script="usedoor(32954,32108,5,&quot;open&quot;)&#10;wait(400)"/>
            <Waypoint type="Walk" x="32956" y="32106" z="5" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="32953" y="32087" z="6" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="32971" y="32073" z="6" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="33006" y="32067" z="6" rangeX="1" rangeY="1" label="ToDepot"/>
            <Waypoint type="Node" x="33019" y="32056" z="6" rangeX="1" rangeY="1"/>
            <Waypoint type="Walk" x="33020" y="32059" z="6" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="33018" y="32054" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Action" x="33018" y="32054" z="7" rangeX="1" rangeY="1" script="if not islocation(2) then&#10;&#9;gotolabel($wptid-3, &quot;LeaveCave&quot;)&#10;else&#10;&#9;gotolabel(0, &quot;DepotandBank&quot;)&#10;end"/>
        </WaypointSection>
    </Cavebot>
    <Looting enabled="yes">
        <Options>
            <Option range="13"/>
            <Option moveItemsQuickly="yes"/>
            <Option eatFoodFromCorpse="yes"/>
            <Option openNextBP="yes"/>
            <Option openBPsAtLogin="no"/>
            <Option valuableBodies="3000"/>
            <Option ultraValuableBodies="25000"/>
            <Option alertOnValuableBodies="no"/>
            <Option openValuableBodiesOnly="no"/>
            <Option openUltraValuableBodiesImmediately="yes"/>
            <Option policy="Smart Looting"/>
            <LootingDestinations>
                <lootingDestination name="mainbp" destination="brown backpack"/>
                <lootingDestination name="rarebpn" destination="purple backpack"/>
                <lootingDestination name="rarebp" destination="golden backpack"/>
                <lootingDestination name="goldbp" destination="yellow backpack"/>
                <lootingDestination name="maindp" destination="fur backpack"/>
                <lootingDestination name="stackdp" destination="camouflage backpack"/>
                <lootingDestination name="nstackdp" destination="green backpack"/>
            </LootingDestinations>
        </Options>
        <LootingProfile name="LootList" isCurrentProfile="yes">
            <LootItem name="gold coin" id="3031" sellPrice="1" weight="0.10" destinationName="goldbp" action="Loot" lootCondition="Has Cap to Loot" itemCategory="c" alertOnDrop="no" alertOnMiss="no"/>
            <LootItem name="cheesy figurine" id="17818" sellPrice="150" weight="0.75" destinationName="rarebp" action="Loot" lootCondition="Has Cap to Loot" itemCategory="b" alertOnDrop="no" alertOnMiss="no"/>
            <LootItem name="cheese cutter" id="17817" sellPrice="50" weight="0.45" destinationName="rarebp" action="Loot" lootCondition="Has Cap to Loot" itemCategory="b" alertOnDrop="no" alertOnMiss="no"/>
            <LootItem name="earflap" id="17819" sellPrice="40" weight="0.75" destinationName="rarebp" action="Loot" lootCondition="Has Cap to Loot" itemCategory="b" alertOnDrop="no" alertOnMiss="no"/>
            <LootItem name="leather harness" id="17846" sellPrice="750" weight="29.00" destinationName="rarebpn" action="Loot" lootCondition="Has Cap to Loot" itemCategory="a" alertOnDrop="no" alertOnMiss="no"/>
            <LootItem name="ratana" id="17812" sellPrice="500" weight="33.00" destinationName="rarebpn" action="Loot" lootCondition="Has Cap to Loot" itemCategory="a" alertOnDrop="no" alertOnMiss="no"/>
            <LootItem name="spiky club" id="17859" sellPrice="300" weight="39.00" destinationName="rarebpn" action="Loot" lootCondition="Has Cap to Loot" itemCategory="a" alertOnDrop="no" alertOnMiss="no"/>
            <LootItem name="bola" id="17809" sellPrice="35" weight="5.00" destinationName="rarebp" action="Loot" lootCondition="Has Cap to Loot" itemCategory="b" alertOnDrop="no" alertOnMiss="no"/>
            <LootItem name="life preserver" id="17813" sellPrice="300" weight="46.00" destinationName="rarebpn" action="Loot" lootCondition="Has Cap to Loot" itemCategory="a" alertOnDrop="no" alertOnMiss="no"/>
            <LootItem name="spike shield" id="17810" sellPrice="250" weight="59.00" destinationName="rarebpn" action="Loot" lootCondition="Has Cap to Loot" itemCategory="a" alertOnDrop="no" alertOnMiss="no"/>
            <LootItem name="rat god doll" id="17825" sellPrice="0" weight="7.50" destinationName="rarebpn" action="Loot" lootCondition="Has Cap to Loot" itemCategory="a" alertOnDrop="no" alertOnMiss="no"/>
        </LootingProfile>
    </Looting>
    <Supplies>
        <Options>
            <Option defaultBackpack=""/>
            <Option extraCashMin="1000" extraCashMax="2500"/>
            <Option autoSwitchProfiles="no"/>
        </Options>
        <SupplyProfile name="SupplyList" vocation="Knight" level="50" isCurrentProfile="yes">
            <SupplyItem name="strong health potion" id="236" buyPrice="100" weight="2.90" leaveCaveAt="10" rule="Up to..." ruleValue="30" destination="" category="a"/>
            <SupplyItem name="mana potion" id="268" buyPrice="50" weight="2.70" leaveCaveAt="30" rule="Up to..." ruleValue="150" destinationName="mainbp" category="a"/>
        </SupplyProfile>
        <SupplyProfile name="SupplyList1" vocation="Knight" level="80">
            <SupplyItem name="great health potion" id="239" buyPrice="190" weight="3.10" leaveCaveAt="10" rule="Up to..." ruleValue="30" destination="great health potion" category="a"/>
            <SupplyItem name="mana potion" id="268" buyPrice="50" weight="2.70" leaveCaveAt="30" rule="Up to..." ruleValue="150" destination="mana potion" category="a"/>
        </SupplyProfile>
    </Supplies>
    <Targeting enabled="no" allowDiagonalMovement="no" autoSwitchProfiles="no" nonPvPMode="no">
        <TargetingProfile name="TargetList" vocation="Knight" level="188" targetMustBeShootable="no" targetMustBeReachable="yes" isCurrentProfile="yes">
            <Priorities>
                <Priority health="31"/>
                <Priority proximity="81"/>
                <Priority danger="64"/>
                <Priority random="0"/>
                <Priority lure="0"/>
                <Priority stick="0"/>
            </Priorities>
            <Creatures>
                <Creature name="Corym Vanguard" amount="Any" category="" dontLoot="no" playAlarm="no" syncSpells="no">
                    <FightingSettings>
                        <Setting index="0" hpFrom="0" hpTo="100" danger="6" onlyIfTrapped="no" mustAttackMe="no" action="Attack" avoidance="No Avoidance" desiredStance="Reach" distance="3" attackMode="No Change" firstSpell="" secondSpell="" thirdSpell="" fourthSpell="" spamMin="300" spamMax="500"/>
                        <Setting index="1" hpFrom="0" hpTo="0" danger="0" onlyIfTrapped="no" mustAttackMe="no" action="Attack" avoidance="No Avoidance" desiredStance="No Movement" distance="3" attackMode="No Change" firstSpell="" secondSpell="" thirdSpell="" fourthSpell="" spamMin="300" spamMax="500"/>
                        <Setting index="2" hpFrom="0" hpTo="0" danger="0" onlyIfTrapped="no" mustAttackMe="no" action="Attack" avoidance="No Avoidance" desiredStance="No Movement" distance="3" attackMode="No Change" firstSpell="" secondSpell="" thirdSpell="" fourthSpell="" spamMin="300" spamMax="500"/>
                        <Setting index="3" hpFrom="0" hpTo="0" danger="0" onlyIfTrapped="no" mustAttackMe="no" action="Attack" avoidance="No Avoidance" desiredStance="No Movement" distance="3" attackMode="No Change" firstSpell="" secondSpell="" thirdSpell="" fourthSpell="" spamMin="300" spamMax="500"/>
                    </FightingSettings>
                </Creature>
                <Creature name="Corym Skirmisher" amount="Any" category="" dontLoot="no" playAlarm="no" syncSpells="no">
                    <FightingSettings>
                        <Setting index="0" hpFrom="0" hpTo="100" danger="3" onlyIfTrapped="no" mustAttackMe="no" action="Attack" avoidance="No Avoidance" desiredStance="Reach" distance="3" attackMode="No Change" firstSpell="" secondSpell="" thirdSpell="" fourthSpell="" spamMin="300" spamMax="500"/>
                        <Setting index="1" hpFrom="0" hpTo="0" danger="0" onlyIfTrapped="no" mustAttackMe="no" action="Attack" avoidance="No Avoidance" desiredStance="No Movement" distance="3" attackMode="No Change" firstSpell="" secondSpell="" thirdSpell="" fourthSpell="" spamMin="300" spamMax="500"/>
                        <Setting index="2" hpFrom="0" hpTo="0" danger="0" onlyIfTrapped="no" mustAttackMe="no" action="Attack" avoidance="No Avoidance" desiredStance="No Movement" distance="3" attackMode="No Change" firstSpell="" secondSpell="" thirdSpell="" fourthSpell="" spamMin="300" spamMax="500"/>
                        <Setting index="3" hpFrom="0" hpTo="0" danger="0" onlyIfTrapped="no" mustAttackMe="no" action="Attack" avoidance="No Avoidance" desiredStance="No Movement" distance="3" attackMode="No Change" firstSpell="" secondSpell="" thirdSpell="" fourthSpell="" spamMin="300" spamMax="500"/>
                    </FightingSettings>
                </Creature>
                <Creature name="Corym Charlatan" amount="Any" category="" dontLoot="no" playAlarm="no" syncSpells="no">
                    <FightingSettings>
                        <Setting index="0" hpFrom="0" hpTo="100" danger="0" onlyIfTrapped="no" mustAttackMe="no" action="Attack" avoidance="No Avoidance" desiredStance="Reach" distance="3" attackMode="No Change" firstSpell="" secondSpell="" thirdSpell="" fourthSpell="" spamMin="300" spamMax="500"/>
                        <Setting index="1" hpFrom="0" hpTo="0" danger="0" onlyIfTrapped="no" mustAttackMe="no" action="Attack" avoidance="No Avoidance" desiredStance="No Movement" distance="3" attackMode="No Change" firstSpell="" secondSpell="" thirdSpell="" fourthSpell="" spamMin="300" spamMax="500"/>
                        <Setting index="2" hpFrom="0" hpTo="0" danger="0" onlyIfTrapped="no" mustAttackMe="no" action="Attack" avoidance="No Avoidance" desiredStance="No Movement" distance="3" attackMode="No Change" firstSpell="" secondSpell="" thirdSpell="" fourthSpell="" spamMin="300" spamMax="500"/>
                        <Setting index="3" hpFrom="0" hpTo="0" danger="0" onlyIfTrapped="no" mustAttackMe="no" action="Attack" avoidance="No Avoidance" desiredStance="No Movement" distance="3" attackMode="No Change" firstSpell="" secondSpell="" thirdSpell="" fourthSpell="" spamMin="300" spamMax="500"/>
                    </FightingSettings>
                </Creature>
                <Creature name="All" amount="Any" category="" dontLoot="no" playAlarm="no" syncSpells="no">
                    <FightingSettings>
                        <Setting index="0" hpFrom="0" hpTo="100" danger="0" onlyIfTrapped="yes" mustAttackMe="no" action="Attack" avoidance="No Avoidance" desiredStance="No Movement" distance="3" attackMode="No Change" firstSpell="" secondSpell="" thirdSpell="" fourthSpell="" spamMin="300" spamMax="500"/>
                        <Setting index="1" hpFrom="0" hpTo="0" danger="0" onlyIfTrapped="no" mustAttackMe="no" action="Attack" avoidance="No Avoidance" desiredStance="No Movement" distance="3" attackMode="No Change" firstSpell="" secondSpell="" thirdSpell="" fourthSpell="" spamMin="300" spamMax="500"/>
                        <Setting index="2" hpFrom="0" hpTo="0" danger="0" onlyIfTrapped="no" mustAttackMe="no" action="Attack" avoidance="No Avoidance" desiredStance="No Movement" distance="3" attackMode="No Change" firstSpell="" secondSpell="" thirdSpell="" fourthSpell="" spamMin="300" spamMax="500"/>
                        <Setting index="3" hpFrom="0" hpTo="0" danger="0" onlyIfTrapped="no" mustAttackMe="no" action="Attack" avoidance="No Avoidance" desiredStance="No Movement" distance="3" attackMode="No Change" firstSpell="" secondSpell="" thirdSpell="" fourthSpell="" spamMin="300" spamMax="500"/>
                    </FightingSettings>
                </Creature>
            </Creatures>
        </TargetingProfile>
    </Targeting>
    <OtherBots>
        <HealingPaths/>
        <TargetingPaths/>
    </OtherBots>
</WindbotSettings>
