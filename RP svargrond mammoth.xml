<?xml version="1.0" encoding="UTF-8"?>
<WindbotSettings>
    <Healer>
        <SpellHealer enabled="yes">
            <HealRule name="HealMe" spell="Light Healing" condition="Health Percent below" conditionMin="75" conditionMax="75" extraCondition="No Extra Condition" extraConditionMin="0" extraConditionMax="0" enabled="yes" spamMin="200" spamMax="500" triggerKey="&lt;no key&gt;" dontOverrideActions="no"/>
            <HealRule name="HealMeMore" spell="Intense Healing" condition="Health Percent below" conditionMin="60" conditionMax="60" extraCondition="No Extra Condition" extraConditionMin="0" extraConditionMax="0" enabled="yes" spamMin="200" spamMax="500" triggerKey="&lt;no key&gt;" dontOverrideActions="no"/>
            <HealRule name="GODHeal" spell="Divine Healing" condition="Health Percent below" conditionMin="35" conditionMax="35" extraCondition="No Extra Condition" extraConditionMin="0" extraConditionMax="0" enabled="yes" spamMin="200" spamMax="500" triggerKey="&lt;no key&gt;" dontOverrideActions="no"/>
        </SpellHealer>
        <PotionHealer enabled="yes">
            <HealRule name="StrongPot" spell="Strong Health Potion" condition="Health Percent below" conditionMin="40" conditionMax="40" extraCondition="No Extra Condition" extraConditionMin="0" extraConditionMax="0" enabled="yes" spamMin="200" spamMax="500" triggerKey="&lt;no key&gt;" dontOverrideActions="no"/>
            <HealRule name="HealthPot" spell="Health Potion" condition="Health Percent below" conditionMin="40" conditionMax="40" extraCondition="No Extra Condition" extraConditionMin="0" extraConditionMax="0" enabled="yes" spamMin="200" spamMax="500" triggerKey="&lt;no key&gt;" dontOverrideActions="no"/>
            <HealRule name="StrongMana" spell="Strong Mana Potion" condition="Mana Percent below" conditionMin="25" conditionMax="25" extraCondition="No Extra Condition" extraConditionMin="0" extraConditionMax="0" enabled="yes" spamMin="200" spamMax="500" triggerKey="&lt;no key&gt;" dontOverrideActions="no"/>
            <HealRule name="ManaPot" spell="Mana Potion" condition="Mana Percent below" conditionMin="35" conditionMax="35" extraCondition="No Extra Condition" extraConditionMin="0" extraConditionMax="0" enabled="yes" spamMin="200" spamMax="500" triggerKey="&lt;no key&gt;" dontOverrideActions="no"/>
        </PotionHealer>
        <ConditionHealer enabled="no"/>
        <ManaTrainer manaTrainCondition="Mana Percent above" manaTrainMin="87" manaTrainMax="93" enabled="no"/>
    </Healer>
    <Scripter>
        <HotkeyScripts>
            <HotkeyScript name="PauseHotkey" script="if not $cavebot or not $targeting then&#13;&#10;    listas('Enabling Cavebot and Targeting')&#13;&#10;    setcavebot('on')&#13;&#10;    settargeting('on')&#13;&#10;    wait(1000)&#13;&#10;else&#13;&#10;    listas('Disabling Cavebot and Targeting')&#13;&#10;    setcavebot('off')&#13;&#10;    settargeting('off')&#13;&#10;    stopattack()&#13;&#10;    wait(1000)&#13;&#10;end" triggerKey="Pause" hotkeyTriggerMode="0"/>
            <HotkeyScript name="Showbot" script="showbot()&#10;wait(2000)" triggerKey="Shift + F11" hotkeyTriggerMode="0"/>
        </HotkeyScripts>
        <PersistentScripts>
            <PersistentScript name="openBackpacks" script="function openBackpacks(wait, bpMain, ...)&#10;&#9;wait = wait or true&#10;&#9;MainBP = bpMain or $back.id&#10;&#9;backpackNames = {...}&#10;&#10;&#9;if not bpMain then&#10;&#9;&#9;return&#10;&#9;else&#10;&#9;&#9;openitem(MainBP, &quot;back&quot;)&#10;&#9;&#9;waitcontainer(MainBP)&#10;&#9;&#9;resizewindows(MainBP)&#10;&#9;&#9;waitping()&#10;&#9;end&#10;&#10;&#9;for _, v in ipairs(backpackNames) do&#10;&#9;&#9;openitem(v, MainBP, true)&#10;&#9;&#9;if wait then&#10;&#9;&#9;&#9;waitcontainer(v)&#10;&#9;&#9;end&#10;&#9;&#9;resizewindows(v)&#10;&#9;&#9;waitping()&#10;&#9;end&#10;end" enabled="yes"/>
            <PersistentScript name="Global" script="auto(800,1200)&#10;setlootingdestination(&quot;mainbp&quot;, getuseroption(&quot;MainBP&quot;)) &#10;setlootingdestination(&quot;goldbp&quot;, getuseroption(&quot;GoldBP&quot;))&#10;setlootingdestination(&quot;lootbp&quot;, getuseroption(&quot;LootBP&quot;)) &#10;setlootingdestination(&quot;maindp&quot;, getuseroption(&quot;MainDP&quot;))&#10;setlootingdestination(&quot;stackdp&quot;, getuseroption(&quot;StackDP&quot;)) &#10;setlootingdestination(&quot;raresdp&quot;, getuseroption(&quot;RaresDP&quot;))&#10;&#10;if getuseroption(&quot;walkthrough&quot;) then&#10;setsetting('Cavebot/WalkThroughPlayers', 'yes')&#10;else&#10;setsetting('Cavebot/WalkThroughPlayers', 'no')&#10;end&#10;&#10;if getuseroption(&quot;responder&quot;) then&#10;setsetting('Persistent/Scripts/AutoResponder/Enabled', 'yes')&#10;else&#10;setsetting('Persistent/Scripts/AutoResponder/Enabled', 'no')&#10;end&#10;&#10;if getuseroption(&quot;offensivesp&quot;) then&#10;setsetting('Persistent/Scripts/SpellAttack/Enabled', 'yes')&#10;else&#10;setsetting('Persistent/Scripts/SpellAttack/Enabled', 'no')&#10;end&#10;&#10;if getuseroption(&quot;offensivesp&quot;) then&#10;setsetting('Persistent/Scripts/AreaSpellAttack/Enabled', 'yes')&#10;else&#10;setsetting('Persistent/Scripts/AreaAttack/Enabled', 'no')&#10;end&#10;&#10;if getuseroption(&quot;safer&quot;) then&#10;setsetting('Persistent/Scripts/SafeReconnect/Enabled', 'yes')&#10;else&#10;setsetting('Persistent/Scripts/SafeReconnect/Enabled', 'no')&#10;end&#10;" enabled="yes"/>
            <PersistentScript name="SafeBank" script="auto(800, 1000)&#10; &#10;foreach newmessage MESSAGES &quot;NPCs&quot; do &#10;    if (MESSAGES.text:find(&quot;There is not enough gold on your account.&quot;)) then &#10;        setcavebot(&quot;off&quot;)&#10;        wait(5000, 10000) &#10;        closeclient() &#10;    end &#10;end" enabled="yes"/>
            <PersistentScript name="AutoResponder" script="    init start&#10;&#10;    local Config = {&#10;    SafeList = {&quot;Bubble&quot;, &quot;Eternal Oblivion&quot;},&#10;    MinLevel = 10,&#10;    IgnoreMonsters = false,&#10;    LogText = true,&#10;    UseDatabase = false,&#10;    }&#10;&#10;    -- DO NOT EDIT BELOW --&#10;&#10;    local Responder = {&#10;    MessageInfo = {},&#10;    Timer = os.time(),&#10;    }&#10;&#10;    Responder.Ignored = $chardb:getvalue('AUTO_RESPONDER', 'IgnoredGuys')&#10;&#10;    if Config.UseDatabase and Responder.Ignored and Responder.Ignored ~= '{}' then&#10;    Responder.Ignored = Responder.Ignored:totable()&#10;    else&#10;    Responder.Ignored = {}&#10;    end&#10;&#10;    Responder.SpeechWords = {&#10;    {&#10;    k = {&quot;spanish?&quot;, &quot;spanish ?&quot;, &quot;span?&quot;, &quot;spanol?&quot;, &quot;spanol?&quot;, &quot;spanol ?&quot;, &quot;spanol ?&quot;},&#10;    r = {{&quot;no&quot;, &quot;nope&quot;}, {&quot;nope man&quot;, &quot;nopss&quot;, &quot;no man bb&quot;}}&#10;    },&#10;    {&#10;    k = {&quot;hi&quot;, &quot;hai&quot;, &quot;hello&quot;, &quot;sup&quot;, &quot;yo&quot;, &quot;yoo&quot;, &quot;hiho&quot;, &quot;HI&quot;, &quot;HELLO&quot;, &quot;SUP&quot;, &quot;YO&quot;, &quot;YOO&quot;, &quot;HIHO&quot;, &quot;HAI&quot;},&#10;    r = {{&quot;hi&quot;, &quot;hello&quot;, &quot;hiho&quot;, &quot;yo&quot;, &quot;sup&quot;}, {&quot;i said hi&quot;, &quot;already said hi&quot;, &quot;sup, again&quot;}, {&quot;ok man, this is getting boring&quot;, &quot;this is boring man&quot;, &quot;damn stop saying hi&quot;}}&#10;    },&#10;    {&#10;    k = {&quot;use bot?&quot;, &quot;use bot ?&quot;, &quot;use bot&quot;, &quot;bot?&quot;, &quot;bot&quot;, &quot;botter&quot;, &quot;bottter&quot;, &quot;botterrr&quot;, &quot;botting&quot;, &quot;you are bot&quot;, &quot;you're bot&quot;, &quot;your bot&quot;},&#10;    r = {{&quot;me?&quot;, &quot;me ? lol&quot;, &quot;no man&quot;, &quot;you wrong&quot;, &quot;you're wrong&quot;, &quot;i dont bot&quot;}, {&quot;leave plz&quot;, &quot;stop dis or ignored&quot;, &quot;gtfo&quot;, &quot;stop plz&quot;, &quot;annoying :[&quot;}}&#10;    },&#10;    {&#10;    k = {&quot;auto respond&quot;, &quot;auto responder&quot;, &quot;auto respond ?&quot;, &quot;auto respond?&quot;, &quot;auto responder?&quot;, &quot;auto responder ?&quot;, &quot;auto-respond&quot;, &quot;auto-responder&quot;, &quot;auto-responder?&quot;, &quot;auto-responder ?&quot;, &quot;auto-respond?&quot;, &quot;auto-respond ?&quot;, &quot;auto talk&quot;, &quot;auto-talk&quot;, &quot;auto talk?&quot;, &quot;auto talk ?&quot;, &quot;auto-talk?&quot;},&#10;    r = {{&quot;no, just type and do enter&quot;, &quot;lol man&quot;, &quot;lol wtf is this?&quot;, &quot;lol'ed now&quot;, &quot;oh tibia have that ?&quot;, &quot;hahaha&quot;}, {&quot;whatever&quot;, &quot;stop dis pls&quot;, &quot;byee&quot;}, {&quot;i'm sirious now&quot;, &quot;stop or ignored&quot;}}&#10;    },&#10;    {&#10;    k = {&quot;no kill&quot;, &quot;plz no kill&quot;, &quot;dont kill&quot;, &quot;i'm skilling&quot;, &quot;im skilling&quot;, &quot;im skill&quot;, &quot;plz no kill&quot;, &quot;i'm skill&quot;, &quot;man no kill&quot;, &quot;ks?&quot;, &quot;ks&quot;, &quot;ks lol&quot;, &quot;dont ks&quot;, &quot;don't ks&quot;},&#10;    r = {{&quot;sry i need exp&quot;, &quot;i need all exp&quot;, &quot;all exp is mine&quot;, &quot;leave plz i need exp&quot;}, {&quot;i will kill everything&quot;, &quot;i kill what i want&quot;, &quot;ks is fun&quot;}}&#10;    },&#10;    {&#10;    k = {&quot;noob&quot;, &quot;n00b&quot;, &quot;nb&quot;, &quot;noob -.-&quot;, &quot;n00b -.-&quot;, &quot;noobie&quot;, &quot;newbie&quot;, &quot;nb plz&quot;, &quot;noob plz&quot;},&#10;    r = {{&quot;noob u&quot;, &quot;noob you&quot;, &quot;nab&quot;, &quot;sure noob&quot;, &quot;-.-&quot;}, {&quot;whatever&quot;, &quot;w.e&quot;, &quot;ok man bb&quot;, &quot;noob gtfo&quot;}, {&quot;aff&quot;, &quot;boring&quot;, &quot;i'm mad now&quot;}}&#10;    },&#10;    {&#10;    k = {&quot;whats my name?&quot;, &quot;what is my name ?&quot;, &quot;what is my name?&quot;, &quot;what's my name?&quot;, &quot;what's my name ?&quot;},&#10;    r = {{&quot;look on your character lol&quot;, &quot;your name is noob&quot;, &quot;u dont know how to read ?&quot;}, {&quot;lol man u know your name&quot;, &quot;u know your name stop spam&quot;, &quot;stop spam man&quot;}, {&quot;look on your screen and read&quot;, &quot;such a noob&quot;}, {&quot;ok now i'll ignore you&quot;}}&#10;    },&#10;    {&#10;    k = {&quot;going to delete you&quot;, &quot;going to delete your char&quot;, &quot;i'll delete your char&quot;, &quot;i will delete your char&quot;, &quot;i'll ban you&quot;, &quot;i'll ban u&quot;, &quot;going to ban you&quot;, &quot;going to ban u&quot;},&#10;    r = {{&quot;omaiga&quot;, &quot;so you're a gm..&quot;, &quot;no you're not&quot;, &quot;ok man do what u want&quot;}, {&quot;come back tomorrow&quot;, &quot;stop man bb&quot;, &quot;stop spam&quot;}, {&quot;next msg like this = ignore&quot;}}&#10;    },&#10;    {&#10;    k = {&quot;fuck you&quot;, &quot;fuck u&quot;, &quot;fuk you&quot;, &quot;fuk u&quot;, &quot;fak you&quot;, &quot;fak u&quot;, &quot;fak&quot;, &quot;fuck&quot;, &quot;damn you&quot;, &quot;.i.&quot;, &quot;..i..&quot;, &quot;,,i,,&quot;, &quot;,i,&quot;},&#10;    r = {{&quot;not nice man&quot;, &quot;stop&quot;, &quot;i dont like that&quot;}, {&quot;sounds like a you dont like me&quot;, &quot;stop or ignore&quot;, &quot;stop or reported&quot;, &quot;reported&quot;}}&#10;    },&#10;    {&#10;    k = {&quot;leave&quot;, &quot;leave plz&quot;, &quot;leave man&quot;, &quot;leave pls&quot;, &quot;leavee&quot;},&#10;    r = {{&quot;nop&quot;, &quot;sry no&quot;, &quot;nonono&quot;, &quot;can't&quot;, &quot;i'll stay&quot;, &quot;sry bb&quot;}, {&quot;no man byee&quot;, &quot;i will hunt now&quot;, &quot;i am here now begone&quot;}, {&quot;damn can't your see ? i'm here now&quot;, &quot;B.Y.E&quot;}}&#10;    },&#10;    {&#10;    k = {&quot;lol&quot;, &quot;rofl&quot;, &quot;lmao&quot;, &quot;ftw&quot;, &quot;wtf&quot;, &quot;haha&quot;, &quot;hehe&quot;, &quot;LMAO&quot;, &quot;ROFL&quot;, &quot;LOL&quot;, &quot;loled&quot;, &quot;lol'ed&quot;, &quot;lul&quot;, &quot;lool&quot;, &quot;luls&quot;, &quot;lulz&quot;, &quot;lols&quot;},&#10;    r = {{&quot;haha&quot;, &quot;lul&quot;, &quot;lool&quot;, &quot;hehehe&quot;, &quot;rofl&quot;, &quot;roflmao&quot;, &quot;:)&quot;, &quot;^^&quot;, &quot;:]&quot;, &quot;:&gt;&quot;}, {&quot;haha&quot;, &quot;lul&quot;, &quot;lool&quot;, &quot;hehehe&quot;, &quot;rofl&quot;, &quot;roflmao&quot;, &quot;:)&quot;, &quot;^^&quot;, &quot;:]&quot;, &quot;:&gt;&quot;}, {&quot;haha&quot;, &quot;lul&quot;, &quot;lool&quot;, &quot;hehehe&quot;, &quot;rofl&quot;, &quot;roflmao&quot;, &quot;:)&quot;, &quot;^^&quot;, &quot;:]&quot;, &quot;:&gt;&quot;}, {&quot;haha&quot;, &quot;lul&quot;, &quot;lool&quot;, &quot;hehehe&quot;, &quot;rofl&quot;, &quot;roflmao&quot;, &quot;:)&quot;, &quot;^^&quot;, &quot;:]&quot;, &quot;:&gt;&quot;}, {&quot;ok, i like to smile but it's enough let me alone now&quot;, &quot;ok but now let me alone&quot;, &quot;:) well i'm going, cya&quot;}}&#10;    },&#10;    {&#10;    k = {&quot;how do you type?&quot;, &quot;how do you type ?&quot;, &quot;how you type ?&quot;, &quot;how you type?&quot;, &quot;how to type?&quot;, &quot;how to type ?&quot;},&#10;    r = {{&quot;type text and do enter&quot;, &quot;u need something special&quot;, &quot;u need to be special&quot;, &quot;with fingers&quot;, &quot;with hands&quot;}, {&quot;lol stuff you said&quot;, &quot;man i need to hunt alone&quot;, &quot;bb or ignored&quot;}}&#10;    },&#10;    {&#10;    k = {&quot;whoa you're so fast&quot;, &quot;wow you're so fast&quot;, &quot;you type really fast&quot;, &quot;you type fast&quot;, &quot;so fast you type&quot;, &quot;type fast&quot;, &quot;you're so fast&quot;, &quot;your fast&quot;, &quot;so fast&quot;},&#10;    r = {{&quot;yeah i train a lot&quot;, &quot;ye imma hell of a racemachine&quot;, &quot;yes i do&quot;}, {&quot;i said that i'm fast&quot;, &quot;ye already said that, i'm really fast&quot;, &quot;i'm so fast that i can hunt and talk to you :)&quot;}, {&quot;ok man..&quot;, &quot;ye you know&quot;, &quot;true..&quot;}, {&quot;i'm getting tired of this&quot;, &quot;ok man now bb&quot;}}&#10;    },&#10;    }&#10;&#10;    table.insert(Config.SafeList, $name)&#10;    table.lower(Config.SafeList)&#10;&#10;    function table.findtext(self, v)&#10;    local c = table.find(self, v)&#10;    if not c then&#10;    for i, k in pairs(self) do&#10;    if v:find(k) or v:lower():find(k:lower()) then&#10;    return i&#10;    end&#10;    end&#10;    else&#10;    return c&#10;    end&#10;    return nil&#10;    end&#10;&#10;    local fileName = sprintf('[%s] - Auto Responder.txt', $name)&#10;&#10;    if Config.LogText and not file.exists(fileName) then&#10;    file.clear(fileName)&#10;    end&#10;&#10;    init end&#10;&#10;    auto(1000, 1200)&#10;&#10;    foreach newmessage m do&#9;&#10;    if table.find({MSG_DEFAULT, MSG_WHISPER, MSG_YELL, MSG_PVT}, m.type) and (not table.find(Config.SafeList, m.sender:lower())) and m.level &gt;= Config.MinLevel and os.difftime(os.time(), Responder.Timer) &gt;= 2 and (not Responder.Ignored[m.sender]) and #spellinfo(m.content).words == 0 then&#10;    if Config.LogText then&#10;    file.writeline(fileName, string.format(&quot;RECEIVED: [%s] VIA: %s FROM: %s CONTENT: %s&quot;, m.timestr, m.type == MSG_PVT and &quot;Private&quot; or &quot;Local Chat&quot;, m.sender, m.content))&#10;    end&#10;&#10;    for State, Entry in pairs(Responder.SpeechWords) do&#10;    if table.findtext(Entry.k, m.content) then&#10;    if Responder.MessageInfo[m.sender] then&#10;    if Responder.MessageInfo[m.sender][State] then&#10;    if not Responder.SpeechWords[State].r[Responder.MessageInfo[m.sender][State] + 1] then&#10;    Responder.Ignored[m.sender] = true&#10;&#10;    local msg = ({&quot;ignored -.-&quot;, &quot;ignored&quot;})[math.random(1, 2)]&#10;&#10;    if not Config.IgnoreMonsters then&#10;    while maround(1, false) &gt; 0 do&#10;    wait(100, 200)&#10;    end&#10;    end&#10;&#10;    if m.type ~= MSG_PVT then&#10;    say(&quot;Local Chat&quot;, msg)&#10;    else&#10;    say(&quot;Local Chat&quot;, string.format(&quot;@%s@ %s&quot;, m.sender, msg))&#10;    end&#10;&#10;    if Config.LogText then&#10;    file.writeline(fileName, string.format(&quot;SENT: [%s] VIA: %s FROM: %s TO: %s CONTENT: %s&quot;, m.timestr, m.type == MSG_PVT and &quot;Private&quot; or &quot;Local Chat&quot;, $name, m.sender, msg))&#10;    file.writeline(fileName, string.format(&quot;IGNORED PLAYER: [%s] NAME: %s&quot;, m.timestr, m.sender))&#10;    end&#10;&#10;    $chardb:setvalue('AUTO_RESPONDER', 'IgnoredGuys', table.tostring(Responder.Ignored))&#10;&#10;    return&#10;    end&#10;    else&#10;    Responder.MessageInfo[m.sender][State] = 0&#10;    end&#10;    else&#10;    Responder.MessageInfo[m.sender] = {}&#10;    Responder.MessageInfo[m.sender][State] = 0&#10;    end&#10;&#10;    if not Config.IgnoreMonsters then&#10;    while maround(1, false) &gt; 0 do&#10;    wait(100, 200)&#10;    end&#10;    end&#10;&#10;    local msg = Entry.r[Responder.MessageInfo[m.sender][State] + 1][math.random(1, #Entry.r[Responder.MessageInfo[m.sender][State] + 1])]&#10;&#10;    if m.type ~= MSG_PVT then&#10;    say(&quot;Local Chat&quot;, msg)&#10;    else&#10;    say(&quot;Local Chat&quot;, string.format(&quot;*%s* %s&quot;, m.sender, msg))&#10;    end&#10;&#10;    if Config.LogText then&#10;    file.writeline(fileName, string.format(&quot;SENT: [%s] VIA: %s FROM: %s TO: %s CONTENT: %s&quot;, m.timestr, m.type == MSG_PVT and &quot;Private&quot; or &quot;Local Chat&quot;, $name, m.sender, msg))&#10;    end&#10;&#10;    Responder.MessageInfo[m.sender][State], Responder.Timer = Responder.MessageInfo[m.sender][State] + 1, os.time()&#10;&#10;    return&#10;    end&#10;    end&#10;    end&#10;    end" enabled="no"/>
            <PersistentScript name="SafeReconnect" script="    init start&#10;    local ReopenBps = true&#10;    local IgnoreSS = false&#10;&#10;&#10;    -- DO NOT EDIT BELOW --&#10;    local state, logout_callBacks = true, {&#10;    {&#10;    function()&#10;    return isontemple()&#10;    end,&#10;&#10;    function()&#10;    return messagebox('Reconnect Issue', 'Reconnect persistent was disabled because your character was inside a temple.\nTo enable script again just enter on it and click on OK.')&#10;    end&#10;    },&#10;&#10;    {&#10;    function()&#10;    return ($self.skull == SKULL_RED or $self.skull == SKULL_BLACK) and $pzone&#10;    end,&#10;&#10;    function()&#10;    return messagebox('Reconnect Issue', 'Reconnect persistent was disabled because your character have gained a red/black skull.\nTo enable script again just enter on it and click on OK.')&#10;    end&#10;    }&#10;    }&#10;&#10;    if $curscript.type == 'cavebot' then&#10;    messagebox(&quot;Reconnect Issue&quot;, &quot;Reconnect should be placed at Scripter/Persistents and not Cavebot/Scripter.\nChange this setting to run it properly.&quot;)&#10;    state = false&#10;    end&#10;&#10;    init end&#10;&#10;    auto(1000, 2000)&#10;&#10;    if (not IgnoreSS) and (sstime() &lt;= 600 or sstime() &gt;= 85800) then&#10;    return&#10;    end&#10;&#10;    if not $connected and state then&#10;    local ts = $timems&#10;    setsetting('Targeting/Enabled', 'no')&#10;    setsetting('Cavebot/Enabled', 'no')&#10;    pausewalking(10000)&#10;&#10;    while not $connected do&#10;    keyevent(0x1B)&#10;    reconnect()&#10;    waitping()&#10;    end&#10;&#10;    if not $connected then&#10;    return&#10;    else&#10;    for _, xlogf in ipairs(logout_callBacks) do&#10;    if xlogf[1]() then&#10;    state = false&#10;    logout()&#10;    return xlogf[2]()&#10;    end&#10;    end&#10;&#10;    if ReopenBps then&#10;    local min = $minimized&#10;&#10;    if min then&#10;    restoreclient() waitping()&#10;    end&#10;&#10;    reopenwindows('small')&#10;&#10;    local waittime = {1, 1}&#10;&#10;    while $openingbps do&#10;    waitping(1 + waittime[1], 1.2 + waittime[2])&#10;&#10;    waittime[1], waittime[2] = waittime[1] + 1, waittime[2] + 1&#10;&#10;    if $timems - ts &gt;= 10000 or maround(5) &gt; 0 then&#10;    pausewalking(5000)&#10;    setsetting('Targeting/Enabled', 'yes')&#10;    setsetting('Cavebot/Enabled', 'yes')&#10;    end&#10;    end&#10;&#10;    if min and not $minimized then&#10;    minimizeclient()&#10;    end&#10;    end&#10;&#10;    setsetting('Targeting/Enabled', 'yes')&#10;    setsetting('Cavebot/Enabled', 'yes')&#10;    pausewalking(0)&#10;    end&#10;    end" enabled="no"/>
            <PersistentScript name="FlaskDropper" script="    init start&#10;    -- local SCRIPT_VERSION = '1.0.1'&#10;&#10;    local minAmount = 30 -- Minimum amount to drop&#10;&#10;    -- DO NOT EDIT BELOW THIS LINE --&#10;    local randMinAmount = minAmount&#10;    init end&#10;&#10;    auto(1000, 3000)&#10;    dontlist()&#10;&#10;    if flasks() &gt;= randMinAmount then&#10;    if maround() ~= 0 then&#10;    wait(500, 1000)&#10;    else&#10;    pausewalking(10000)&#10;&#10;    for i = 283, 285 do&#10;    if itemcount(i) &gt; 0 then&#10;    moveitems(i, 'ground')&#10;    waitping()&#10;    end&#10;    end&#10;&#10;    pausewalking(0)&#10;    end&#10;&#10;    randMinAmount = math.random(minAmount - 5, minAmount + 5)&#10;    end" enabled="yes"/>
            <PersistentScript name="SpellAttack" script="    init start&#10;&#10;    local Monsters = {&quot;Mammoth&quot;, &quot;Frost Giant&quot;, &quot;Frost Giantess&quot;, &quot;Witch&quot;, &quot;Elephant&quot;}&#10;&#10;&#9;filteruseroptions(true)&#10;&#10;    local Players = {&#10;    Consider = false,&#10;    Distance = 10,&#10;    FloorDifference = 1,&#10;    SafeList = {&quot;Bubble&quot;, &quot;Eternal Oblivion&quot;},&#10;    }&#10;&#10;    local Spells = {&#10;    {Name = &quot;exori con&quot;, Amount = tonumber(getuseroption('monsterscon'))},&#10;    {Name = &quot;exori san&quot;, Amount = tonumber(getuseroption('monsterssan'))},&#10;    }&#10;&#10;    local SpecialAreas = {&#10;    -- {min x, max x, min y, max y, z}&#10;    }&#10;&#10;    local UseTargetState = false&#10;&#10;    -- DO NOT CHANGE ANYTHING BELOW THIS LINE&#10;&#10;    local i, LastFloor, Exhaust = 1, $posz, $timems&#10;&#10;    while Spells[i] ~= nil do&#10;    Spells[i].Info = spellinfo(Spells[i].Name)&#10;&#10;    if Spells[i].Info.words == 0 then&#10;    table.remove(Spells, i)&#10;    else&#10;    Spells[i].Monsters = Spells[i].Monsters or Monsters&#10;    Spells[i].NeedDirection = table.find({&quot;WaveSmall&quot;, &quot;WaveVerySmall&quot;, &quot;WaveBig&quot;, &quot;BeamSmall&quot;, &quot;BeamBig&quot;, &quot;Front&quot;, &quot;Strike&quot;}, Spells[i].Info.castarea) ~= nil&#10;    Spells[i].AttackSupport = Spells[i].Info.group:match(&quot;Support&quot;) ~= nil&#10;&#10;    table.lower(Spells[i].Monsters)&#10;    i = i + 1&#10;    end&#10;    end&#10;&#10;    init end&#10;&#10;    auto(200, 400)&#10;&#10;    if $posz ~= LastFloor then&#10;    LastFloor, Exhaust = $posz, $timems + 2000&#10;    return&#10;    end&#10;&#10;    if $timems &gt;= Exhaust and ($targeting or not UseTargetState) then&#10;    for _, Spell in ipairs(Spells) do&#10;    if cancast(Spell.Info) and not isinsidearea(SpecialAreas) then&#10;    if Spell.Amount and (not Players.Consider or paroundfloorignore(Players.Distance, Players.FloorDifference, unpack(Players.SafeList)) == 0) then&#10;    local BestAmount, BestDir = 0, $self.dir&#10;&#10;    if Spell.NeedDirection then&#10;    for Dir, Amount in pairs({n = 0, e = 0, s = 0, w = 0}) do&#10;    Amount = maroundspell(Spell.Name, Dir, unpack(Spell.Monsters))&#10;&#10;    if Amount &gt; BestAmount or (Amount &gt;= BestAmount and Dir == $self.dir) then&#10;    BestAmount, BestDir = Amount, Dir&#10;    end&#10;    end&#10;    else&#10;    BestAmount = not Spell.AttackSupport and maroundspell(Spell.Name, BestDir, unpack(Spell.Monsters)) or maround(1, false, unpack(Spell.Monsters))&#10;    end&#10;&#10;    if BestAmount &gt;= math.max(Spell.Amount, 1) then&#10;    while $self.dir ~= BestDir do&#10;    turn(BestDir) waitping()&#10;    end&#10;    cast(Spell.Name) waitping()&#10;    end&#10;    elseif Spell.Hppc and $attacked.hppc &gt;= math.max(Spell.Hppc, 1) and table.find(Spell.Monsters, $attacked.name:lower()) and cancast(Spell.Info, $attacked) then&#10;    cast(Spell.Name) waitping()&#10;    end&#10;    end&#10;    end&#10;    end" enabled="yes"/>
            <PersistentScript name="Screenshot" script="init start&#10;&#10;&#9;local Skills = {&#10;&#9;&#9;-- Downgrades&#10;&#9;&#9;Death&#9;&#9;=&#9;true,&#10;&#10;&#9;&#9;-- Upgrades&#10;&#9;&#9;Level&#9;&#9;=&#9;true,&#10;&#9;&#9;Magic&#9;&#9;=&#9;false,&#10;&#9;&#9;Fist&#9;&#9;=&#9;false,&#10;&#9;&#9;Axe&#9;&#9;=&#9;false,&#10;&#9;&#9;Club&#9;&#9;=&#9;false,&#10;&#9;&#9;Sword&#9;&#9;=&#9;false,&#10;&#9;&#9;Distance&#9;=&#9;false,&#10;&#9;&#9;Shielding&#9;=&#9;false,&#10;&#9;&#9;Fishing&#9;&#9;=&#9;false,&#10;&#9;}&#10;&#10;&#9;-- DO NOT EDIT BELOW --&#10;&#10;init end&#10;&#10;auto(400, 800)&#10;&#10;foreach newmessage m do&#10;&#9;if m.type == MSG_STATUS or m.type == MSG_ADVANCE then&#10;&#9;&#9;local Skill = m.content:match('You advanced .- (.-)[%s%.].-')&#10;&#10;&#9;&#9;if Skill and Skills[Skill:capitalize()] then&#10;&#9;&#9;&#9;screenshot(string.format('Advance_%s_%s', $name, os.date('%Y-%m-%d %H-%M-%S')))&#10;&#9;&#9;end&#10;&#9;end&#10;end&#10;&#10;if Skills.Death and $dead then&#10;&#9;screenshot(string.format('Death_%s_%s', $name, os.date('%Y-%m-%d %H-%M-%S')))&#10;&#9;repeat&#10;&#9;&#9;wait(1000)&#10;&#9;until not $dead&#10;end" enabled="yes"/>
        </PersistentScripts>
    </Scripter>
    <HUDs>
        <HUDScripts>
            <HUDScript name="MonitorMyHunting" script="init start&#13;&#10;&#9;--&#13;&#10;&#9;--                        88                                                                  &#13;&#10;&#9;--                        &quot;&quot;                                                ,d                &#13;&#10;&#9;--                                                                          88                &#13;&#10;&#9;--             ,adPPYba,  88  8b,dPPYba,  88,dPYba,,adPYba,   ,adPPYYba,  MM88MMM  ,adPPYba,  &#13;&#10;&#9;--             I8[    &quot;&quot;  88  88P'   &quot;Y8  88P'   &quot;88&quot;    &quot;8a  &quot;&quot;     `Y8    88    a8P_____88  &#13;&#10;&#9;--              `&quot;Y8ba,   88  88          88      88      88  ,adPPPPP88    88    8PP&quot;&quot;&quot;&quot;&quot;&quot;&quot;  &#13;&#10;&#9;--             aa    ]8I  88  88          88      88      88  88,    ,88    88,   &quot;8b,   ,aa  &#13;&#10;&#9;--   Author:   `&quot;YbbdP&quot;'  88  88          88      88      88  `&quot;8bbdP&quot;Y8    &quot;Y888  `&quot;Ybbd8&quot;'  &#13;&#10;&#9;--   &#13;&#10;&#9;--   Monitor My Hunting!&#13;&#10;&#9;--&#13;&#10;&#9;--   Version: 1.0&#13;&#10;&#9;--   Created: 29.12.2013&#13;&#10;&#9;--   Last update: 29.12.2013&#13;&#10;&#9;--&#13;&#10;&#13;&#10;&#9;local MMH = {&#13;&#10;&#9;&#9;SHOW_ALL_ITEMS = false,&#13;&#10;&#9;&#9;SHOW_ALL_SUPPLIES = false,&#13;&#10;&#9;}&#13;&#10;&#13;&#10;&#9;-- [[ Do not change anything below this line. ]] --&#13;&#10;&#13;&#10;&#9;-- [[ COLORS ]] --&#13;&#10;&#9;MMH.COLORS = {}&#13;&#10;&#9;MMH.COLORS.FONT_COLOR = color(255, 255, 255, 0)&#13;&#10;&#9;MMH.COLORS.SECTION_HEADER_BACKGROUND = {0.0, color(36, 68, 105, 20), 0.23, color(39, 73, 114, 20), 0.76, color(21, 39, 60, 20)}&#13;&#10;&#9;MMH.COLORS.ENTRY_NAME_BACKGROUND = {0.0, color(75, 75, 75, 20), 0.23, color(45, 45, 45, 20), 0.76, color(19, 19, 19, 20)}&#13;&#10;&#9;MMH.COLORS.ENTRY_VALUE_BACKGROUND = {0.0, color(145, 95, 0, 20), 0.23, color(158, 104, 0, 20), 0.76, color(84, 55, 0, 20)}&#13;&#10;&#9;MMH.COLORS.RESULT_POSITIVE_BACKGROUND = {0.0, color(65, 96, 12, 20), 0.23, color(67, 99, 13, 20), 0.76, color(36, 52, 6, 20)}&#13;&#10;&#9;MMH.COLORS.RESULT_NEGATIVE_BACKGROUND = {0.0, color(90, 12, 15, 20), 0.23, color(98, 13, 17, 20), 0.76, color(52, 6, 9, 20)}&#13;&#10;&#9;MMH.COLORS.RESET_BUTTON_BACKGROUND = MMH.COLORS.RESULT_POSITIVE_BACKGROUND&#13;&#10;&#13;&#10;&#9;-- [[ ELEMENTS ]] --&#13;&#10;&#9;MMH.ELEMENTS = {}&#13;&#10;&#9;MMH.ELEMENTS.RESET_BUTTON = -1&#13;&#10;&#9;MMH.ELEMENTS.SWITCH_ITEMS_LOOTED = -1&#13;&#10;&#9;MMH.ELEMENTS.SWITCH_SUPPLIES_USED = -1&#13;&#10;&#13;&#10;&#9;-- [[ SECTION STATES ]] --&#13;&#10;&#9;MMH.SECTIONS = {}&#13;&#10;&#9;MMH.SECTIONS.ITEMS_LOOTED = true&#13;&#10;&#9;MMH.SECTIONS.SUPPLIES_USED = true&#13;&#10;&#13;&#10;&#9;-- [[ OTHERS ]] --&#9;&#13;&#10;&#9;filterinput(false, true, false, false)&#13;&#10;&#13;&#10;&#9;local MOVING, TEMP, MOVED = false, {0, 0}, {0, 0}&#13;&#10;&#13;&#10;&#9;function inputevents(e)&#13;&#10;&#9;&#9;if (e.type == IEVENT_LMOUSEDOWN) then&#13;&#10;&#9;&#9;&#9;if (e.elementid == MMH.ELEMENTS.RESET_BUTTON) then&#13;&#10;&#9;&#9;&#9;&#9;resetcharactertime()&#13;&#10;&#9;&#9;&#9;&#9;resetlootcounter()&#13;&#10;&#9;&#9;&#9;&#9;resetexpcounter()&#13;&#10;&#9;&#9;&#9;elseif (e.elementid == MMH.ELEMENTS.SWITCH_ITEMS_LOOTED) then&#13;&#10;&#9;&#9;&#9;&#9;MMH.SECTIONS.ITEMS_LOOTED = not MMH.SECTIONS.ITEMS_LOOTED&#13;&#10;&#9;&#9;&#9;elseif (e.elementid == MMH.ELEMENTS.SWITCH_SUPPLIES_USED) then&#13;&#10;&#9;&#9;&#9;&#9;MMH.SECTIONS.SUPPLIES_USED = not MMH.SECTIONS.SUPPLIES_USED&#13;&#10;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;end&#13;&#10;&#13;&#10;&#9;&#9;if (e.type == IEVENT_MMOUSEDOWN) then&#13;&#10;&#9;&#9;&#9;MOVING, TEMP = true, {$cursor.x - MOVED[1], $cursor.y - MOVED[2]}&#13;&#10;&#9;&#9;end&#13;&#10;&#13;&#10;&#9;&#9;if (e.type == IEVENT_MMOUSEUP) then&#13;&#10;&#9;&#9;&#9;MOVING = false&#13;&#10;&#9;&#9;end&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;setmaskcolorxp(0)&#13;&#10;init end&#13;&#10;&#13;&#10;if (MOVING) then&#13;&#10;    auto(10)&#13;&#10;    MOVED = {$cursor.x - TEMP[1], $cursor.y - TEMP[2]}&#13;&#10;end&#13;&#10;&#13;&#10;setposition($clientwin.right - 424 + MOVED[1], $worldwin.top + MOVED[2])&#13;&#10;setfontstyle('Tahoma', 8, 75, MMH.COLORS.FONT_COLOR, 1, color(0, 0, 0, 20))&#13;&#10;&#13;&#10;local ROW_QUANTITY, STRING_WIDTH, STRING_HEIGHT = 0, measurestring('TEMP')&#13;&#10;local ITEMS_LOOTED_WORTH, ITEM_LOOTED_QUANTITY, ITEM_LOOTED_WORTH = 0, 0, 0&#13;&#10;local SUPPLIES_USED_WORTH, SUPPLY_USED_QUANTITY, SUPPLY_USED_WORTH = 0, 0, 0&#13;&#10;&#13;&#10;setfillstyle('gradient', 'linear', 2, 0, 0, 0, 21)&#13;&#10;addgradcolors(unpack(MMH.COLORS.ENTRY_NAME_BACKGROUND))&#13;&#10;drawroundrect(0, 0, 240, 20, 2, 2)&#13;&#10;drawtext('Monitor My Hunting v1.0', 6, 20 / 2 - STRING_HEIGHT * 0.5)&#13;&#10;&#13;&#10;setfillstyle('gradient', 'linear', 2, 0, 0, 0, 21)&#13;&#10;addgradcolors(unpack(MMH.COLORS.RESET_BUTTON_BACKGROUND))&#13;&#10;MMH.ELEMENTS.RESET_BUTTON = drawroundrect(196, 0, 44, 20, 2, 2)&#13;&#10;drawtext('RESET', 202, 20 / 2 - STRING_HEIGHT * 0.5)&#13;&#10;&#13;&#10;setfontsize(7)&#13;&#10;&#13;&#10;STRING_WIDTH, STRING_HEIGHT = measurestring('TEMP')&#13;&#10;&#13;&#10;setfillstyle('gradient', 'linear', 2, 0, 0, 0, 16)&#13;&#10;addgradcolors(unpack(MMH.COLORS.ENTRY_NAME_BACKGROUND))&#13;&#10;drawroundrect(0, 23, 240, 15, 2, 2)&#13;&#10;drawtext('Looting Accuracy', 6, 23 + 15 / 2 - STRING_HEIGHT * 0.5 + 1)&#13;&#10;&#13;&#10;setfillstyle('gradient', 'linear', 2, 0, 0, 0, 16)&#13;&#10;addgradcolors(unpack(MMH.COLORS.ENTRY_VALUE_BACKGROUND))&#13;&#10;drawroundrect(130, 23, 110, 15, 2, 2)&#13;&#10;drawtext(string.format('%.2f', $lootaccuracy) .. '%', 136, 23 + 15 / 2 - STRING_HEIGHT * 0.5 + 1)&#13;&#10;&#13;&#10;setfontsize(8)&#13;&#10;&#13;&#10;STRING_WIDTH, STRING_HEIGHT = measurestring('TEMP')&#13;&#10;&#13;&#10;setfillstyle('gradient', 'linear', 2, 0, 0, 0, 21)&#13;&#10;addgradcolors(unpack(MMH.COLORS.SECTION_HEADER_BACKGROUND))&#13;&#10;drawroundrect(0, 41, 240, 20, 2, 2)&#13;&#10;drawtext('ITEMS LOOTED', 6, 41 + 20 / 2 - STRING_HEIGHT * 0.5)&#13;&#10;&#13;&#10;setfillstyle('gradient', 'linear', 2, 0, 0, 0, 21)&#13;&#10;if (MMH.SECTIONS.ITEMS_LOOTED) then&#13;&#10;&#9;addgradcolors(unpack(MMH.COLORS.RESULT_POSITIVE_BACKGROUND))&#13;&#10;else&#13;&#10;&#9;addgradcolors(unpack(MMH.COLORS.RESULT_NEGATIVE_BACKGROUND))&#13;&#10;end&#13;&#10;MMH.ELEMENTS.SWITCH_ITEMS_LOOTED = drawroundrect(220, 41, 20, 20, 2, 2)&#13;&#10;drawtext('X', 228, 41 + 20 / 2 - STRING_HEIGHT * 0.5)&#13;&#10;&#13;&#10;setfontsize(7)&#13;&#10;&#13;&#10;STRING_WIDTH, STRING_HEIGHT = measurestring('TEMP')&#13;&#10;&#13;&#10;foreach lootingitem ItemEntry do&#13;&#10;&#9;if (MMH.SHOW_ALL_ITEMS or ItemEntry.amountlooted &gt; 0) then&#13;&#10;&#9;&#9;ITEM_LOOTED_QUANTITY = ItemEntry.amountlooted&#13;&#10;&#9;&#9;ITEM_LOOTED_WORTH = ItemEntry.sellprice * ITEM_LOOTED_QUANTITY&#13;&#10;&#13;&#10;&#9;&#9;if (MMH.SECTIONS.ITEMS_LOOTED) then&#13;&#10;&#9;&#9;&#9;setfillstyle('gradient', 'linear', 2, 0, 0, 0, 16)&#13;&#10;&#9;&#9;&#9;addgradcolors(unpack(MMH.COLORS.ENTRY_NAME_BACKGROUND))&#13;&#10;&#9;&#9;&#9;drawroundrect(0, 64 + ROW_QUANTITY * 18, 240, 15, 2, 2)&#13;&#10;&#9;&#9;&#13;&#10;&#9;&#9;&#9;setcompositionmode(CompositionMode_SourceOver)&#13;&#10;&#9;&#9;&#9;drawitem(ItemEntry.id, 6, 64 + ROW_QUANTITY * 18, 50, 100)&#13;&#10;&#9;&#9;&#9;setcompositionmode(CompositionMode_Automatic)&#13;&#10;&#13;&#10;&#9;&#9;&#9;drawtext(((#ItemEntry.name &gt; 16 and string.match(string.sub(ItemEntry.name, 1, 16), '(.-)%s?$') .. '...') or ItemEntry.name):capitalizeall(), 28, 64 + ROW_QUANTITY * 18 + 15 / 2 - STRING_HEIGHT * 0.5)&#13;&#10;&#13;&#10;&#9;&#9;&#9;setfillstyle('gradient', 'linear', 2, 0, 0, 0, 16)&#13;&#10;&#9;&#9;&#9;addgradcolors(unpack(MMH.COLORS.ENTRY_VALUE_BACKGROUND))&#13;&#10;&#9;&#9;&#9;drawroundrect(130, 64 + ROW_QUANTITY * 18, 110, 15, 2, 2)&#13;&#10;&#9;&#9;&#9;drawtext(num(ITEM_LOOTED_QUANTITY) .. ' (' .. math.floor(ITEM_LOOTED_WORTH / 100) / 10 .. 'K)', 136, 64 + ROW_QUANTITY * 18 + 15 / 2 - STRING_HEIGHT * 0.5)&#13;&#10;&#13;&#10;&#9;&#9;&#9;ROW_QUANTITY = ROW_QUANTITY + 1&#13;&#10;&#9;&#9;end&#13;&#10;&#13;&#10;&#9;&#9;ITEMS_LOOTED_WORTH = ITEMS_LOOTED_WORTH + ITEM_LOOTED_WORTH&#13;&#10;&#9;end&#13;&#10;end&#13;&#10;&#13;&#10;setfillstyle('gradient', 'linear', 2, 0, 0, 0, 16)&#13;&#10;addgradcolors(unpack(MMH.COLORS.ENTRY_NAME_BACKGROUND))&#13;&#10;drawroundrect(0, 64 + ROW_QUANTITY * 18, 240, 15, 2, 2)&#13;&#10;drawtext('Total: ' .. num(ITEMS_LOOTED_WORTH) .. ' GPs', 6, 64 + ROW_QUANTITY * 18 + 15 / 2 - STRING_HEIGHT * 0.5)&#13;&#10;&#13;&#10;ROW_QUANTITY = ROW_QUANTITY + 1&#13;&#10;&#13;&#10;setfontsize(8)&#13;&#10;&#13;&#10;STRING_WIDTH, STRING_HEIGHT = measurestring('TEMP')&#13;&#10;&#13;&#10;setfillstyle('gradient', 'linear', 2, 0, 0, 0, 21)&#13;&#10;addgradcolors(unpack(MMH.COLORS.SECTION_HEADER_BACKGROUND))&#13;&#10;drawroundrect(0, 64 + ROW_QUANTITY * 18, 240, 20, 2, 2)&#13;&#10;drawtext('SUPPLIES USED', 6, 64 + ROW_QUANTITY * 18 + 20 / 2 - STRING_HEIGHT * 0.5)&#13;&#10;&#13;&#10;setfillstyle('gradient', 'linear', 2, 0, 0, 0, 21)&#13;&#10;if (MMH.SECTIONS.SUPPLIES_USED) then&#13;&#10;&#9;addgradcolors(unpack(MMH.COLORS.RESULT_POSITIVE_BACKGROUND))&#13;&#10;else&#13;&#10;&#9;addgradcolors(unpack(MMH.COLORS.RESULT_NEGATIVE_BACKGROUND))&#13;&#10;end&#13;&#10;MMH.ELEMENTS.SWITCH_SUPPLIES_USED = drawroundrect(220, 64 + ROW_QUANTITY * 18, 20, 20, 2, 2)&#13;&#10;drawtext('X', 228, 64 + ROW_QUANTITY * 18 + 20 / 2 - STRING_HEIGHT * 0.5)&#13;&#10;&#13;&#10;setfontsize(7)&#13;&#10;&#13;&#10;STRING_WIDTH, STRING_HEIGHT = measurestring('TEMP')&#13;&#10;&#13;&#10;foreach supplyitem ItemEntry do&#13;&#10;&#9;if (MMH.SHOW_ALL_SUPPLIES or ItemEntry.amountused &gt; 0) then&#13;&#10;&#9;&#9;SUPPLY_USED_QUANTITY = ItemEntry.amountused&#13;&#10;&#9;&#9;SUPPLY_USED_WORTH = ItemEntry.buyprice * SUPPLY_USED_QUANTITY&#13;&#10;&#13;&#10;&#9;&#9;if (MMH.SECTIONS.SUPPLIES_USED) then&#13;&#10;&#9;&#9;&#9;setfillstyle('gradient', 'linear', 2, 0, 0, 0, 16)&#13;&#10;&#9;&#9;&#9;addgradcolors(unpack(MMH.COLORS.ENTRY_NAME_BACKGROUND))&#13;&#10;&#9;&#9;&#9;drawroundrect(0, 87 + ROW_QUANTITY * 18, 240, 15, 2, 2)&#13;&#10;&#13;&#10;&#9;&#9;&#9;setcompositionmode(CompositionMode_SourceOver)&#13;&#10;&#9;&#9;&#9;drawitem(ItemEntry.id, 6, 87 + ROW_QUANTITY * 18, 50, 100)&#13;&#10;&#9;&#9;&#9;setcompositionmode(CompositionMode_Automatic)&#13;&#10;&#13;&#10;&#9;&#9;&#9;drawtext(((#ItemEntry.name &gt; 16 and string.match(string.sub(ItemEntry.name, 1, 16), '(.-)%s?$') .. '...') or ItemEntry.name):capitalizeall(), 28, 87 + ROW_QUANTITY * 18 + 15 / 2 - STRING_HEIGHT * 0.5)&#13;&#10;&#13;&#10;&#9;&#9;&#9;setfillstyle('gradient', 'linear', 2, 0, 0, 0, 16)&#13;&#10;&#9;&#9;&#9;addgradcolors(unpack(MMH.COLORS.ENTRY_VALUE_BACKGROUND))&#13;&#10;&#9;&#9;&#9;drawroundrect(130, 87 + ROW_QUANTITY * 18, 110, 15, 2, 2)&#13;&#10;&#9;&#9;&#9;drawtext(num(SUPPLY_USED_QUANTITY) .. ' (' .. math.floor(SUPPLY_USED_WORTH / 100) / 10 .. 'K)', 136, 87 + ROW_QUANTITY * 18 + 15 / 2 - STRING_HEIGHT * 0.5)&#13;&#10;&#13;&#10;&#9;&#9;&#9;ROW_QUANTITY = ROW_QUANTITY + 1&#13;&#10;&#9;&#9;end&#13;&#10;&#13;&#10;&#9;&#9;SUPPLIES_USED_WORTH = SUPPLIES_USED_WORTH + SUPPLY_USED_WORTH&#13;&#10;&#9;end&#13;&#10;end&#13;&#10;&#13;&#10;if (MMH.SECTIONS.SUPPLIES_USED) then&#13;&#10;&#9;setfillstyle('gradient', 'linear', 2, 0, 0, 0, 16)&#13;&#10;&#9;addgradcolors(unpack(MMH.COLORS.ENTRY_NAME_BACKGROUND))&#13;&#10;&#9;drawroundrect(0, 87 + ROW_QUANTITY * 18, 240, 15, 2, 2)&#13;&#10;&#13;&#10;&#9;setcompositionmode(CompositionMode_SourceOver)&#13;&#10;&#9;drawitem(3031, 6, 87 + ROW_QUANTITY * 18, 50, 100)&#13;&#10;&#9;setcompositionmode(CompositionMode_Automatic)&#13;&#10;&#13;&#10;&#9;drawtext('Money Spent', 28, 87 + ROW_QUANTITY * 18 + 15 / 2 - STRING_HEIGHT * 0.5)&#13;&#10;&#13;&#10;&#9;setfillstyle('gradient', 'linear', 2, 0, 0, 0, 16)&#13;&#10;&#9;addgradcolors(unpack(MMH.COLORS.ENTRY_VALUE_BACKGROUND))&#13;&#10;&#9;drawroundrect(130, 87 + ROW_QUANTITY * 18, 110, 15, 2, 2)&#13;&#10;&#9;drawtext(num($moneyspent) .. ' (' .. math.floor($moneyspent / 100) / 10 .. 'K)', 136, 87 + ROW_QUANTITY * 18 + 15 / 2 - STRING_HEIGHT * 0.5)&#13;&#10;&#13;&#10;&#9;ROW_QUANTITY = ROW_QUANTITY + 1&#13;&#10;end&#13;&#10;&#13;&#10;SUPPLIES_USED_WORTH = SUPPLIES_USED_WORTH + $moneyspent&#13;&#10;&#13;&#10;setfillstyle('gradient', 'linear', 2, 0, 0, 0, 16)&#13;&#10;addgradcolors(unpack(MMH.COLORS.ENTRY_NAME_BACKGROUND))&#13;&#10;drawroundrect(0, 87 + ROW_QUANTITY * 18, 240, 15, 2, 2)&#13;&#10;drawtext('Total: ' .. num(SUPPLIES_USED_WORTH) .. ' GPs', 6, 87 + ROW_QUANTITY * 18 + 15 / 2 - STRING_HEIGHT * 0.5)&#13;&#10;&#13;&#10;ROW_QUANTITY = ROW_QUANTITY + 1&#13;&#10;&#13;&#10;setfontsize(8)&#13;&#10;&#13;&#10;STRING_WIDTH, STRING_HEIGHT = measurestring('TEMP')&#13;&#10;&#13;&#10;setfillstyle('gradient', 'linear', 2, 0, 0, 0, 21)&#13;&#10;if (ITEMS_LOOTED_WORTH &gt;= SUPPLIES_USED_WORTH) then&#13;&#10;&#9;addgradcolors(unpack(MMH.COLORS.RESULT_POSITIVE_BACKGROUND))&#13;&#10;else&#13;&#10;&#9;addgradcolors(unpack(MMH.COLORS.RESULT_NEGATIVE_BACKGROUND))&#13;&#10;end&#13;&#10;drawroundrect(0, 87 + ROW_QUANTITY * 18, 240, 20, 2, 2)&#13;&#10;drawtext(((ITEMS_LOOTED_WORTH &gt;= SUPPLIES_USED_WORTH and ('PROFIT: ')) or ('WASTE: ')) .. num(ITEMS_LOOTED_WORTH - SUPPLIES_USED_WORTH) .. ' GPs (' .. math.abs(math.floor(((ITEMS_LOOTED_WORTH - SUPPLIES_USED_WORTH) * 3600) / ($charactertime / 1000) / 100) / 10) .. ' k/h)', 6, 87 + ROW_QUANTITY * 18 + 20 / 2 - STRING_HEIGHT * 0.5)" enabled="yes" refreshRate="100"/>
            <HUDScript name="MonitorMyStats" script="init start&#10;    --&#10;    --              88                                                                  &#10;    --              &quot;&quot;                                                ,d                &#10;    --                                                                88                &#10;    --   ,adPPYba,  88  8b,dPPYba,  88,dPYba,,adPYba,   ,adPPYYba,  MM88MMM  ,adPPYba,  &#10;    --   I8[    &quot;&quot;  88  88P'   &quot;Y8  88P'   &quot;88&quot;    &quot;8a  &quot;&quot;     `Y8    88    a8P_____88  &#10;    --    `&quot;Y8ba,   88  88          88      88      88  ,adPPPPP88    88    8PP&quot;&quot;&quot;&quot;&quot;&quot;&quot;  &#10;    --   aa    ]8I  88  88          88      88      88  88,    ,88    88,   &quot;8b,   ,aa  &#10;    --   `&quot;YbbdP&quot;'  88  88          88      88      88  `&quot;8bbdP&quot;Y8    &quot;Y888  `&quot;Ybbd8&quot;'  &#10;    --&#10;&#10;    --   Name: Monitor My Stats&#10;    --   Last Updated: 19/12/2013&#10;    --   Version: 1.0&#10;&#10;    local MMS = {&#10;        ShowInfo = true,&#10;&#10;        Title = &quot;SCRIPT INFO&quot;,&#10;        Creator = &quot;Rilin&quot;,&#10;        Info = '[RP]Svargrond - Mammoth Factory',&#10;        Version = '1.0.0'&#10;    }&#10;&#10;    -- [[ Do not change anything below this line. ]] --&#10;&#10;    filterinput(false, true, false, false)&#10;&#10;    local HUD_Sections = {&#10;        {Name = 'OTHERS', State = true, Items = {&#10;                {'Ping', function() return $ping .. ' (avg: ' .. $pingaverage .. ')' end},&#10;                {'Bank Balance', function() return num($balance) end},&#10;            }&#10;        },&#10;&#10;        {Name = 'CHARACTER STATS', State = true, Items = {&#10;                {'Level', function() return $level .. ' (' .. 100 - math.floor(($exp - expatlvl($level)) * 100 / (expatlvl($level + 1) - expatlvl($level))) .. '%)' end},&#10;                {'Experience', function() return num($exp) end},&#10;                {'Magic Level', function() return $mlevel .. ' (' .. 100 - $mlevelpc .. '%)' end},&#10;                {'Weapon Skill', function() local _ = WeaponSkill() return _.skill .. ' (' .. 100 - _.skillpc .. '%)' end},&#10;                {'Shielding', function() return $shielding .. ' (' .. 100 - $shieldingpc .. '%)' end},&#10;                {'Fishing', function() return $fishing .. ' (' .. 100 - $fishingpc .. '%)' end}&#10;            }&#10;        },&#10;&#10;        {Name = 'ENGINE STATES', State = true, Items = {&#10;                {'Spell Healer', function() return getsetting('SpellHealer/Enabled') end, function() return toggle('SpellHealer/Enabled') end},&#10;                {'Potion Healer', function() return getsetting('PotionHealer/Enabled') end, function() return toggle('PotionHealer/Enabled') end},&#10;                {'Condition Healer', function() return getsetting('ConditionHealer/Enabled') end, function() return toggle('ConditionHealer/Enabled') end},&#10;                {'Mana Training', function() return getsetting('ManaTrainer/Enabled') end, function() return toggle('ManaTrainer/Enabled') end},&#10;                {'Cavebot', function() return getsetting('Cavebot/Enabled') end, function() return toggle('Cavebot/Enabled') end},&#10;                {'Looting', function() return getsetting('Looting/Enabled') end, function() return toggle('Looting/Enabled') end},&#10;                {'Targeting', function() return getsetting('Targeting/Enabled') end, function() return toggle('Targeting/Enabled') end}&#10;            }&#10;        },&#10;&#10;        {Name = 'BOTTING STATS', State = true, Items = {&#10;                {'Experience per Hour', function() return num($exphour) end},&#10;                {'Experience Left', function() return num(exptolevel()) end},&#10;                {'Experience Today', function() return num($expgained) end},&#10;                {'Time to Next Level', function() return time(timetolevel()) end},&#10;                {'Played Time', function() return time(math.floor($charactertime / 1000)) end},&#10;                {'Stamina', function() return time($stamina) end}&#10;            }&#10;        }&#10;    }&#10;&#10;    local HUD_Colors = {&#10;            Font = color(255, 255, 255, 0),&#10;            SectionHeaderBackground = {0.0, color(36, 68, 105, 20), 0.23, color(39, 73, 114, 20), 0.76, color(21, 39, 60, 20)},&#10;            EntryNameBackground = {0.0, color(75, 75, 75, 20), 0.23, color(45, 45, 45, 20), 0.76, color(19, 19, 19, 20)},&#10;            EntryValueBackground = {0.0, color(145, 95, 0, 20), 0.23, color(158, 104, 0, 20), 0.76, color(84, 55, 0, 20)},&#10;            EntryValueEnabledBackground = {0.0, color(65, 96, 12, 20), 0.23, color(67, 99, 13, 20), 0.76, color(36, 52, 6, 20)},&#10;            EntryValueDisabledBackground = {0.0, color(90, 12, 15, 20), 0.23, color(98, 13, 17, 20), 0.76, color(52, 6, 9, 20)},&#10;    }&#10;&#10;    function WeaponSkill()&#10;        local SkillTypes = {&#10;            ['axe'] = {type = 'axe', skill = $axe, skillpc = $axepc},&#10;            ['club'] = {type = 'club', skill = $club, skillpc = $clubpc},&#10;            ['sword'] = {type = 'sword', skill = $sword, skillpc = $swordpc},&#10;            ['bow'] = {type = 'distance', skill = $distance, skillpc = $distancepc},&#10;            ['distance weapon'] = {type = 'distance', skill = $distance, skillpc = $distancepc},&#10;            ['no weapon'] = {type = 'fist', skill = $fist, skillpc = $fistpc},&#10;            ['rod'] = {type = 'magic', skill = $mlevel, skillpc = $mlevelpc},&#10;            ['wand'] = {type = 'magic', skill = $mlevel, skillpc = $mlevelpc},&#10;        }&#10;&#10;        return SkillTypes[findweapontype()]&#10;    end&#10;&#10;    local Moving, Temp, Moved = false, {0, 0}, {0, 0}&#10;&#10;    function inputevents(e)&#10;        if (e.type == IEVENT_LMOUSEDOWN) then&#10;            for _, Section in ipairs(HUD_Sections) do&#10;                if (e.elementid == Section.StateSwitch) then&#10;                    Section.State = not Section.State&#10;                    return&#10;                end&#10;            end&#10;        for _, Section in ipairs(HUD_Sections) do&#10;                if (Section.Name == 'ENGINE STATES') then&#10;                    for _, SectionItem in ipairs(Section.Items) do&#10;                        if (e.elementid == SectionItem[4]) then&#10;                            SectionItem[3]()&#10;                            return&#10;                        end&#10;                    end&#10;                end&#10;            end&#10;        end&#10;&#10;        if (e.type == IEVENT_MMOUSEDOWN) then&#10;            Moving, Temp = true, {$cursor.x - Moved[1], $cursor.y - Moved[2]}&#10;        end&#10;&#10;        if (e.type == IEVENT_MMOUSEUP) then&#10;            Moving = false&#10;        end&#10;    end&#10;    &#10;    setmaskcolorxp(0)&#10;init end&#10;&#10;if (Moving) then&#10;    auto(10)&#10;    Moved = {$cursor.x - Temp[1], $cursor.y - Temp[2]}&#10;end&#10;&#10;setposition($clientwin.left + 5 + Moved[1], $worldwin.top + Moved[2])&#10;setfontstyle('Tahoma', 8, 75, 0xFFFFFF, 1, color(0, 0, 0, 20))&#10;&#10;local YPosition, SectionRow, SectionItemsRow = 0, 0, 0&#10;&#10;if MMS.ShowInfo then&#10;    local StringWidth, StringHeight = measurestring('TEMP')&#10;&#10;    setfillstyle('gradient', 'linear', 2, 0, 0, 0, 22)&#10;    addgradcolors(unpack(HUD_Colors.SectionHeaderBackground))&#10;    drawroundrect(0, 0, 240, 21, 2, 2)&#10;    drawtext(MMS.Title, 6, 21 / 2 - StringHeight * 0.5)&#10;&#10;    setfillstyle('gradient', 'linear', 2, 0, 0, 0, 22)&#10;    addgradcolors(unpack(HUD_Colors.EntryValueBackground))&#10;    drawroundrect(130, 0, 110, 21, 2, 2)&#10;    drawtext(MMS.Creator, 136, 21 / 2 - StringHeight * 0.5)&#10;&#10;    setfontsize(7)&#10;&#10;    local StringWidth, StringHeight = measurestring('TEMP')&#10;&#10;    setfillstyle('gradient', 'linear', 2, 0, 0, 0, 16)&#10;    addgradcolors(unpack(HUD_Colors.EntryNameBackground))&#10;    drawroundrect(0, 24 + 0 * 18, 240, 15, 2, 2)&#10;    drawtext(MMS.Info, 6, 24 + 0 * 18 + 15 / 2 - StringHeight * 0.5 + 1)&#10;     &#10;    setfillstyle('gradient', 'linear', 2, 0, 0, 0, 16)&#10;    addgradcolors(unpack(HUD_Colors.EntryNameBackground))&#10;    drawroundrect(0, 24 + 1 * 18, 240, 15, 2, 2)&#10;    drawtext('Script version:', 6, 24 + 1 * 18 + 15 / 2 - StringHeight * 0.5 + 1)&#10;     &#10;    setfillstyle('gradient', 'linear', 2, 0, 0, 0, 16)&#10;    addgradcolors(unpack(HUD_Colors.EntryValueBackground))&#10;    drawroundrect(130, 24 + 1 * 18, 110, 15, 2, 2)&#10;    drawtext(MMS.Version, 136, 24 + 1 * 18 + 15 / 2 - StringHeight * 0.5 + 1)&#10;    &#10;    YPosition = 22 + 2 * 19&#10;end&#10;&#10;for SectionIndex, Section in ipairs(HUD_Sections) do&#10;    setfontsize(8)&#10;&#10;    local StringWidth, StringHeight = measurestring('TEMP')&#10;&#10;    setfillstyle('gradient', 'linear', 2, 0, 0, 0, 21)&#10;    addgradcolors(unpack(HUD_Colors.SectionHeaderBackground))&#10;    drawroundrect(0, YPosition + (SectionRow * 23) + (SectionItemsRow * 19), 240, 20, 2, 2)&#10;    drawtext(Section.Name, 6, YPosition + (SectionRow * 23) + (SectionItemsRow * 19) + 20 / 2 - StringHeight * 0.5 + 1)&#10;&#10;    setfillstyle('gradient', 'linear', 2, 0, 0, 0, 21)&#10;    if (Section.State) then&#10;        addgradcolors(unpack(HUD_Colors.EntryValueEnabledBackground))&#10;    else&#10;        addgradcolors(unpack(HUD_Colors.EntryValueDisabledBackground))&#10;    end&#10;    Section.StateSwitch = drawroundrect(220, YPosition + (SectionRow * 23) + (SectionItemsRow * 19), 20, 20, 2, 2)&#10;    drawtext('X', 228, YPosition + (SectionRow * 23) + (SectionItemsRow * 19) + 20 / 2 - StringHeight * 0.5 + 1)&#10;&#10;    SectionRow = SectionRow + 1&#10;&#10;    if (Section.State) then&#10;        setfontsize(7)&#10;&#10;        local StringWidth, StringHeight = measurestring('TEMP')&#10;&#10;        for SectionItemIndex, SectionItem in ipairs(Section.Items) do&#10;            setfillstyle('gradient', 'linear', 2, 0, 0, 0, 17)     &#10;            addgradcolors(unpack(HUD_Colors.EntryNameBackground))&#10;            drawroundrect(0, YPosition + (SectionRow * 23) + (SectionItemsRow * 19), 240, 16, 2, 2)&#10;            drawtext(SectionItem[1], 6, YPosition + (SectionRow * 23) + (SectionItemsRow * 19) + 16 / 2 - StringHeight * 0.5 + 1)&#10;&#10;            if (Section.Name == 'ENGINE STATES') then&#10;                local EngineCurrentState = SectionItem[2]()&#10;&#10;                setfillstyle('gradient', 'linear', 2, 0, 0, 0, 17)&#10;                if (EngineCurrentState == 'yes') then&#10;                    addgradcolors(unpack(HUD_Colors.EntryValueEnabledBackground))&#10;                else&#10;                    addgradcolors(unpack(HUD_Colors.EntryValueDisabledBackground))&#10;                end&#10;                HUD_Sections[SectionIndex].Items[SectionItemIndex][4] = drawroundrect(130, YPosition + (SectionRow * 23) + (SectionItemsRow * 19), 110, 16, 2, 2)&#10;&#10;&#10;                drawtext((EngineCurrentState == 'yes' and ('On')) or ('Off'), 136, YPosition + (SectionRow * 23) + (SectionItemsRow * 19) + 16 / 2 - StringHeight * 0.5 + 1)&#10;            else&#10;                setfillstyle('gradient', 'linear', 2, 0, 0, 0, 17)&#10;                addgradcolors(unpack(HUD_Colors.EntryValueBackground))&#10;                drawroundrect(130, YPosition + (SectionRow * 23) + (SectionItemsRow * 19), 110, 16, 2, 2)&#10;                drawtext(SectionItem[2](), 136, YPosition + (SectionRow * 23) + (SectionItemsRow * 19) + 16 / 2 - StringHeight * 0.5 + 1)&#10;            end&#10;&#10;            SectionItemsRow = SectionItemsRow + 1&#10;        end&#10;    end&#10;end" enabled="yes" refreshRate="100"/>
            <HUDScript name="ShowWaypoints" script="init start&#10;&#9;-- local SCRIPT_VERSION = '1.2.1'&#10;&#10;&#9;local waypointColors = {&#10;&#9;&#9;walk    = 0xAAF200,&#10;&#9;&#9;node    = 0x2A0736,&#10;&#9;&#9;stand   = 0x00AACC,&#10;&#9;&#9;shovel  = 0xEB8540,&#10;&#9;&#9;rope    = 0xFFCC00,&#10;&#9;&#9;machete = 0x003366,&#10;&#9;&#9;ladder  = 0xC55186,&#10;&#9;&#9;use     = 0x36693E,&#10;&#9;&#9;action  = 0x00FFFF,&#10;&#9;&#9;lure    = 0xCCCCCC&#10;&#9;}&#10;&#10;&#9;local function deleteWaypointCall(menu)&#10;&#9;&#9;removewaypoint(menu.waypointID)&#10;&#9;end&#10;&#10;&#9;local function moveWaypointName()&#10;&#9;&#9;if resizedWpt == nil then&#10;&#9;&#9;&#9;return tern(draggedWpt == nil, 'Move Waypoint', 'Stop Moving')&#10;&#9;&#9;end&#10;&#9;end&#10;&#10;&#9;local function moveWaypointCall(menu)&#10;&#9;&#9;if draggedWpt == nil then&#10;&#9;&#9;&#9;draggedWpt = menu.waypoint&#10;&#9;&#9;else&#10;&#9;&#9;&#9;draggedWpt = nil&#10;&#9;&#9;end&#10;&#9;end&#10;&#10;&#9;local function resizeWaypointName()&#10;&#9;&#9;if draggedWpt == nil then&#10;&#9;&#9;&#9;return tern(resizedWpt == nil, 'Resize Waypoint', 'Stop Resizing')&#10;&#9;&#9;end&#10;&#9;end&#10;&#10;&#9;local function resizeWaypointCall(menu)&#10;&#9;&#9;if resizedWpt == nil then&#10;&#9;&#9;&#9;resizedWpt = menu.waypoint&#10;&#9;&#9;else&#10;&#9;&#9;&#9;resizedWpt = nil&#10;&#9;&#9;end&#10;&#9;end&#10;&#10;&#9;registermessagehandler('contextMenu_waypoint', moveWaypointName, moveWaypointCall)&#10;&#9;registermessagehandler('contextMenu_waypoint', resizeWaypointName, resizeWaypointCall)&#10;&#9;registermessagehandler('contextMenu_waypoint', 'Delete Waypoint', deleteWaypointCall)&#10;&#9;registermessagehandler('contextMenu_waypoint', MENU_SEPARATOR, nil)&#10;&#10;&#9;local xOffset, yOffset, worldWidth, worldHeight, x, y, z, topLeftTilePos,&#10;&#9;      botRightTilePos, width, height, text, label&#10;&#9;local waypointRect = {}&#10;&#10;&#9;function gettilepos(x, y, z)&#10;&#9;&#9;local tile = getobjectarea(x, y, z)&#10;&#10;&#9;&#9;if tile == nil then&#10;&#9;&#9;&#9;local xDiff, yDiff = x - $posx, y - $posy&#10;&#9;&#9;&#9;if math.abs($posx - x) &lt;= 7 then&#10;&#9;&#9;&#9;&#9;tile = getobjectarea(x, $posy, $posz)&#10;&#9;&#9;&#9;&#9;xDiff = 0&#10;&#9;&#9;&#9;elseif math.abs($posy - y) &lt;= 5 then&#10;&#9;&#9;&#9;&#9;tile = getobjectarea($posx, y, $posz)&#10;&#9;&#9;&#9;&#9;yDiff = 0&#10;&#9;&#9;&#9;else&#10;&#9;&#9;&#9;&#9;tile = getobjectarea($posx, $posy, $posz)&#10;&#9;&#9;&#9;end&#10;&#10;&#9;&#9;&#9;-- Some strange stuff happens when you go from 0 to -1, so I'm&#10;&#9;&#9;&#9;-- adding this as a precaution.&#10;&#9;&#9;&#9;if tile ~= nil then&#10;&#9;&#9;&#9;&#9;local width, height = $worldwin.width, $worldwin.height&#10;&#10;&#9;&#9;&#9;&#9;tile.left    = tile.left    + (width * xDiff)&#10;&#9;&#9;&#9;&#9;tile.right   = tile.right   + (width * xDiff)&#10;&#9;&#9;&#9;&#9;tile.centerx = tile.centerx + (width * xDiff)&#10;&#9;&#9;&#9;&#9;tile.top     = tile.top     + (height * yDiff)&#10;&#9;&#9;&#9;&#9;tile.bottom  = tile.bottom  + (height * yDiff)&#10;&#9;&#9;&#9;&#9;tile.centery = tile.centery + (height * yDiff)&#10;&#9;&#9;&#9;end&#10;&#9;&#9;end&#10;&#10;&#9;&#9;return tile&#10;&#9;end&#10;&#10;&#9;useworldhud()&#10;init end&#10;&#10;setfontstyle('Tahoma', 7, 75, 0xFFFFFF, 1, 0x000000)&#10;&#10;xOffset, yOffset = $worldwin.left - $clientwin.left, $worldwin.top - $clientwin.top&#10;worldWidth, worldHeight = $worldwin.right - $worldwin.left - 2, $worldwin.bottom - $worldwin.top - 2&#10;&#10;local i = 0&#10;foreach settingsentry e 'Cavebot/Waypoints' do&#10;&#9;x, y, z = getsetting(e, 'Coordinates'):match(REGEX_SPA_COORDS)&#10;&#9;x, y, z = tonumber(x), tonumber(y), tonumber(z)&#10;&#10;&#9;if z == $posz then&#10;&#9;&#9;width, height = getsetting(e, 'Range'):match(REGEX_SPA_SIZE)&#10;&#9;&#9;width, height = tonumber(width), tonumber(height)&#10;&#10;&#9;&#9;topLeftTilePos = gettilepos(x, y, z)&#10;&#9;&#9;botRightTilePos = gettilepos(x + width - 1, y + height - 1, z)&#10;&#10;&#9;&#9;if topLeftTilePos and botRightTilePos then&#10;&#9;&#9;&#9;waypointRect.left   = math.max(topLeftTilePos.left  , 0)&#10;&#9;&#9;&#9;waypointRect.top    = math.max(topLeftTilePos.top   , 0)&#10;&#9;&#9;&#9;waypointRect.right  = math.min(botRightTilePos.right , worldWidth)&#10;&#9;&#9;&#9;waypointRect.bottom = math.min(botRightTilePos.bottom, worldHeight)&#10;&#9;&#9;&#9;waypointRect.width  = waypointRect.right - waypointRect.left&#10;&#9;&#9;&#9;waypointRect.height = waypointRect.bottom - waypointRect.top&#10;&#10;&#9;&#9;&#9;if waypointRect.width &gt; 0 and waypointRect.height &gt; 0 then&#10;&#9;&#9;&#9;&#9;label = getsetting(e, 'Label')&#10;&#9;&#9;&#9;&#9;text = tern(#label == 0, tostring(i), label .. ' (' .. i .. ')')&#10;&#9;&#9;&#9;&#9;wptType = getsetting(e, 'Type')&#10;&#10;&#9;&#9;&#9;&#9;setfillstyle('color', (waypointColors[wptType:lower()] or 0) + (math.floor(2.55*50)*16777216))&#10;&#9;&#9;&#9;&#9;drawroundrect(&#10;&#9;&#9;&#9;&#9;&#9;waypointRect.left,&#10;&#9;&#9;&#9;&#9;&#9;waypointRect.top,&#10;&#9;&#9;&#9;&#9;&#9;waypointRect.width,&#10;&#9;&#9;&#9;&#9;&#9;waypointRect.height,&#10;&#9;&#9;&#9;&#9;&#9;10, 10&#10;&#9;&#9;&#9;&#9;)&#10;&#10;&#9;&#9;&#9;&#9;if waypointRect.width &gt; 10 then&#10;&#9;&#9;&#9;&#9;&#9;drawtext(&#10;&#9;&#9;&#9;&#9;&#9;&#9;string.fit(text, waypointRect.width - 10, '...', true),&#10;&#9;&#9;&#9;&#9;&#9;&#9;waypointRect.left + 5,&#10;&#9;&#9;&#9;&#9;&#9;&#9;waypointRect.top + 3&#10;&#9;&#9;&#9;&#9;&#9;)&#10;&#9;&#9;&#9;&#9;&#9;drawtext(&#10;&#9;&#9;&#9;&#9;&#9;&#9;string.fit(wptType, waypointRect.width - 10, '...', true),&#10;&#9;&#9;&#9;&#9;&#9;&#9;waypointRect.left + 5,&#10;&#9;&#9;&#9;&#9;&#9;&#9;waypointRect.top + 15&#10;&#9;&#9;&#9;&#9;&#9;)&#10;&#9;&#9;&#9;&#9;end&#10;&#9;&#9;&#9;end&#10;&#9;&#9;end&#10;&#9;end&#10;&#10;&#9;i = i + 1&#10;end&#10;&#10;if contextmenuinfo() == nil then&#10;&#9;if draggedWpt then&#10;&#9;&#9;set(draggedWpt, 'Coordinates', string.format('x:%i, y:%i, z:%i', $cursorinfo.x, $cursorinfo.y, $cursorinfo.z))&#10;&#9;elseif resizedWpt then&#10;&#9;&#9;local x, y = get(resizedWpt, 'Coordinates'):match(REGEX_COORDS)&#10;&#9;&#9;x, y = tonumber(x), tonumber(y)&#10;&#10;&#9;&#9;set(resizedWpt, 'Range', string.format('%i x %i', math.max(1, 1 + ($cursorinfo.x - x)) , math.max(1, 1 + ($cursorinfo.y - y))))&#10;&#9;end&#10;end" enabled="yes" refreshRate="100"/>
        </HUDScripts>
    </HUDs>
    <GeneralSettings>
        <Input>
            <MouseOption mouseMode="Simulate Mouse"/>
            <MouseOption scrollMode="Use mouse wheel"/>
            <MouseOption stuckCursorPolicy="If Cavebot on, Release Instantly"/>
            <MouseOption moveSpeed="Instantaneous"/>
            <MouseOption clickWaitMin="30" clickWaitMax="60"/>
            <KeyboardOption keyboardMode="Simulate Keyboard"/>
            <KeyboardOption stuckCtrlShiftPolicy="If Cavebot on, Release Instantly"/>
            <KeyboardOption typeWaitMin="30" typeWaitMax="60"/>
            <KeyboardOption pressWaitMin="30" pressWaitMax="60"/>
            <FocusOption focusPolicy="Don't auto-focus"/>
            <FocusOption openMenuPolicy="Confirm if cavebotting"/>
        </Input>
    </GeneralSettings>
    <Alerts disableSounds="no">
        <alert name="Player On Screen" playSound="no" pauseBot="no" logout="no" safeList="&lt;SafeList&gt;&#10;"/>
        <alert name="Player Attacking" playSound="yes" pauseBot="no" logout="no" safeList="&lt;SafeList&gt;&#10;"/>
        <alert name="Monster Attacking" playSound="no" pauseBot="no" logout="no" safeList="&lt;SafeList&gt;&#10;"/>
        <alert name="Private Message" playSound="yes" pauseBot="no" logout="no" safeList="&lt;SafeList&gt;&#10;"/>
        <alert name="Default Message" playSound="no" pauseBot="no" logout="no" safeList="&lt;SafeList&gt;&#10;"/>
        <alert name="GM Detected" playSound="yes" pauseBot="no" logout="no"/>
        <alert name="Disconnected" playSound="no" pauseBot="no" logout="no"/>
        <alert name="Character Stuck" playSound="no" pauseBot="no" logout="no" standTime="30000"/>
        <alert name="Health Below" playSound="yes" pauseBot="no" logout="no" healthPercent="50"/>
        <alert name="Mana Below" playSound="no" pauseBot="no" logout="no" manaPercent="50"/>
        <alert name="Unjust Kill" playSound="yes" pauseBot="no" logout="no"/>
        <alert name="Enemies Online" playSound="no" pauseBot="no" logout="no" enemiesCount="50"/>
    </Alerts>
    <Cavebot enabled="yes">
        <Options>
            <Option shovel="3457"/>
            <Option rope="3003"/>
            <Option machete="3308"/>
            <Option pick="3456"/>
            <Option nodeRange="4"/>
            <Option pauseBotOnDeath="yes"/>
            <Option refillAmmo="no" refillAmmoMin="30" refillAmmoMax="70"/>
            <Option autoMount="no"/>
            <Option fireAvoidanceMin="15" fireAvoidanceMax="20"/>
            <Option energyAvoidanceMin="15" energyAvoidanceMax="20"/>
            <Option poisonAvoidanceMin="15" poisonAvoidanceMax="20"/>
            <Option walkThroughPlayers="yes"/>
            <Option walkMethod="Walk With Arrow Keys"/>
            <Option walkableItems=""/>
            <Option mapWalkDistMin="20" mapWalkDistMax="30"/>
            <Option userOptionsScript="{&quot;type&quot;: &quot;scriptinfo&quot;,&#10;&quot;name&quot; : &quot;RP mammoth&quot;,&#10;&quot;version&quot; : &quot;1.0&quot;&#10;},&#10;{&#10;&#9;&quot;type&quot;     : &quot;group&quot;,&#10;&#9;&quot;name&quot;     : &quot;General Options:&quot;,&#10;&#9;&quot;children&quot; : [&#10;&#9;&#9;{&#10;&#9;&#9;&#9;&quot;type&quot;  : &quot;checkbox&quot;,&#10;&#9;&#9;&#9;&quot;name&quot;  : &quot;automount&quot;,&#10;&#9;&#9;&#9;&quot;description&quot; : &quot;If checked, your character will auto mount.&quot;,&#10;&#9;&#9;&#9;&quot;text&quot;  : &quot;Auto Mount&quot;,&#10;&#9;&#9;&#9;&quot;value&quot; : true&#10;&#9;&#9;},&#10;&#9;&#9;{&#10;&#9;&#9;&#9;&quot;type&quot;  : &quot;checkbox&quot;,&#10;&#9;&#9;&#9;&quot;name&quot;  : &quot;walkthrough&quot;,&#10;&#9;&#9;&#9;&quot;description&quot; : &quot;If checked, your character will walk through players.&quot;,&#10;&#9;&#9;&#9;&quot;text&quot;  : &quot;Walk Through Players&quot;,&#10;&#9;&#9;&#9;&quot;value&quot; : true&#10;&#9;&#9;},&#10;&#9;&#9;{&#10;&#9;&#9;&#9;&quot;type&quot;  : &quot;checkbox&quot;,&#10;&#9;&#9;&#9;&quot;name&quot;  : &quot;safer&quot;,&#10;&#9;&#9;&#9;&quot;description&quot; : &quot;If checked, your character will reconnect whenever he is diconnected.&quot;,&#10;&#9;&#9;&#9;&quot;text&quot;  : &quot;Safe Reconnect&quot;,&#10;&#9;&#9;&#9;&quot;value&quot; : false&#10;&#9;&#9;},&#10;&#9;&#9;{&#10;&#9;&#9;&#9;&quot;type&quot;  : &quot;checkbox&quot;,&#10;&#9;&#9;&#9;&quot;name&quot;  : &quot;responder&quot;,&#10;&#9;&#9;&#9;&quot;description&quot; : &quot;If checked, your character will respond to other character sentences.&quot;,&#10;&#9;&#9;&#9;&quot;text&quot;  : &quot;Auto Responder&quot;,&#10;&#9;&#9;&#9;&quot;value&quot; : false&#10;&#9;&#9;},&#10;&#9;&#9;{&#10;&#9;&#9;&#9;&quot;type&quot;  : &quot;checkbox&quot;,&#10;&#9;&#9;&#9;&quot;name&quot;  : &quot;pvpw&quot;,&#10;&#9;&#9;&#9;&quot;description&quot; : &quot;Check if you play in a pvp world.&quot;,&#10;&#9;&#9;&#9;&quot;text&quot;  : &quot;PVP World&quot;,&#10;&#9;&#9;&#9;&quot;value&quot; : true&#10;&#9;&#9;}&#10;&#9;]&#10;},&#10;{&#10;&#9;&quot;type&quot;     : &quot;group&quot;,&#10;&#9;&quot;name&quot;     : &quot;Backpacks Setup&quot;,&#10;&#9;&quot;column&quot;  : 2,&#10;&#9;&quot;children&quot; : [&#10;&#9;&#9;{&#10;&#9;&#9;&#9;&quot;type&quot;  : &quot;lineedit&quot;,&#10;&#9;&#9;&#9;&quot;name&quot;  : &quot;MainBP&quot;,&#10;&#9;&#9;&#9;&quot;description&quot; : &quot;Your character main backpack.&quot;,&#10;&#9;&#9;&#9;&quot;text&quot;  : &quot;Main Backpack:&quot;,&#10;&#9;&#9;&#9;&quot;value&quot; : &quot;Backpack of Holding&quot;&#10;&#9;&#9;},&#10;&#9;&#9;{&#10;&#9;&#9;&#9;&quot;type&quot;  : &quot;lineedit&quot;,&#10;&#9;&#9;&#9;&quot;name&quot;  : &quot;LootBP&quot;,&#10;&#9;&#9;&#9;&quot;description&quot; : &quot;Backpack where your character will put the loot.&quot;,&#10;&#9;&#9;&#9;&quot;text&quot;  : &quot;Loot Bacpack:&quot;,&#10;&#9;&#9;&#9;&quot;value&quot; : &quot;Brocade Backpack&quot;&#10;&#9;&#9;},&#10;&#9;&#9;{&#10;&#9;&#9;&#9;&quot;type&quot;  : &quot;lineedit&quot;,&#10;&#9;&#9;&#9;&quot;name&quot;  : &quot;GoldBP&quot;,&#10;&#9;&#9;&#9;&quot;description&quot; : &quot;Backpack where your character will put the gold.&quot;,&#10;&#9;&#9;&#9;&quot;text&quot;  : &quot;Gold Bacpack:&quot;,&#10;&#9;&#9;&#9;&quot;value&quot; : &quot;Golden Backpack&quot;&#10;&#9;&#9;}&#10;&#9;]&#10;},&#10;{&#10;&#9;&quot;type&quot;     : &quot;group&quot;,&#10;&#9;&quot;name&quot;     : &quot;Depot Backpacks Setup&quot;,&#10;&#9;&quot;column&quot;  : 2,&#10;&#9;&quot;children&quot; : [&#10;&#9;&#9;{&#10;&#9;&#9;&#9;&quot;type&quot;  : &quot;lineedit&quot;,&#10;&#9;&#9;&#9;&quot;name&quot;  : &quot;MainDP&quot;,&#10;&#9;&#9;&#9;&quot;description&quot; : &quot;Your character main depot backpack.&quot;,&#10;&#9;&#9;&#9;&quot;text&quot;  : &quot;Main Depot Backpack:&quot;,&#10;&#9;&#9;&#9;&quot;value&quot; : &quot;Fur Backpack&quot;&#10;&#9;&#9;},&#10;&#9;&#9;{&#10;&#9;&#9;&#9;&quot;type&quot;  : &quot;lineedit&quot;,&#10;&#9;&#9;&#9;&quot;name&quot;  : &quot;StackDP&quot;,&#10;&#9;&#9;&#9;&quot;description&quot; : &quot;Backpack where your character will put the stacking loot.&quot;,&#10;&#9;&#9;&#9;&quot;text&quot;  : &quot;Stack Depot Bacpack:&quot;,&#10;&#9;&#9;&#9;&quot;value&quot; : &quot;Beach Backpack&quot;&#10;&#9;&#9;},&#10;&#9;&#9;{&#10;&#9;&#9;&#9;&quot;type&quot;  : &quot;lineedit&quot;,&#10;&#9;&#9;&#9;&quot;name&quot;  : &quot;RaresDP&quot;,&#10;&#9;&#9;&#9;&quot;description&quot; : &quot;Backpack where your character will put the rare loot.&quot;,&#10;&#9;&#9;&#9;&quot;text&quot;  : &quot;Rares Depot Bacpack:&quot;,&#10;&#9;&#9;&#9;&quot;value&quot; : &quot;Orange Backpack&quot;&#10;&#9;&#9;}&#10;&#9;]&#10;},&#10;{&#10;&#9;&quot;type&quot;    : &quot;group&quot;,&#10;&#9;&quot;name&quot;    : &quot;Supplies&quot;,&#10;&#9;&quot;column&quot;  : 2,&#10;&#9;&quot;children&quot;: [&#10;&#9;&#9;{&#10;&#9;&#9;&#9;&quot;type&quot;        : &quot;combobox&quot;,&#10;&#9;&#9;&#9;&quot;name&quot;        : &quot;hpot&quot;,&#10;&#9;&#9;&#9;&quot;description&quot; : &quot;Health potions that your character will use.&quot;,&#10;&#9;&#9;&#9;&quot;text&quot;        : &quot;Health Potion to use:&quot;,&#10;&#9;&#9;&#9;&quot;items&quot;       : [&quot;Health Potion&quot;, &quot;Strong Health Potion&quot;]&#10;&#9;&#9;},&#10;&#9;&#9;{&#10;&#9;&#9;&#9;&quot;type&quot;        : &quot;combobox&quot;,&#10;&#9;&#9;&#9;&quot;name&quot;        : &quot;mpot&quot;,&#10;&#9;&#9;&#9;&quot;description&quot; : &quot;Mana potions that your character will use.&quot;,&#10;&#9;&#9;&#9;&quot;text&quot;        : &quot;Mana Potion to use:&quot;,&#10;&#9;&#9;&#9;&quot;items&quot;       : [&quot;Mana Potion&quot;, &quot;Strong Mana Potion&quot;]&#10;&#9;&#9;},&#10;&#9;&#9;{&#10;&#9;&#9;&#9;&quot;type&quot;        : &quot;lineedit&quot;,&#10;&#9;&#9;&#9;&quot;name&quot;        : &quot;maxhp&quot;,&#10;&#9;&#9;&#9;&quot;description&quot; : &quot;The amount of health potions that your character will take to the hunt.&quot;,&#10;&#9;&#9;&#9;&quot;text&quot;        : &quot;Max. Health Potions:&quot;,&#10;&#9;&#9;&#9;&quot;value&quot;       : &quot;20&quot;&#10;&#9;&#9;},&#10;&#9;&#9;{&#10;&#9;&#9;&#9;&quot;type&quot;        : &quot;lineedit&quot;,&#10;&#9;&#9;&#9;&quot;name&quot;        : &quot;maxmp&quot;,&#10;&#9;&#9;&#9;&quot;description&quot; : &quot;The amount of mana potions that your character will take to the hunt.&quot;,&#10;&#9;&#9;&#9;&quot;text&quot;        : &quot;Max. Mana Potions:&quot;,&#10;&#9;&#9;&#9;&quot;value&quot;       : &quot;80&quot;&#10;&#9;&#9;},&#10;&#9;&#9;{&#10;&#9;&#9;&#9;&quot;type&quot;        : &quot;lineedit&quot;,&#10;&#9;&#9;&#9;&quot;name&quot;        : &quot;minhp&quot;,&#10;&#9;&#9;&#9;&quot;description&quot; : &quot;The amount of health potions that will make your characters to leave the cave.&quot;,&#10;&#9;&#9;&#9;&quot;text&quot;        : &quot;Min. Health Potions:&quot;,&#10;&#9;&#9;&#9;&quot;value&quot;       : &quot;10&quot;&#10;&#9;&#9;},&#10;&#9;&#9;{&#10;&#9;&#9;&#9;&quot;type&quot;        : &quot;lineedit&quot;,&#10;&#9;&#9;&#9;&quot;name&quot;        : &quot;minmp&quot;,&#10;&#9;&#9;&#9;&quot;description&quot; : &quot;The amount of mana potions that will make your characters to leave the cave.&quot;,&#10;&#9;&#9;&#9;&quot;text&quot;        : &quot;Min. Mana Potions:&quot;,&#10;&#9;&#9;&#9;&quot;value&quot;       : &quot;15&quot;&#10;&#9;&#9;},&#10;&#9;&#9;{&#10;&#9;&#9;&#9;&quot;type&quot;        : &quot;lineedit&quot;,&#10;&#9;&#9;&#9;&quot;name&quot;        : &quot;mincap&quot;,&#10;&#9;&#9;&#9;&quot;description&quot; : &quot;The capacity that will make your characters to leave the cave.&quot;,&#10;&#9;&#9;&#9;&quot;text&quot;        : &quot;Min. Capacity:&quot;,&#10;&#9;&#9;&#9;&quot;value&quot;       : &quot;100&quot;&#10;&#9;&#9;}&#10;&#9;]&#10;},&#10;{&#10;&#9;&quot;type&quot;     : &quot;group&quot;,&#10;&#9;&quot;name&quot;     : &quot;Offensive Spells Setup&quot;,&#10;&#9;&quot;children&quot; : [&#10;&#9;&#9;{&#10;&#9;&#9;&#9;&quot;type&quot;  : &quot;checkbox&quot;,&#10;&#9;&#9;&#9;&quot;name&quot;  : &quot;offensivesp&quot;,&#10;&#9;&#9;&#9;&quot;description&quot; : &quot;If checked, your character will cast offensive spells.&quot;,&#10;&#9;&#9;&#9;&quot;text&quot;  : &quot;Use Offensive Spells:&quot;,&#10;&#9;&#9;&#9;&quot;value&quot; : true&#10;&#9;&#9;},&#10;&#9;&#9;{&#10;&#9;&#9;&#9;&quot;type&quot;  : &quot;spinbox&quot;,&#10;&#9;&#9;&#9;&quot;name&quot;  : &quot;monsterscon&quot;,&#10;&#9;&#9;&#9;&quot;description&quot; : &quot;Amount of monster that will make your character to cast exori con.&quot;,&#10;&#9;&#9;&#9;&quot;text&quot;  : &quot;Monsters to Exori Con:&quot;,&#10;&#9;&#9;&#9;&quot;min&quot;    : 1,&#10;&#9;&#9;&#9;&quot;value&quot;  : 1&#10;&#9;&#9;},&#10;&#9;&#9;{&#10;&#9;&#9;&#9;&quot;type&quot;  : &quot;spinbox&quot;,&#10;&#9;&#9;&#9;&quot;name&quot;  : &quot;monsterssan&quot;,&#10;&#9;&#9;&#9;&quot;description&quot; : &quot;Amount of monster that will make your character to cast exori san.&quot;,&#10;&#9;&#9;&#9;&quot;text&quot;  : &quot;Monsters to Exori San:&quot;,&#10;&#9;&#9;&#9;&quot;min&quot;    : 1,&#10;&#9;&#9;&#9;&quot;value&quot;  : 1&#10;&#9;&#9;}&#10;&#9;]&#10;},&#10;{&#10;&#9;&quot;type&quot;    : &quot;group&quot;,&#10;&#9;&quot;name&quot;    : &quot;Paladin Supplies&quot;,&#10;&#9;&quot;children&quot;: [&#10;&#9;&#9;{&#10;&#9;&#9;&#9;&quot;type&quot;        : &quot;combobox&quot;,&#10;&#9;&#9;&#9;&quot;name&quot;        : &quot;stype&quot;,&#10;&#9;&#9;&#9;&quot;description&quot; : &quot;Spears that your character will use.&quot;,&#10;&#9;&#9;&#9;&quot;text&quot;        : &quot;Spears to use:&quot;,&#10;&#9;&#9;&#9;&quot;items&quot;       : [&quot;Royal Spear&quot;]&#10;&#9;&#9;},&#10;&#9;&#9;{&#10;&#9;&#9;&#9;&quot;type&quot;        : &quot;lineedit&quot;,&#10;&#9;&#9;&#9;&quot;name&quot;        : &quot;maxsp&quot;,&#10;&#9;&#9;&#9;&quot;description&quot; : &quot;The amount of spears that your character will take to the hunt.&quot;,&#10;&#9;&#9;&#9;&quot;text&quot;        : &quot;Max. Spears:&quot;,&#10;&#9;&#9;&#9;&quot;value&quot;       : &quot;20&quot;&#10;&#9;&#9;},&#10;&#9;&#9;{&#10;&#9;&#9;&#9;&quot;type&quot;        : &quot;lineedit&quot;,&#10;&#9;&#9;&#9;&quot;name&quot;        : &quot;minsp&quot;,&#10;&#9;&#9;&#9;&quot;description&quot; : &quot;The amount of spears that will make your characters to leave the cave.&quot;,&#10;&#9;&#9;&#9;&quot;text&quot;        : &quot;Min. Spears:&quot;,&#10;&#9;&#9;&#9;&quot;value&quot;       : &quot;5&quot;&#10;&#9;&#9;}&#10;&#9;]&#10;}"/>
        </Options>
        <SpecialAreas/>
        <CavebotScripts>
            <CavebotScript name="AutoMount" script="    --Auto Mount&#10;    auto(100)&#10;    if not $mounted and not $pzone and getuseroption(&quot;automount&quot;) then&#10;    mount()&#10;    wait(10000)&#10;    end" enabled="yes"/>
        </CavebotScripts>
        <WaypointSection name="Town">
            <Waypoint type="Stand" x="32266" y="31141" z="7" rangeX="1" rangeY="1" label="start"/>
            <Waypoint type="Action" x="32266" y="31141" z="7" rangeX="1" rangeY="1" label="reachdp" script="reachgrounditem('depot')"/>
            <Waypoint type="Action" x="32266" y="31141" z="7" rangeX="1" rangeY="1" label="OpenBpsForDP" script="init start&#10;&#9;local mainbp = getlootingdestination('mainbp')&#10;&#9;local lootbp = getlootingdestination('lootbp')&#10;init end&#10;&#10;setsetting('Looting/OpenNextBP', 'no')&#10;&#10;closewindows()&#10;while windowcount() &lt; 2 do&#10;closewindows()&#10;openBackpacks(true, mainbp, lootbp)&#10;waitping()&#10;&#10;setsetting('Looting/OpenNextBP', 'no')&#10;while windowcount(&quot;Depot Chest&quot;) == 0 do&#10;&#9;opendepot()&#10;&#9;wait(300,600)&#10;end&#10;&#10;end"/>
            <Waypoint type="Action" x="32266" y="31141" z="7" rangeX="1" rangeY="1" label="Deposit" script="--Deposit Items&#10;wait(500,1000)&#10;depotaction('maindp', 'lootbp', {'r', 'raresdp', 's', 'stackdp'}) waitping()&#10;wait(500,1000)"/>
            <Waypoint type="Action" x="32266" y="31141" z="7" rangeX="1" rangeY="1" label="OpenBps" script="init start&#10;&#9;local mainbp = getlootingdestination('mainbp')&#10;&#9;local lootbp = getlootingdestination('lootbp')&#10;&#9;local goldbp = getlootingdestination('goldbp')&#10;init end&#10;&#10;setsetting('Looting/OpenNextBP', 'yes')&#10;&#10;closewindows()&#10;while windowcount() &lt; 3 do&#10;closewindows()&#10;openBackpacks(true, mainbp, lootbp, goldbp)&#10;waitping()&#10;&#10;setsetting('Looting/OpenNextBP', 'yes')&#10;end"/>
            <Waypoint type="Node" x="32281" y="31139" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="32291" y="31134" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32300" y="31134" z="7" rangeX="1" rangeY="1" label="Bank"/>
            <Waypoint type="Action" x="32300" y="31134" z="7" rangeX="1" rangeY="1" label="Withdraw" script="--Withdraw money&#10;&#10;if not islocation(1) then&#10;&#9;gotolabel(&quot;Bank&quot;, &quot;Town&quot;)&#10;end&#10;&#10;local HPType = getuseroption(&quot;hpot&quot;)&#10;local MPType = getuseroption(&quot;mpot&quot;)&#10;local SpearToBuy = getuseroption(&quot;maxsp&quot;)&#10;local MpToBuy = getuseroption(&quot;maxmp&quot;)&#10;local HpToBuy = getuseroption(&quot;maxhp&quot;)&#10;&#10;if (HPType == &quot;Strong Health Potion&quot;) then&#10;&#9;hprice = 100&#10;else&#10;&#9;hprice = 45&#10;end&#10;&#10;if (MPType == &quot;Strong Mana Potion&quot;) then&#10;&#9;mprice = 80&#10;else&#10;&#9;mprice = 50&#10;end&#10;&#10;local Mana = positive(MpToBuy - itemcount(MPType))*mprice&#10;local HP = positive(HpToBuy - itemcount(HPType))*hprice&#10;local Spear = positive(SpearToBuy - itemcount(&quot;royal spear&quot;))*15&#10;local Total = Mana + HP + Spear&#10;&#10;if islocation() then&#10;&#9;say(&quot;hi&quot;)&#10;&#9;wait(1200,1700)&#10;&#9;npcsay(&quot;deposit all&quot;)&#10;&#9;wait(1000,1200)&#10;&#9;npcsay(&quot;yes&quot;)&#10;&#9;wait(1500,2000)&#10;&#9;npcsay(&quot;withdraw &quot;..Total)&#10;&#9;wait(1000,1200)&#10;&#9;npcsay(&quot;yes&quot;)&#10;&#9;wait(900,1200)&#10;&#9;npcsay(&quot;balance&quot;)&#10;&#9;wait(900,1200)&#10;end&#10;wait(100)&#10;"/>
            <Waypoint type="Stand" x="32308" y="31132" z="7" rangeX="1" rangeY="1" label="SuppliesLady"/>
            <Waypoint type="Action" x="32308" y="31132" z="7" rangeX="1" rangeY="1" label="Supplies" script="--Buy supplies&#10;local HPType = getuseroption(&quot;hpot&quot;)&#10;local MPType = getuseroption(&quot;mpot&quot;)&#10;&#10;sellflasks()&#10;&#10;local MaxHP = getuseroption(&quot;maxhp&quot;)&#10;local MaxMP = getuseroption(&quot;maxmp&quot;)&#10;&#10;buyitemsupto(HPType,MaxHP)&#10;wait(800,1200)&#10;&#10;amount = MaxMP - itemcount(MPType) &#10;while amount &gt; 0 do &#10;buyitems(MPType, amount) &#10;wait(1100,1400) &#10;amount = amount-100&#10;&#10;end"/>
            <Waypoint type="Node" x="32298" y="31131" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="32287" y="31127" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="32275" y="31127" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="32262" y="31126" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="32249" y="31127" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="32240" y="31123" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="32236" y="31114" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32235" y="31108" z="7" rangeX="1" rangeY="1" label="up1"/>
            <Waypoint type="Action" x="32235" y="31107" z="6" rangeX="1" rangeY="1" script="if not islocation(1) then&#10;&#9;gotolabel(&quot;up1&quot;, &quot;Town&quot;)&#10;end"/>
            <Waypoint type="Node" x="32230" y="31100" z="6" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="32228" y="31091" z="6" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="32234" y="31082" z="6" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32234" y="31074" z="6" rangeX="1" rangeY="1" label="SpearGuy"/>
            <Waypoint type="Action" x="32234" y="31074" z="6" rangeX="1" rangeY="1" label="Reach" script="reachcreature(&quot;Robert&quot;)"/>
            <Waypoint type="Action" x="32234" y="31074" z="6" rangeX="1" rangeY="1" label="BuySpears" script="--Buy supplies&#10;--local SpearType = getuseroption('stype')&#10;&#10;--local MaxSpear = getuseroption(&quot;maxsp&quot;)&#10;&#10;--buyitemsupto(SpearType,MaxSpear)&#10;resupply(&quot;sp&quot;)&#10;wait(800,1200)"/>
            <Waypoint type="Node" x="32234" y="31082" z="6" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="32228" y="31091" z="6" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="32230" y="31100" z="6" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32235" y="31108" z="6" rangeX="1" rangeY="1" label="down1"/>
            <Waypoint type="Action" x="32235" y="31109" z="7" rangeX="1" rangeY="1" script="if not islocation(1) then&#10;&#9;gotolabel(&quot;down1&quot;, &quot;Town&quot;)&#10;end"/>
            <Waypoint type="Stand" x="32244" y="31109" z="7" rangeX="1" rangeY="1" label="up2"/>
            <Waypoint type="Action" x="32245" y="31109" z="6" rangeX="1" rangeY="1" script="if not islocation(1) then&#10;&#9;gotolabel(&quot;up2&quot;, &quot;Town&quot;)&#10;end"/>
            <Waypoint type="Stand" x="32246" y="31106" z="6" rangeX="1" rangeY="1" label="up3"/>
            <Waypoint type="Action" x="32246" y="31105" z="5" rangeX="1" rangeY="1" script="if not islocation(1) then&#10;&#9;gotolabel(&quot;up3&quot;, &quot;Town&quot;)&#10;end"/>
            <Waypoint type="Stand" x="32246" y="31105" z="5" rangeX="1" rangeY="1"/>
            <Waypoint type="Action" x="32246" y="31105" z="5" rangeX="1" rangeY="1" label="GoAway" script="gotolabel(&quot;start&quot;, &quot;WayHunt&quot;)"/>
            <Waypoint type="Stand" x="32246" y="31107" z="6" rangeX="1" rangeY="1" label="BackHunt"/>
            <Waypoint type="Stand" x="32246" y="31112" z="6" rangeX="1" rangeY="1" label="down2"/>
            <Waypoint type="Action" x="32246" y="31113" z="7" rangeX="1" rangeY="1" script="if not islocation(1) then&#10;&#9;gotolabel(&quot;down2&quot;, &quot;Town&quot;)&#10;end"/>
            <Waypoint type="Node" x="32241" y="31123" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="32241" y="31137" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="32253" y="31141" z="7" rangeX="1" rangeY="1"/>
        </WaypointSection>
        <WaypointSection name="WayHunt">
            <Waypoint type="Stand" x="32246" y="31105" z="5" rangeX="1" rangeY="1" label="start"/>
            <Waypoint type="Node" x="32236" y="31098" z="5" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="32238" y="31086" z="5" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="32245" y="31076" z="5" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="32248" y="31065" z="5" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="32255" y="31057" z="5" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="32266" y="31054" z="5" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32270" y="31051" z="5" rangeX="1" rangeY="1" label="down1"/>
            <Waypoint type="Action" x="32271" y="31051" z="6" rangeX="1" rangeY="1" script="if not islocation(1) then&#10;&#9;gotolabel(&quot;down1&quot;, &quot;WayHunt&quot;)&#10;end"/>
            <Waypoint type="Stand" x="32269" y="31046" z="6" rangeX="1" rangeY="1" label="down2"/>
            <Waypoint type="Action" x="32269" y="31045" z="7" rangeX="1" rangeY="1" script="if not islocation(1) then&#10;&#9;gotolabel(&quot;down2&quot;, &quot;WayHunt&quot;)&#10;end"/>
            <Waypoint type="Node" x="32259" y="31041" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="32248" y="31032" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="32237" y="31024" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32229" y="31016" z="7" rangeX="1" rangeY="1" label="down3"/>
            <Waypoint type="Stand" x="32229" y="31017" z="8" rangeX="1" rangeY="1"/>
            <Waypoint type="Action" x="32229" y="31017" z="8" rangeX="1" rangeY="1" script="if not islocation(1) then&#10;&#9;gotolabel(&quot;down3&quot;, &quot;WayHunt&quot;)&#10;else&#10;&#9;gotolabel(&quot;start&quot;, &quot;Hunt&quot;)&#10;end"/>
            <Waypoint type="Stand" x="32228" y="31016" z="8" rangeX="1" rangeY="1" label="up1"/>
            <Waypoint type="Stand" x="32228" y="31015" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Action" x="32228" y="31015" z="7" rangeX="1" rangeY="1" script="if not islocation(1) then&#10;&#9;gotolabel(&quot;up1&quot;, &quot;WayHunt&quot;)&#10;end"/>
            <Waypoint type="Node" x="32233" y="31019" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="32237" y="31024" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="32248" y="31032" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="32259" y="31041" z="7" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32269" y="31046" z="7" rangeX="1" rangeY="1" label="up2"/>
            <Waypoint type="Action" x="32269" y="31047" z="6" rangeX="1" rangeY="1" script="if not islocation(1) then&#10;&#9;gotolabel(&quot;up2&quot;, &quot;WayHunt&quot;)&#10;end"/>
            <Waypoint type="Stand" x="32270" y="31050" z="6" rangeX="1" rangeY="1" label="up3"/>
            <Waypoint type="Action" x="32269" y="31050" z="5" rangeX="1" rangeY="1" script="if not islocation(1) then&#10;&#9;gotolabel(&quot;up3&quot;, &quot;WayHunt&quot;)&#10;end"/>
            <Waypoint type="Node" x="32255" y="31057" z="5" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="32248" y="31065" z="5" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="32245" y="31076" z="5" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="32238" y="31086" z="5" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="32236" y="31098" z="5" rangeX="1" rangeY="1"/>
            <Waypoint type="Stand" x="32246" y="31106" z="5" rangeX="1" rangeY="1" label="down4"/>
            <Waypoint type="Action" x="32246" y="31107" z="6" rangeX="1" rangeY="1" label="goTown" script="if not islocation(1) then&#10;&#9;gotolabel(&quot;down4&quot;, &quot;WayHunt&quot;)&#10;else&#10;&#9;gotolabel(&quot;BackHunt&quot;, &quot;Town&quot;)&#10;end"/>
        </WaypointSection>
        <WaypointSection name="Hunt">
            <Waypoint type="Stand" x="32229" y="31017" z="8" rangeX="1" rangeY="1" label="start"/>
            <Waypoint type="Node" x="32239" y="31025" z="8" rangeX="1" rangeY="1" label="hunt"/>
            <Waypoint type="Node" x="32244" y="31033" z="8" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="32254" y="31034" z="8" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="32244" y="31045" z="8" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="32234" y="31054" z="8" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="32237" y="31066" z="8" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="32251" y="31059" z="8" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="32242" y="31073" z="8" rangeX="1" rangeY="1"/>
            <Waypoint type="Action" x="32241" y="31073" z="8" rangeX="1" rangeY="1" script="local HPType = getuseroption(&quot;hpot&quot;)&#10;local MPType = getuseroption(&quot;mpot&quot;)&#10;local SpearToBuy = getuseroption(&quot;stype&quot;)&#10;&#10;if ($cap &lt; tonumber(getuseroption('mincap')) or itemcount(HPType) &lt; tonumber(getuseroption(&quot;minhp&quot;)) or itemcount(MPType) &lt; tonumber(getuseroption(&quot;minmp&quot;))or itemcount(SpearToBuy) &lt; tonumber(getuseroption(&quot;minsp&quot;))) then&#10;&#9;gotolabel('up1', 'WayHunt')&#10;end"/>
            <Waypoint type="Node" x="32258" y="31079" z="8" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="32235" y="31080" z="8" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="32220" y="31083" z="8" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="32205" y="31085" z="8" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="32217" y="31077" z="8" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="32213" y="31065" z="8" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="32201" y="31060" z="8" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="32191" y="31053" z="8" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="32201" y="31060" z="8" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="32213" y="31065" z="8" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="32223" y="31063" z="8" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="32227" y="31056" z="8" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="32220" y="31048" z="8" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="32213" y="31040" z="8" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="32211" y="31030" z="8" rangeX="1" rangeY="1"/>
            <Waypoint type="Node" x="32226" y="31024" z="8" rangeX="1" rangeY="1"/>
            <Waypoint type="Action" x="32226" y="31024" z="8" rangeX="1" rangeY="1" script="local HPType = getuseroption(&quot;hpot&quot;)&#10;local MPType = getuseroption(&quot;mpot&quot;)&#10;local SpearToBuy = getuseroption(&quot;stype&quot;)&#10;&#10;if ($cap &lt; tonumber(getuseroption('mincap')) or itemcount(HPType) &lt; tonumber(getuseroption(&quot;minhp&quot;)) or itemcount(MPType) &lt; tonumber(getuseroption(&quot;minmp&quot;))or itemcount(SpearToBuy) &lt; tonumber(getuseroption(&quot;minsp&quot;))) then&#10;&#9;gotolabel('up1', 'WayHunt')&#10;else&#10;&#9;gotolabel('hunt')&#10;end"/>
        </WaypointSection>
    </Cavebot>
    <Looting enabled="yes">
        <Options>
            <Option range="10"/>
            <Option moveItemsQuickly="yes"/>
            <Option eatFoodFromCorpse="yes"/>
            <Option openNextBP="yes"/>
            <Option openBPsAtLogin="no"/>
            <Option valuableBodies="3000"/>
            <Option ultraValuableBodies="50000"/>
            <Option alertOnValuableBodies="no"/>
            <Option openValuableBodiesOnly="no"/>
            <Option openUltraValuableBodiesImmediately="no"/>
            <Option policy="Smart Looting"/>
            <LootingDestinations>
                <lootingDestination name="mainbp" destination="brown backpack"/>
                <lootingDestination name="goldbp" destination="yellow backpack"/>
                <lootingDestination name="lootbp" destination="golden backpack"/>
                <lootingDestination name="maindp" destination="fur backpack"/>
                <lootingDestination name="stackdp" destination="camouflage backpack"/>
                <lootingDestination name="raresdp" destination="green backpack"/>
            </LootingDestinations>
        </Options>
        <LootingProfile name="LootList" isCurrentProfile="yes">
            <LootItem name="gold coin" id="3031" sellPrice="1" weight="0.10" destinationName="goldbp" action="Loot" lootCondition="Has Cap to Loot" itemCategory="g" alertOnDrop="no" alertOnMiss="no"/>
            <LootItem name="thick fur" id="10307" sellPrice="150" weight="1.25" destinationName="lootbp" action="Loot" lootCondition="Has Cap to Loot" itemCategory="s" alertOnDrop="no" alertOnMiss="no"/>
            <LootItem name="club ring" id="3093" sellPrice="100" weight="0.90" destinationName="lootbp" action="Loot" lootCondition="Has Cap to Loot" itemCategory="r" alertOnDrop="no" alertOnMiss="no"/>
            <LootItem name="shard" id="7290" sellPrice="2000" weight="19.00" destinationName="lootbp" action="Loot" lootCondition="Has Cap to Loot" itemCategory="r" alertOnDrop="no" alertOnMiss="no"/>
            <LootItem name="frost giant pelt" id="9658" sellPrice="160" weight="2.48" destinationName="lootbp" action="Loot" lootCondition="Has Cap to Loot" itemCategory="s" alertOnDrop="no" alertOnMiss="no"/>
            <LootItem name="norse shield" id="7460" sellPrice="1500" weight="41.00" destinationName="lootbp" action="Loot" lootCondition="Has Cap to Loot" itemCategory="r" alertOnDrop="no" alertOnMiss="no"/>
            <LootItem name="furry club" id="7432" sellPrice="1000" weight="42.00" destinationName="lootbp" action="Loot" lootCondition="Has Cap to Loot" itemCategory="r" alertOnDrop="no" alertOnMiss="no"/>
            <LootItem name="mammoth tusk" id="10321" sellPrice="100" weight="6.00" destinationName="lootbp" action="Loot" lootCondition="Has Cap to Loot" itemCategory="s" alertOnDrop="no" alertOnMiss="no"/>
            <LootItem name="tusk shield" id="3443" sellPrice="850" weight="69.00" destinationName="lootbp" action="Loot" lootCondition="Has Cap to Loot" itemCategory="r" alertOnDrop="no" alertOnMiss="no"/>
            <LootItem name="halberd" id="3269" sellPrice="400" weight="90.00" destinationName="lootbp" action="Loot" lootCondition="Has Cap to Loot" itemCategory="r" alertOnDrop="no" alertOnMiss="no"/>
            <LootItem name="battle shield" id="3413" sellPrice="95" weight="62.00" destinationName="lootbp" action="Ignore" lootCondition="Has Cap to Loot" itemCategory="r" alertOnDrop="no" alertOnMiss="no"/>
            <LootItem name="mana potion" id="268" sellPrice="0" weight="2.70" destinationName="mainbp" action="Loot" lootCondition="Has Cap to Loot" itemCategory="a" alertOnDrop="no" alertOnMiss="no"/>
            <LootItem name="health potion" id="266" sellPrice="0" weight="2.70" destinationName="mainbp" action="Loot" lootCondition="Has Cap to Loot" itemCategory="a" alertOnDrop="no" alertOnMiss="no"/>
            <LootItem name="witch hat" id="9653" sellPrice="5000" weight="7.80" destinationName="lootbp" action="Loot" lootCondition="Has Cap to Loot" itemCategory="r" alertOnDrop="no" alertOnMiss="no"/>
            <LootItem name="silver dagger" id="3290" sellPrice="500" weight="10.20" destinationName="lootbp" action="Loot" lootCondition="Has Cap to Loot" itemCategory="r" alertOnDrop="no" alertOnMiss="no"/>
            <LootItem name="necrotic rod" id="3069" sellPrice="1000" weight="23.00" destinationName="lootbp" action="Loot" lootCondition="Has Cap to Loot" itemCategory="r" alertOnDrop="no" alertOnMiss="no"/>
            <LootItem name="witch broom" id="9652" sellPrice="60" weight="3.33" destinationName="lootbp" action="Loot" lootCondition="Has Cap to Loot" itemCategory="s" alertOnDrop="no" alertOnMiss="no"/>
            <LootItem name="tusk" id="3044" sellPrice="100" weight="10.00" destinationName="lootbp" action="Loot" lootCondition="Has Cap to Loot" itemCategory="s" alertOnDrop="no" alertOnMiss="no"/>
            <LootItem name="stuffed toad" id="10294" sellPrice="0" weight="4.50" destinationName="lootbp" action="Loot" lootCondition="Has Cap to Loot" itemCategory="r" alertOnDrop="no" alertOnMiss="no"/>
            <LootItem name="bag of apple slices" id="12548" sellPrice="0" weight="2.00" destinationName="lootbp" action="Loot" lootCondition="Has Cap to Loot" itemCategory="r" alertOnDrop="no" alertOnMiss="no"/>
            <LootItem name="mammoth whopper" id="7381" sellPrice="300" weight="45.00" destinationName="lootbp" action="Loot" lootCondition="Has Cap to Loot" itemCategory="r" alertOnDrop="no" alertOnMiss="no"/>
        </LootingProfile>
    </Looting>
    <Supplies>
        <Options>
            <Option defaultBackpack=""/>
            <Option extraCashMin="0" extraCashMax="0"/>
            <Option autoSwitchProfiles="no"/>
        </Options>
        <SupplyProfile name="SupplyList" vocation="Paladin" level="40" isCurrentProfile="yes">
            <SupplyItem name="health potion" id="266" buyPrice="45" weight="2.70" leaveCaveAt="0" rule="Up to..." ruleValue="0" destination="" category="sup"/>
            <SupplyItem name="mana potion" id="268" buyPrice="50" weight="2.70" leaveCaveAt="0" rule="Up to..." ruleValue="0" destination="" category="sup"/>
            <SupplyItem name="strong health potion" id="236" buyPrice="100" weight="2.90" leaveCaveAt="0" rule="Up to..." ruleValue="0" destination="" category="sup"/>
            <SupplyItem name="strong mana potion" id="237" buyPrice="80" weight="2.90" leaveCaveAt="0" rule="Up to..." ruleValue="0" destination="" category=""/>
            <SupplyItem name="royal spear" id="7378" buyPrice="15" weight="25.00" leaveCaveAt="0" rule="Down to Cap..." ruleValue="20.00" destination="" category="sp"/>
        </SupplyProfile>
    </Supplies>
    <Targeting enabled="yes" allowDiagonalMovement="yes" autoSwitchProfiles="no" nonPvPMode="no">
        <TargetingProfile name="TargetList" vocation="Paladin" level="40" targetMustBeShootable="no" targetMustBeReachable="yes" isCurrentProfile="yes">
            <Priorities>
                <Priority health="20"/>
                <Priority proximity="60"/>
                <Priority danger="55"/>
                <Priority random="0"/>
                <Priority lure="30"/>
                <Priority stick="2"/>
            </Priorities>
            <Creatures>
                <Creature name="Frost Giant" amount="Any" category="" dontLoot="no" playAlarm="no" syncSpells="no">
                    <FightingSettings>
                        <Setting index="0" hpFrom="0" hpTo="100" danger="0" onlyIfTrapped="no" mustAttackMe="no" action="Attack" avoidance="No Avoidance" desiredStance="Away in Line" distance="3" attackMode="Stand / Offensive" firstSpell="" secondSpell="" thirdSpell="" fourthSpell="" spamMin="300" spamMax="500"/>
                        <Setting index="1" hpFrom="0" hpTo="0" danger="0" onlyIfTrapped="no" mustAttackMe="no" action="Attack" avoidance="No Avoidance" desiredStance="No Movement" distance="3" attackMode="No Change" firstSpell="" secondSpell="" thirdSpell="" fourthSpell="" spamMin="300" spamMax="500"/>
                        <Setting index="2" hpFrom="0" hpTo="0" danger="0" onlyIfTrapped="no" mustAttackMe="no" action="Attack" avoidance="No Avoidance" desiredStance="No Movement" distance="3" attackMode="No Change" firstSpell="" secondSpell="" thirdSpell="" fourthSpell="" spamMin="300" spamMax="500"/>
                        <Setting index="3" hpFrom="0" hpTo="0" danger="0" onlyIfTrapped="no" mustAttackMe="no" action="Attack" avoidance="No Avoidance" desiredStance="No Movement" distance="3" attackMode="No Change" firstSpell="" secondSpell="" thirdSpell="" fourthSpell="" spamMin="300" spamMax="500"/>
                    </FightingSettings>
                </Creature>
                <Creature name="Frost Giantess" amount="Any" category="" dontLoot="no" playAlarm="no" syncSpells="no">
                    <FightingSettings>
                        <Setting index="0" hpFrom="0" hpTo="100" danger="0" onlyIfTrapped="no" mustAttackMe="no" action="Attack" avoidance="No Avoidance" desiredStance="Away in Line" distance="3" attackMode="Stand / Offensive" firstSpell="" secondSpell="" thirdSpell="" fourthSpell="" spamMin="300" spamMax="500"/>
                        <Setting index="1" hpFrom="0" hpTo="0" danger="0" onlyIfTrapped="no" mustAttackMe="no" action="Attack" avoidance="No Avoidance" desiredStance="No Movement" distance="3" attackMode="No Change" firstSpell="" secondSpell="" thirdSpell="" fourthSpell="" spamMin="300" spamMax="500"/>
                        <Setting index="2" hpFrom="0" hpTo="0" danger="0" onlyIfTrapped="no" mustAttackMe="no" action="Attack" avoidance="No Avoidance" desiredStance="No Movement" distance="3" attackMode="No Change" firstSpell="" secondSpell="" thirdSpell="" fourthSpell="" spamMin="300" spamMax="500"/>
                        <Setting index="3" hpFrom="0" hpTo="0" danger="0" onlyIfTrapped="no" mustAttackMe="no" action="Attack" avoidance="No Avoidance" desiredStance="No Movement" distance="3" attackMode="No Change" firstSpell="" secondSpell="" thirdSpell="" fourthSpell="" spamMin="300" spamMax="500"/>
                    </FightingSettings>
                </Creature>
                <Creature name="Witch" amount="Any" category="" dontLoot="no" playAlarm="no" syncSpells="no">
                    <FightingSettings>
                        <Setting index="0" hpFrom="0" hpTo="100" danger="0" onlyIfTrapped="no" mustAttackMe="no" action="Attack" avoidance="No Avoidance" desiredStance="Away in Line" distance="3" attackMode="Stand / Offensive" firstSpell="" secondSpell="" thirdSpell="" fourthSpell="" spamMin="300" spamMax="500"/>
                        <Setting index="1" hpFrom="0" hpTo="0" danger="0" onlyIfTrapped="no" mustAttackMe="no" action="Attack" avoidance="No Avoidance" desiredStance="No Movement" distance="3" attackMode="No Change" firstSpell="" secondSpell="" thirdSpell="" fourthSpell="" spamMin="300" spamMax="500"/>
                        <Setting index="2" hpFrom="0" hpTo="0" danger="0" onlyIfTrapped="no" mustAttackMe="no" action="Attack" avoidance="No Avoidance" desiredStance="No Movement" distance="3" attackMode="No Change" firstSpell="" secondSpell="" thirdSpell="" fourthSpell="" spamMin="300" spamMax="500"/>
                        <Setting index="3" hpFrom="0" hpTo="0" danger="0" onlyIfTrapped="no" mustAttackMe="no" action="Attack" avoidance="No Avoidance" desiredStance="No Movement" distance="3" attackMode="No Change" firstSpell="" secondSpell="" thirdSpell="" fourthSpell="" spamMin="300" spamMax="500"/>
                    </FightingSettings>
                </Creature>
                <Creature name="Mammoth" amount="Any" category="" dontLoot="no" playAlarm="no" syncSpells="no">
                    <FightingSettings>
                        <Setting index="0" hpFrom="0" hpTo="100" danger="0" onlyIfTrapped="no" mustAttackMe="no" action="Attack" avoidance="No Avoidance" desiredStance="Keep Away" distance="3" attackMode="Stand / Offensive" firstSpell="" secondSpell="" thirdSpell="" fourthSpell="" spamMin="300" spamMax="500"/>
                        <Setting index="1" hpFrom="0" hpTo="0" danger="0" onlyIfTrapped="no" mustAttackMe="no" action="Attack" avoidance="No Avoidance" desiredStance="No Movement" distance="3" attackMode="No Change" firstSpell="" secondSpell="" thirdSpell="" fourthSpell="" spamMin="300" spamMax="500"/>
                        <Setting index="2" hpFrom="0" hpTo="0" danger="0" onlyIfTrapped="no" mustAttackMe="no" action="Attack" avoidance="No Avoidance" desiredStance="No Movement" distance="3" attackMode="No Change" firstSpell="" secondSpell="" thirdSpell="" fourthSpell="" spamMin="300" spamMax="500"/>
                        <Setting index="3" hpFrom="0" hpTo="0" danger="0" onlyIfTrapped="no" mustAttackMe="no" action="Attack" avoidance="No Avoidance" desiredStance="No Movement" distance="3" attackMode="No Change" firstSpell="" secondSpell="" thirdSpell="" fourthSpell="" spamMin="300" spamMax="500"/>
                    </FightingSettings>
                </Creature>
                <Creature name="Elephant" amount="Any" category="" dontLoot="no" playAlarm="no" syncSpells="no">
                    <FightingSettings>
                        <Setting index="0" hpFrom="0" hpTo="100" danger="0" onlyIfTrapped="no" mustAttackMe="no" action="Attack" avoidance="No Avoidance" desiredStance="Keep Away" distance="3" attackMode="Stand / Offensive" firstSpell="" secondSpell="" thirdSpell="" fourthSpell="" spamMin="300" spamMax="500"/>
                        <Setting index="1" hpFrom="0" hpTo="0" danger="0" onlyIfTrapped="no" mustAttackMe="no" action="Attack" avoidance="No Avoidance" desiredStance="No Movement" distance="3" attackMode="No Change" firstSpell="" secondSpell="" thirdSpell="" fourthSpell="" spamMin="300" spamMax="500"/>
                        <Setting index="2" hpFrom="0" hpTo="0" danger="0" onlyIfTrapped="no" mustAttackMe="no" action="Attack" avoidance="No Avoidance" desiredStance="No Movement" distance="3" attackMode="No Change" firstSpell="" secondSpell="" thirdSpell="" fourthSpell="" spamMin="300" spamMax="500"/>
                        <Setting index="3" hpFrom="0" hpTo="0" danger="0" onlyIfTrapped="no" mustAttackMe="no" action="Attack" avoidance="No Avoidance" desiredStance="No Movement" distance="3" attackMode="No Change" firstSpell="" secondSpell="" thirdSpell="" fourthSpell="" spamMin="300" spamMax="500"/>
                    </FightingSettings>
                </Creature>
                <Creature name="all" amount="Any" category="" dontLoot="no" playAlarm="no" syncSpells="no">
                    <FightingSettings>
                        <Setting index="0" hpFrom="0" hpTo="100" danger="0" onlyIfTrapped="yes" mustAttackMe="no" action="Attack" avoidance="No Avoidance" desiredStance="No Movement" distance="3" attackMode="Stand / Offensive" firstSpell="" secondSpell="" thirdSpell="" fourthSpell="" spamMin="300" spamMax="500"/>
                        <Setting index="1" hpFrom="0" hpTo="0" danger="0" onlyIfTrapped="no" mustAttackMe="no" action="Attack" avoidance="No Avoidance" desiredStance="No Movement" distance="3" attackMode="No Change" firstSpell="" secondSpell="" thirdSpell="" fourthSpell="" spamMin="300" spamMax="500"/>
                        <Setting index="2" hpFrom="0" hpTo="0" danger="0" onlyIfTrapped="no" mustAttackMe="no" action="Attack" avoidance="No Avoidance" desiredStance="No Movement" distance="3" attackMode="No Change" firstSpell="" secondSpell="" thirdSpell="" fourthSpell="" spamMin="300" spamMax="500"/>
                        <Setting index="3" hpFrom="0" hpTo="0" danger="0" onlyIfTrapped="no" mustAttackMe="no" action="Attack" avoidance="No Avoidance" desiredStance="No Movement" distance="3" attackMode="No Change" firstSpell="" secondSpell="" thirdSpell="" fourthSpell="" spamMin="300" spamMax="500"/>
                    </FightingSettings>
                </Creature>
            </Creatures>
        </TargetingProfile>
    </Targeting>
    <OtherBots>
        <HealingPaths/>
        <TargetingPaths/>
    </OtherBots>
</WindbotSettings>
