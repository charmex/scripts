<?xml version="1.0" encoding="UTF-8"?>
<WindbotSettings>
    <Healer>
        <SpellHealer enabled="yes">
            <HealRule name="exura ico" spell="Wound Cleansing" condition="Health Percent below" conditionMin="73" conditionMax="77" extraCondition="No Extra Condition" extraConditionMin="0" extraConditionMax="0" enabled="yes" spamMin="200" spamMax="400" triggerKey="&lt;no key&gt;" dontOverrideActions="no"/>
        </SpellHealer>
        <PotionHealer enabled="yes">
            <HealRule name="hp" spell="Strong Health Potion" condition="Health Percent below" conditionMin="38" conditionMax="40" extraCondition="No Extra Condition" extraConditionMin="0" extraConditionMax="0" enabled="yes" spamMin="200" spamMax="400" triggerKey="&lt;no key&gt;" dontOverrideActions="no"/>
            <HealRule name="mana potion" spell="Mana Potion" condition="Mana Percent below" conditionMin="38" conditionMax="40" extraCondition="No Extra Condition" extraConditionMin="0" extraConditionMax="0" enabled="yes" spamMin="200" spamMax="400" triggerKey="&lt;no key&gt;" dontOverrideActions="no"/>
        </PotionHealer>
        <ConditionHealer enabled="yes"/>
        <ManaTrainer manaTrainCondition="Mana Percent above" manaTrainMin="99" manaTrainMax="99" enabled="yes">
            <HealRule name="NewHealRule" spell="Wound Cleansing" extraCondition="No Extra Condition" extraConditionMin="0" extraConditionMax="0" enabled="yes" spamMin="200" spamMax="500" triggerKey="&lt;no key&gt;" dontOverrideActions="no"/>
        </ManaTrainer>
    </Healer>
    <Scripter>
        <HotkeyScripts>
            <HotkeyScript name="PauseHotkey" script="if not $cavebot or not $targeting then&#13;&#10;    listas('Enabling Cavebot and Targeting')&#13;&#10;    setcavebot('on')&#13;&#10;    settargeting('on')&#13;&#10;    wait(1000)&#13;&#10;else&#13;&#10;    listas('Disabling Cavebot and Targeting')&#13;&#10;    setcavebot('off')&#13;&#10;    settargeting('off')&#13;&#10;    stopattack()&#13;&#10;    wait(1000)&#13;&#10;end" triggerKey="Pause" hotkeyTriggerMode="0"/>
            <HotkeyScript name="Showbot" script="showbot()&#10;wait(2000)" triggerKey="Shift + F11" hotkeyTriggerMode="0"/>
        </HotkeyScripts>
        <PersistentScripts>
            <PersistentScript name="SetupScript_ib" script="-- Setup&#10;&#10;-----------------------------------------------------------&#10;&#10;Exori = false -- use safe exori??&#10;Haste = false -- use haste on resp?&#10;World = false  -- //TRUE = WORLD PVP /\ FALSE = WORLD NON-PVP\\&#10;AutoMount = false -- Use Mount&#10;Printdeath = false-- Screenshot if die?&#10;Printup = false -- Screenshot if up?&#10;Reconect = false -- Reconect? &#10;NoKs = false&#10;AlertMas = false&#10;AntiTrap = true&#10;MovePots = true&#10;DropVials = true&#10;-----------------------------------------------------------&#10;Soft = false -- Only Use No Refill &amp; Change boot type in Action [Soft]--&#10;-----------------------------------------------------------                      &#10;HuntFirstGround = true &#10;-----------------------------------------------------------&#10;HuntPlusOne = true -- 30+ This one [Has to be enabled] for the following --&#10;GateTower = true -- 30+&#10;SkinnyTower = true -- No Requirements --&#10;HuntSecondGrounds = true -- 30+ --&#10;BigTower = true -- 35+&#10;DragonTower = true -- 40+&#10;HuntDragons = true -- 50+&#10;QuestArea = true -- 30+&#10;QuestRoom = false -- 80+ recommended &#10;ThirdDragon = true -- 50+ recommended&#10;-----------------------------------------------------------&#10;Cyclops = true -- 30+&#10;-----------------------------------------------------------&#10;&#10;Mainbp = &quot;brown backpack&quot;&#10;GoldBp = &quot;yellow backpack&quot;&#10;LootBp = &quot;golden backpack&quot;&#10;SupplyBp = &quot;purple backpack&quot;&#10;&#10;MainDpBp = &quot;fur backpack&quot;&#10;StackableDpBp = &quot;camouflage backpack&quot; -- BP de Itens Agrupáveis.&#10;LootDpBp = &quot;green backpack&quot; -- BP de Itens não Agrupáveis.&#10;&#10;-----------------------------------------------------------&#10;&#10;Pot_Id = 268&#10;MPname = &quot;mana potion&quot;&#10;MPprice = 50&#10;MPtobuy = 100 -- Quantos Mana Potions Comprar?&#10;&#10;HPname = &quot;Strong Health Potion&quot;&#10;HPtobuy = 30 -- Quantos GHP Comprar?&#10;HPprice = 100&#10;&#10;-----------------------------------------------------------&#10;&#10;Captoback = 120 -- Quanto de CAP para Refillar?&#10;MPtoback = 50 -- Quanto de MPname para Refillar?&#10;HPtoback = 10 -- Quanto de GHname para Refillar?" enabled="yes"/>
            <PersistentScript name="Print On Death" script="auto(800, 1000)&#10;--############[SS on Death]############--&#10;--#####################################--&#10;if ($hppc &lt;= 10) &#10;then&#10;    screenshot($name..&quot; Morto no Level &quot;..$level)&#10;    wait(1000, 1500)&#10;end" enabled="no"/>
            <PersistentScript name="Print On Up" script="auto(800, 1000)&#10;--############[SS on UP]############--&#10;--#####################################--&#10; &#10;foreach newmessage serverlog_lines &quot;Server Log&quot; do &#10;    if (serverlog_lines.text:find(&quot;You advanced&quot;)) then &#10;         screenshot(&quot;[..PRINT..] &quot;..$name..&quot; &quot;..string.gsub(currentdate(), &quot;/&quot;, &quot;_&quot;)..&quot; &quot;..string.gsub(currenttime(), &quot;:&quot;, &quot;.&quot;))&#10;wait(30000)&#10;    end &#10;end" enabled="no"/>
            <PersistentScript name="Check" script="auto(10, 20)&#10;--############[Check]############--&#10;--###############################--&#10;&#10;if AutoMount == true then&#10;    setsetting(&quot;Cavebot/AutoMount&quot;, &quot;yes&quot;)&#10;    wait(5000)&#10;else&#10;    setsetting(&quot;Cavebot/AutoMount&quot;, &quot;no&quot;)&#10;    wait(5000)&#10;end&#10;&#10;if Printdeath == true then&#10;    setsetting(&quot;Persistent/Scripts/Print On Death/Enabled&quot;, &quot;yes&quot;)&#10;    wait(5000)&#10;else&#10;    setsetting(&quot;Persistent/Scripts/Print On Death/Enabled&quot;, &quot;no&quot;)&#10;    wait(5000)&#10;end&#10;&#10;if Printup == true then&#10;    setsetting(&quot;Persistent/Scripts/Print On Up/Enabled&quot;, &quot;yes&quot;)&#10;    wait(5000)&#10;else&#10;    setsetting(&quot;Persistent/Scripts/Print On Up/Enabled&quot;, &quot;no&quot;)&#10;    wait(5000)&#10;end&#10;&#10;if Reconect == true then&#10;    setsetting(&quot;Persistent/Scripts/Reconect/Enabled&quot;, &quot;yes&quot;)&#10;    wait(5000)&#10;else&#10;    setsetting(&quot;Persistent/Scripts/Reconect/Enabled&quot;, &quot;no&quot;)&#10;    wait(5000)&#10;end&#10;&#10;if Exori == true then&#10;       setsetting(&quot;Persistent/Scripts/ExoriCheck/Enabled&quot;, &quot;yes&quot;)&#10;    wait(5000)&#10;else&#10;       setsetting(&quot;Persistent/Scripts/ExoriCheck/Enabled&quot;, &quot;no&quot;)&#10;    wait(5000)&#10;end&#10;&#10;if Haste == true then&#10;       setsetting(&quot;Persistent/Scripts/Haste/Enabled&quot;, &quot;yes&quot;)&#10;    wait(5000)&#10;else&#10;       setsetting(&quot;Persistent/Scripts/Haste/Enabled&quot;, &quot;no&quot;)&#10;    wait(5000)&#10;end&#10;&#10;if Soft == true then&#10;       setsetting(&quot;Persistent/Scripts/Soft/Enabled&quot;, &quot;yes&quot;)&#10;    wait(5000)&#10;else&#10;       setsetting(&quot;Persistent/Scripts/Soft/Enabled&quot;, &quot;no&quot;)&#10;    wait(5000)&#10;end&#10;&#10;if NoKs == true then&#10;    setsetting(&quot;Persistent/Scripts/NoKs/Enabled&quot;, &quot;yes&quot;)&#10;    wait(5000)&#10;else&#10;    setsetting(&quot;Persistent/Scripts/NoKs/Enabled&quot;, &quot;no&quot;)&#10;    wait(5000)&#10;end&#10;&#10;if AlertMas == true then&#10;    setsetting(&quot;Persistent/Scripts/AlertMasRes/Enabled&quot;, &quot;yes&quot;)&#10;    wait(5000)&#10;    setsetting(&quot;Persistent/Scripts/Alarm/Enabled&quot;, &quot;yes&quot;)&#10;    wait(5000)&#10;else&#10;    setsetting(&quot;Persistent/Scripts/AlertMasRes/Enabled&quot;, &quot;no&quot;)&#10;    wait(5000)&#10;    setsetting(&quot;Persistent/Scripts/Alarm/Enabled&quot;, &quot;no&quot;)&#10;    wait(5000)&#10;end&#10;&#10;if MovePots == true then&#10;    setsetting(&quot;Persistent/Scripts/MovePots/Enabled&quot;, &quot;yes&quot;)&#10;    wait(5000)&#10;else&#10;    setsetting(&quot;Persistent/Scripts/MovePots/Enabled&quot;, &quot;no&quot;)&#10;    wait(5000)&#10;end&#10;&#10;if AntiTrap == true then&#10;    setsetting(&quot;Persistent/Scripts/AntiTrap/Enabled&quot;, &quot;yes&quot;)&#10;    wait(5000)&#10;else&#10;    setsetting(&quot;Persistent/Scripts/AntiTrap/Enabled&quot;, &quot;no&quot;)&#10;    wait(5000)&#10;end&#10;&#10;if World == true then&#10;    setsetting(&quot;Cavebot/WalkThroughPlayers&quot;, &quot;no&quot;)&#10;    wait(5000)&#10;else&#10;       setsetting(&quot;Cavebot/WalkThroughPlayers&quot;, &quot;yes&quot;)&#10;    wait(5000)&#10;end&#10;&#10;if DropVials == true then&#10;    setsetting(&quot;Persistent/Scripts/Vial/Enabled&quot;, &quot;yes&quot;)&#10;    wait(5000)&#10;else&#10;    setsetting(&quot;Persistent/Scripts/Vial/Enabled&quot;, &quot;no&quot;)&#10;    wait(5000)&#10;end" enabled="yes"/>
            <PersistentScript name="Haste" script="auto(800, 1000)&#10;--###############[HASTE]###############--&#10;--#####################################--&#10;if not $hasted and not $pzone and $standtime &lt; 2000 and cancastspell(&quot;utani gran hur&quot;) then&#10;cast(&quot;utani hur&quot;)&#10;end" enabled="no"/>
            <PersistentScript name="ExoriCheck" script="auto(800, 1000)&#10;local monsters = {&quot;Firestarter&quot;}&#10;if PvP == true then&#10;    if $attacked.id &gt; 0 and paroundfloor(5, 15) == 0 and maround_ib(1, unpack(monsters)) &gt;= 3 and cancastspell(&quot;exori gran&quot;) then cast(&quot;exori gran&quot;) end&#10;else&#10;    if $attacked.id &gt; 0 and maround_ib(1, unpack(monsters)) &gt;= 3 and cancastspell(&quot;exori gran&quot;) then cast(&quot;exori gran&quot;) end&#10;end" enabled="no"/>
            <PersistentScript name="Vial" script="auto(800, 1000)&#10;if (itemcount(285, 'all') + itemcount(284, 'all') + itemcount(283, 'all') &gt; 15 and maround_ib(5) == 0 and $cap &lt;  300 and not ($lootbodies&gt;0)) then&#10;            local FLASKS_THROWN = false&#10;           &#10;            for FLASK_ID = 285, 283, -1 do&#10;                    if (itemcount(FLASK_ID, 'all') &gt; 0) then&#10;                            pausewalking(10000) moveitems(FLASK_ID, [[ground]], [[all]], 100) wait(1000, 1500)&#10;                            FLASKS_THROWN = true&#10;                    end&#10;            end&#10;           &#10;            if (FLASKS_THROWN) then&#10;                    pausewalking(0)&#10;            end&#10;    end" enabled="yes"/>
            <PersistentScript name="AlertMasRes" script="auto(800, 1000)&#10;--#############[Mas_Res]############--&#10;--##################################--&#10; &#10;foreach message msgs &quot;Local Chat&quot; &#10;do &#10;    if msgs.text:find(&quot;exura gran mas res&quot;) &#10;    then &#10;    playsound(&quot;alert.wav&quot;)    &#10;    end &#10;end" enabled="no"/>
            <PersistentScript name="AntiTrap" script="auto(800, 1000)&#10;--############[Safe Trap]###########--&#10;--##################################--&#10;if maround_ib(7) &gt; 0 and $pzone == false and ((maround_ib(1) == 0 and $attacked.id &gt; 0 and $standtime &gt;= 10000) or $standtime &gt;= 120000) then&#10;    local rand = math.random(1,8)&#10;        if (rand == 1) then move('w')&#10;            elseif (rand == 2) then move('e')&#10;            elseif (rand == 3) then move('n')&#10;            elseif (rand == 4) then move('s')&#10;            elseif (rand == 5) then move('nw')&#10;            elseif (rand == 6) then move('ne')&#10;            elseif (rand == 7) then move('sw')&#10;            elseif (rand == 8) then move('se')&#10;        end&#10;    wait(1000)&#10;end" enabled="yes"/>
            <PersistentScript name="Soft" script="auto(800, 1000)&#10;local config = {&#10;    boots = 'boots of haste',   -- normal boots name or id&#10;    type = $mppc,        -- mppc, hppc, mp, or hp&#10;    equip = {10, 97},   -- value to equip soft boots&#10;    unequip = {98, 100},    -- value to unequip soft boots&#10;    backpack = &quot;All&quot;,   -- backpack to put soft, or &quot;All&quot; to put on any backpack&#10;    delay = {500, 750}, -- wait delay after each drag-drop&#10;}&#10;&#10;local boot, e, u = itemid(config.boots), math.random(config.equip[1], config.equip[2]), math.random(config.unequip[1], config.unequip[2])&#10;local function setbot(onoff)&#10;    setcavebot(onoff)&#10;    settargeting(onoff)&#10;    setlooting(onoff)&#10;end&#10;if $feet.id == 3549 and ($pzone or config.type &gt;= u) then&#10;    if itemcount(boot, 'all') &gt; 0 then&#10;        setbot('off')&#10;        moveitems(boot, &quot;Boots&quot;, (config.backpack or 'All'), 1)&#10;        wait(config.delay[1], config.delay[2])&#10;        setbot('on')&#10;    else&#10;        setbot('off')&#10;                moveitems($feet.id, (config.backpack or 'All'), &quot;Boots&quot;, 1)&#10;        wait(config.delay[1], config.delay[2])&#10;        setbot('on')&#10;        end&#10;elseif $feet.id == 6530 or $feet.id == 0 then&#10;        if config.type &lt;= e and (not $pzone) and itemcount(6529, 'all') &gt; 0 then&#10;        setbot('off')&#10;                moveitems(6529, &quot;Boots&quot;, (config.backpack or 'All'), 1)&#10;        wait(config.delay[1], config.delay[2])&#10;        setbot('on')&#10;        elseif itemcount(boot, 'all') &gt; 0 then&#10;        setbot('off')&#10;                moveitems(boot, &quot;Boots&quot;, (config.backpack or &quot;All&quot;), 1)&#10;        wait(config.delay[1], config.delay[2])&#10;        setbot('on')&#10;        elseif $feet.id &gt; 0 then&#10;        setbot('off')&#10;                moveitems($feet.id, (config.backpack or &quot;All&quot;), &quot;Boots&quot;, 1)&#10;        wait(config.delay[1], config.delay[2])&#10;        setbot('on')&#10;        end&#10;elseif $feet.id == boot and config.type &lt;= e and (not $pzone) and itemcount(6529, 'all') &gt; 0 then&#10;    setbot('off')&#10;        moveitems(6529, &quot;Boots&quot;, (config.backpack or &quot;All&quot;), 1)&#10;    wait(config.delay[1], config.delay[2])&#10;    setbot('on')&#10;end" enabled="no"/>
            <PersistentScript name="Reconect" script="auto(150000, 160000)&#10;--#############[Reconnect]############--&#10;--####################################--&#10;--[[&#10;    Name: Auto Safe Reconnect by BlakW &#10;    Version: v4.0.0&#10;]]--&#10;    &#10;--Reopen backpacks:&#10;local reopenBps = (&quot;yes&quot;)&#10;&#10;--Main Backpack Name:&#10;local mainBackpackName = (&quot;Red Backpack&quot;)&#10;--Supply Backpack Name:&#10;local supBackpackName = (&quot;Crown Backpack&quot;)&#10;--Loot Backpack Name:&#10;local lootBackpackName = (&quot;Brocade Backpack&quot;)&#10;&#10;--Gold Backpack Name:&#10;local goldBackpackName = (&quot;Beach Backpack&quot;)&#10;&#10;--Temple NPCs:&#10;local templeNpcNames = {&quot;Alia&quot;, &quot;Tyrias&quot;, &quot;Brewster&quot;, &quot;Rahkem&quot;, &quot;Kasmir&quot;, &quot;Amanda&quot;, &quot;Isimov&quot;, &quot;Yberius&quot;, &quot;Maealil&quot;, &quot;Quentin&quot;, &quot;Lynda&quot;, &quot;Lorietta&quot;, &quot;Prezil&quot;, &quot;Kjesse&quot;, &quot;Asralius&quot;}&#10;&#10;--Temple Position Range (sqm):&#10;local templePositionRange = 7&#10;&#10;if ($connected == false)&#10;then&#10;        reconnect()&#10;        wait(600, 1800)&#10;        pausewalking(1000)&#10;&#10;        if (($pzone == true) and (maround_ib(10, false, unpack(templeNpcNames)) &gt;= 1) &#10;or ($pzone == true) and (islocationxyz_ib(32787, 31276, 7, templePositionRange)) &#10;or ($pzone == true) and (islocationxyz_ib(32595, 32744, 6, templePositionRange)) &#10;or ($pzone == true) and (islocationxyz_ib(33213, 32454, 1, templePositionRange)) &#10;or ($pzone == true) and (islocationxyz_ib(32213, 31133, 7, templePositionRange)) &#10;or ($pzone == true) and (islocationxyz_ib(33004, 31490, 11, templePositionRange)) &#10;or ($pzone == true) and (islocationxyz_ib(32649, 31925, 11, templePositionRange)) &#10;or ($pzone == true) and (islocationxyz_ib(33217, 31814, 8, templePositionRange)) &#10;or ($pzone == true) and (islocationxyz_ib(32317, 32826, 7, templePositionRange)) &#10;or ($pzone == true) and (islocationxyz_ib(33194, 32853, 8, templePositionRange)) &#10;or  ($pzone == true) and (islocationxyz_ib(32369, 32241, 7, templePositionRange)) &#10;or  ($pzone == true) and (islocationxyz_ib(32360, 31782, 7, templePositionRange)) &#10;or  ($pzone == true) and (islocationxyz_ib(32957, 32076, 7, templePositionRange)) &#10;or  ($pzone == true) and (islocationxyz_ib(32732, 31634, 7, templePositionRange))  &#10;or ($pzone == true) and (islocationxyz_ib(33447, 31323, 9,  templePositionRange)))&#10;        then&#10;        wait(1500)&#10;        closeclient()&#10;        wait(1500)&#10;        messagebox(&quot;Reconnect Message: Tibia client has been closed because character was inside a temple. This is to protect your character from being killed by other players.&quot;)&#10;    end  &#10;&#10;    wait(2500)&#10;    if ((reopenBps == (&quot;yes&quot;)) and (windowcount_ib() == 0) and (maround_ib(7, false) == 0) and ($lootbodies == 0))&#10;    then&#10;        closewindows()&#10;    wait(700, 1000)&#10;        while ((windowcount_ib(mainBackpackName) == 0))&#10;        do&#10;            openitem(mainBackpackName, &quot;back&quot;)&#10;            wait(2000)&#10;            resizewindows()&#10;        end&#10;        wait(500, 1000)&#10;        while ((windowcount_ib(supBackpackName) == 0) and (windowcount_ib(mainBackpackName) == 1))&#10;        do&#10;            openitem(supBackpackName, mainBackpackName, true)&#10;            wait(2000)&#10;            resizewindows()&#10;        end&#10;        wait(500, 1000)&#10;        while ((windowcount_ib(lootBackpackName) == 0) and (windowcount_ib(mainBackpackName) == 1))&#10;        do&#10;            openitem(lootBackpackName, mainBackpackName, true)&#10;            wait(2000)&#10;            resizewindows()&#10;        end&#10;        wait(500, 1000)&#10;        while ((windowcount_ib(goldBackpackName) == 0) and (windowcount_ib(mainBackpackName) == 1))&#10;        do&#10;            openitem(goldBackpackName, mainBackpackName, true)&#10;            wait(2000)&#10;            resizewindows()&#10;        end&#10;        wait(2000, 3500)&#10;    end&#10;    setcavebot(&quot;yes&quot;)&#10;    wait(1000, 2500)&#10;    setlooting(&quot;yes&quot;)&#10;    wait(1000, 2500)&#10;    settargeting(&quot;yes&quot;)&#10;    wait(2000, 3500)&#10;end" enabled="no"/>
            <PersistentScript name="MovePots" script="auto(800, 1000)&#10;while itemcount(MPname, Mainbp) &gt; 0 do&#10;moveitems(MPname, SupplyBp, Mainbp, 100) wait(400, 800)&#10;end&#10;&#10;while itemcount(HPname, Mainbp) &gt; 0 do&#10;moveitems(HPname, SupplyBp, Mainbp, 100) wait(400, 800)&#10;end" enabled="yes"/>
            <PersistentScript name="Alarm" script="auto(800, 1000)&#10; &#10;foreach message msgs &quot;Local Chat&quot; &#10;do &#10;    if msgs.text:find(&quot;exura gran mas res&quot;) &#10;    then &#10;    playsound(&quot;alert.wav&quot;)    &#10;    wait(1000)&#10;    end &#10;end" enabled="no"/>
            <PersistentScript name="NoKs" script="auto(400, 1000)&#10;local r = 7 -- Range.  &#10;local safelist = {'Grilhin'} -- The bot WILL KS this players. Add more to this if you want.  &#10;table.insert(safelist, $name) -- Do not edit it.  &#10;local ppos = {}  &#10;  &#10;foreach creature pinfo &quot;psf&quot; do  &#10;    local ab=a-1  &#10;    if not table.find(safelist, pinfo.name) then  &#10;        table.insert(ppos, {x = pinfo.posx, y = pinfo.posy})  &#10;    end  &#10;end  &#10;&#10;foreach creature cinfo &quot;msf&quot; do  &#10;    local ignore = false  &#10;    local bb=b-1  &#10;    if cinfo.id ~= $attacked.id then  &#10;        for i = 1, #ppos do  &#10;            local difx, dify = ppos[i].x - cinfo.posx, ppos[i].y - cinfo.posy  &#10;            if math.abs(difx) &lt;= r and math.abs(dify) &lt;= r then  &#10;                ignore = true  &#10;                if cinfo.ignored == false then  &#10;                    ignorecreature(cinfo.id,true)  &#10;                    stopattack()  &#10;                end  &#10;                break  &#10;            end  &#10;        end  &#10;    end  &#10;    if ignore == false and cinfo.ignored == true then  &#10;        ignorecreature(cinfo.id, true)  &#10;        stopattack()  &#10;    end  &#10;end  &#10;if $attacked.id ~= 0 then  &#10;    if $attacked.ignored then  &#10;        stopattack()  &#10;    end  &#10;end" enabled="no"/>
            <PersistentScript name="Action2" script="auto(800, 1000)&#10;" enabled="no"/>
        </PersistentScripts>
    </Scripter>
    <HUDs>
        <HUDScripts>
            <HUDScript name="MonitorMyHunting" script="init start&#13;&#10;&#9;--&#13;&#10;&#9;--                        88                                                                  &#13;&#10;&#9;--                        &quot;&quot;                                                ,d                &#13;&#10;&#9;--                                                                          88                &#13;&#10;&#9;--             ,adPPYba,  88  8b,dPPYba,  88,dPYba,,adPYba,   ,adPPYYba,  MM88MMM  ,adPPYba,  &#13;&#10;&#9;--             I8[    &quot;&quot;  88  88P'   &quot;Y8  88P'   &quot;88&quot;    &quot;8a  &quot;&quot;     `Y8    88    a8P_____88  &#13;&#10;&#9;--              `&quot;Y8ba,   88  88          88      88      88  ,adPPPPP88    88    8PP&quot;&quot;&quot;&quot;&quot;&quot;&quot;  &#13;&#10;&#9;--             aa    ]8I  88  88          88      88      88  88,    ,88    88,   &quot;8b,   ,aa  &#13;&#10;&#9;--   Author:   `&quot;YbbdP&quot;'  88  88          88      88      88  `&quot;8bbdP&quot;Y8    &quot;Y888  `&quot;Ybbd8&quot;'  &#13;&#10;&#9;--   &#13;&#10;&#9;--   Monitor My Hunting!&#13;&#10;&#9;--&#13;&#10;&#9;--   Version: 1.0&#13;&#10;&#9;--   Created: 29.12.2013&#13;&#10;&#9;--   Last update: 29.12.2013&#13;&#10;&#9;--&#13;&#10;&#13;&#10;&#9;local MMH = {&#13;&#10;&#9;&#9;SHOW_ALL_ITEMS = false,&#13;&#10;&#9;&#9;SHOW_ALL_SUPPLIES = false,&#13;&#10;&#9;}&#13;&#10;&#13;&#10;&#9;-- [[ Do not change anything below this line. ]] --&#13;&#10;&#13;&#10;&#9;-- [[ COLORS ]] --&#13;&#10;&#9;MMH.COLORS = {}&#13;&#10;&#9;MMH.COLORS.FONT_COLOR = color(255, 255, 255, 0)&#13;&#10;&#9;MMH.COLORS.SECTION_HEADER_BACKGROUND = {0.0, color(36, 68, 105, 20), 0.23, color(39, 73, 114, 20), 0.76, color(21, 39, 60, 20)}&#13;&#10;&#9;MMH.COLORS.ENTRY_NAME_BACKGROUND = {0.0, color(75, 75, 75, 20), 0.23, color(45, 45, 45, 20), 0.76, color(19, 19, 19, 20)}&#13;&#10;&#9;MMH.COLORS.ENTRY_VALUE_BACKGROUND = {0.0, color(145, 95, 0, 20), 0.23, color(158, 104, 0, 20), 0.76, color(84, 55, 0, 20)}&#13;&#10;&#9;MMH.COLORS.RESULT_POSITIVE_BACKGROUND = {0.0, color(65, 96, 12, 20), 0.23, color(67, 99, 13, 20), 0.76, color(36, 52, 6, 20)}&#13;&#10;&#9;MMH.COLORS.RESULT_NEGATIVE_BACKGROUND = {0.0, color(90, 12, 15, 20), 0.23, color(98, 13, 17, 20), 0.76, color(52, 6, 9, 20)}&#13;&#10;&#9;MMH.COLORS.RESET_BUTTON_BACKGROUND = MMH.COLORS.RESULT_POSITIVE_BACKGROUND&#13;&#10;&#13;&#10;&#9;-- [[ ELEMENTS ]] --&#13;&#10;&#9;MMH.ELEMENTS = {}&#13;&#10;&#9;MMH.ELEMENTS.RESET_BUTTON = -1&#13;&#10;&#9;MMH.ELEMENTS.SWITCH_ITEMS_LOOTED = -1&#13;&#10;&#9;MMH.ELEMENTS.SWITCH_SUPPLIES_USED = -1&#13;&#10;&#13;&#10;&#9;-- [[ SECTION STATES ]] --&#13;&#10;&#9;MMH.SECTIONS = {}&#13;&#10;&#9;MMH.SECTIONS.ITEMS_LOOTED = true&#13;&#10;&#9;MMH.SECTIONS.SUPPLIES_USED = true&#13;&#10;&#13;&#10;&#9;-- [[ OTHERS ]] --&#9;&#13;&#10;&#9;filterinput(false, true, false, false)&#13;&#10;&#13;&#10;&#9;local MOVING, TEMP, MOVED = false, {0, 0}, {0, 0}&#13;&#10;&#13;&#10;&#9;function inputevents(e)&#13;&#10;&#9;&#9;if (e.type == IEVENT_LMOUSEDOWN) then&#13;&#10;&#9;&#9;&#9;if (e.elementid == MMH.ELEMENTS.RESET_BUTTON) then&#13;&#10;&#9;&#9;&#9;&#9;resetcharactertime()&#13;&#10;&#9;&#9;&#9;&#9;resetlootcounter()&#13;&#10;&#9;&#9;&#9;&#9;resetexpcounter()&#13;&#10;&#9;&#9;&#9;elseif (e.elementid == MMH.ELEMENTS.SWITCH_ITEMS_LOOTED) then&#13;&#10;&#9;&#9;&#9;&#9;MMH.SECTIONS.ITEMS_LOOTED = not MMH.SECTIONS.ITEMS_LOOTED&#13;&#10;&#9;&#9;&#9;elseif (e.elementid == MMH.ELEMENTS.SWITCH_SUPPLIES_USED) then&#13;&#10;&#9;&#9;&#9;&#9;MMH.SECTIONS.SUPPLIES_USED = not MMH.SECTIONS.SUPPLIES_USED&#13;&#10;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;end&#13;&#10;&#13;&#10;&#9;&#9;if (e.type == IEVENT_MMOUSEDOWN) then&#13;&#10;&#9;&#9;&#9;MOVING, TEMP = true, {$cursor.x - MOVED[1], $cursor.y - MOVED[2]}&#13;&#10;&#9;&#9;end&#13;&#10;&#13;&#10;&#9;&#9;if (e.type == IEVENT_MMOUSEUP) then&#13;&#10;&#9;&#9;&#9;MOVING = false&#13;&#10;&#9;&#9;end&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;setmaskcolorxp(0)&#13;&#10;init end&#13;&#10;&#13;&#10;if (MOVING) then&#13;&#10;    auto(10)&#13;&#10;    MOVED = {$cursor.x - TEMP[1], $cursor.y - TEMP[2]}&#13;&#10;end&#13;&#10;&#13;&#10;setposition($clientwin.right - 424 + MOVED[1], $worldwin.top + MOVED[2])&#13;&#10;setfontstyle('Tahoma', 8, 75, MMH.COLORS.FONT_COLOR, 1, color(0, 0, 0, 20))&#13;&#10;&#13;&#10;local ROW_QUANTITY, STRING_WIDTH, STRING_HEIGHT = 0, measurestring('TEMP')&#13;&#10;local ITEMS_LOOTED_WORTH, ITEM_LOOTED_QUANTITY, ITEM_LOOTED_WORTH = 0, 0, 0&#13;&#10;local SUPPLIES_USED_WORTH, SUPPLY_USED_QUANTITY, SUPPLY_USED_WORTH = 0, 0, 0&#13;&#10;&#13;&#10;setfillstyle('gradient', 'linear', 2, 0, 0, 0, 21)&#13;&#10;addgradcolors(unpack(MMH.COLORS.ENTRY_NAME_BACKGROUND))&#13;&#10;drawroundrect(0, 0, 240, 20, 2, 2)&#13;&#10;drawtext('Monitor My Hunting v1.0', 6, 20 / 2 - STRING_HEIGHT * 0.5)&#13;&#10;&#13;&#10;setfillstyle('gradient', 'linear', 2, 0, 0, 0, 21)&#13;&#10;addgradcolors(unpack(MMH.COLORS.RESET_BUTTON_BACKGROUND))&#13;&#10;MMH.ELEMENTS.RESET_BUTTON = drawroundrect(196, 0, 44, 20, 2, 2)&#13;&#10;drawtext('RESET', 202, 20 / 2 - STRING_HEIGHT * 0.5)&#13;&#10;&#13;&#10;setfontsize(7)&#13;&#10;&#13;&#10;STRING_WIDTH, STRING_HEIGHT = measurestring('TEMP')&#13;&#10;&#13;&#10;setfillstyle('gradient', 'linear', 2, 0, 0, 0, 16)&#13;&#10;addgradcolors(unpack(MMH.COLORS.ENTRY_NAME_BACKGROUND))&#13;&#10;drawroundrect(0, 23, 240, 15, 2, 2)&#13;&#10;drawtext('Looting Accuracy', 6, 23 + 15 / 2 - STRING_HEIGHT * 0.5 + 1)&#13;&#10;&#13;&#10;setfillstyle('gradient', 'linear', 2, 0, 0, 0, 16)&#13;&#10;addgradcolors(unpack(MMH.COLORS.ENTRY_VALUE_BACKGROUND))&#13;&#10;drawroundrect(130, 23, 110, 15, 2, 2)&#13;&#10;drawtext(string.format('%.2f', $lootaccuracy) .. '%', 136, 23 + 15 / 2 - STRING_HEIGHT * 0.5 + 1)&#13;&#10;&#13;&#10;setfontsize(8)&#13;&#10;&#13;&#10;STRING_WIDTH, STRING_HEIGHT = measurestring('TEMP')&#13;&#10;&#13;&#10;setfillstyle('gradient', 'linear', 2, 0, 0, 0, 21)&#13;&#10;addgradcolors(unpack(MMH.COLORS.SECTION_HEADER_BACKGROUND))&#13;&#10;drawroundrect(0, 41, 240, 20, 2, 2)&#13;&#10;drawtext('ITEMS LOOTED', 6, 41 + 20 / 2 - STRING_HEIGHT * 0.5)&#13;&#10;&#13;&#10;setfillstyle('gradient', 'linear', 2, 0, 0, 0, 21)&#13;&#10;if (MMH.SECTIONS.ITEMS_LOOTED) then&#13;&#10;&#9;addgradcolors(unpack(MMH.COLORS.RESULT_POSITIVE_BACKGROUND))&#13;&#10;else&#13;&#10;&#9;addgradcolors(unpack(MMH.COLORS.RESULT_NEGATIVE_BACKGROUND))&#13;&#10;end&#13;&#10;MMH.ELEMENTS.SWITCH_ITEMS_LOOTED = drawroundrect(220, 41, 20, 20, 2, 2)&#13;&#10;drawtext('X', 228, 41 + 20 / 2 - STRING_HEIGHT * 0.5)&#13;&#10;&#13;&#10;setfontsize(7)&#13;&#10;&#13;&#10;STRING_WIDTH, STRING_HEIGHT = measurestring('TEMP')&#13;&#10;&#13;&#10;foreach lootingitem ItemEntry do&#13;&#10;&#9;if (MMH.SHOW_ALL_ITEMS or ItemEntry.amountlooted &gt; 0) then&#13;&#10;&#9;&#9;ITEM_LOOTED_QUANTITY = ItemEntry.amountlooted&#13;&#10;&#9;&#9;ITEM_LOOTED_WORTH = ItemEntry.sellprice * ITEM_LOOTED_QUANTITY&#13;&#10;&#13;&#10;&#9;&#9;if (MMH.SECTIONS.ITEMS_LOOTED) then&#13;&#10;&#9;&#9;&#9;setfillstyle('gradient', 'linear', 2, 0, 0, 0, 16)&#13;&#10;&#9;&#9;&#9;addgradcolors(unpack(MMH.COLORS.ENTRY_NAME_BACKGROUND))&#13;&#10;&#9;&#9;&#9;drawroundrect(0, 64 + ROW_QUANTITY * 18, 240, 15, 2, 2)&#13;&#10;&#9;&#9;&#13;&#10;&#9;&#9;&#9;setcompositionmode(CompositionMode_SourceOver)&#13;&#10;&#9;&#9;&#9;drawitem(ItemEntry.id, 6, 64 + ROW_QUANTITY * 18, 50, 100)&#13;&#10;&#9;&#9;&#9;setcompositionmode(CompositionMode_Automatic)&#13;&#10;&#13;&#10;&#9;&#9;&#9;drawtext(((#ItemEntry.name &gt; 16 and string.match(string.sub(ItemEntry.name, 1, 16), '(.-)%s?$') .. '...') or ItemEntry.name):capitalizeall(), 28, 64 + ROW_QUANTITY * 18 + 15 / 2 - STRING_HEIGHT * 0.5)&#13;&#10;&#13;&#10;&#9;&#9;&#9;setfillstyle('gradient', 'linear', 2, 0, 0, 0, 16)&#13;&#10;&#9;&#9;&#9;addgradcolors(unpack(MMH.COLORS.ENTRY_VALUE_BACKGROUND))&#13;&#10;&#9;&#9;&#9;drawroundrect(130, 64 + ROW_QUANTITY * 18, 110, 15, 2, 2)&#13;&#10;&#9;&#9;&#9;drawtext(num(ITEM_LOOTED_QUANTITY) .. ' (' .. math.floor(ITEM_LOOTED_WORTH / 100) / 10 .. 'K)', 136, 64 + ROW_QUANTITY * 18 + 15 / 2 - STRING_HEIGHT * 0.5)&#13;&#10;&#13;&#10;&#9;&#9;&#9;ROW_QUANTITY = ROW_QUANTITY + 1&#13;&#10;&#9;&#9;end&#13;&#10;&#13;&#10;&#9;&#9;ITEMS_LOOTED_WORTH = ITEMS_LOOTED_WORTH + ITEM_LOOTED_WORTH&#13;&#10;&#9;end&#13;&#10;end&#13;&#10;&#13;&#10;setfillstyle('gradient', 'linear', 2, 0, 0, 0, 16)&#13;&#10;addgradcolors(unpack(MMH.COLORS.ENTRY_NAME_BACKGROUND))&#13;&#10;drawroundrect(0, 64 + ROW_QUANTITY * 18, 240, 15, 2, 2)&#13;&#10;drawtext('Total: ' .. num(ITEMS_LOOTED_WORTH) .. ' GPs', 6, 64 + ROW_QUANTITY * 18 + 15 / 2 - STRING_HEIGHT * 0.5)&#13;&#10;&#13;&#10;ROW_QUANTITY = ROW_QUANTITY + 1&#13;&#10;&#13;&#10;setfontsize(8)&#13;&#10;&#13;&#10;STRING_WIDTH, STRING_HEIGHT = measurestring('TEMP')&#13;&#10;&#13;&#10;setfillstyle('gradient', 'linear', 2, 0, 0, 0, 21)&#13;&#10;addgradcolors(unpack(MMH.COLORS.SECTION_HEADER_BACKGROUND))&#13;&#10;drawroundrect(0, 64 + ROW_QUANTITY * 18, 240, 20, 2, 2)&#13;&#10;drawtext('SUPPLIES USED', 6, 64 + ROW_QUANTITY * 18 + 20 / 2 - STRING_HEIGHT * 0.5)&#13;&#10;&#13;&#10;setfillstyle('gradient', 'linear', 2, 0, 0, 0, 21)&#13;&#10;if (MMH.SECTIONS.SUPPLIES_USED) then&#13;&#10;&#9;addgradcolors(unpack(MMH.COLORS.RESULT_POSITIVE_BACKGROUND))&#13;&#10;else&#13;&#10;&#9;addgradcolors(unpack(MMH.COLORS.RESULT_NEGATIVE_BACKGROUND))&#13;&#10;end&#13;&#10;MMH.ELEMENTS.SWITCH_SUPPLIES_USED = drawroundrect(220, 64 + ROW_QUANTITY * 18, 20, 20, 2, 2)&#13;&#10;drawtext('X', 228, 64 + ROW_QUANTITY * 18 + 20 / 2 - STRING_HEIGHT * 0.5)&#13;&#10;&#13;&#10;setfontsize(7)&#13;&#10;&#13;&#10;STRING_WIDTH, STRING_HEIGHT = measurestring('TEMP')&#13;&#10;&#13;&#10;foreach supplyitem ItemEntry do&#13;&#10;&#9;if (MMH.SHOW_ALL_SUPPLIES or ItemEntry.amountused &gt; 0) then&#13;&#10;&#9;&#9;SUPPLY_USED_QUANTITY = ItemEntry.amountused&#13;&#10;&#9;&#9;SUPPLY_USED_WORTH = ItemEntry.buyprice * SUPPLY_USED_QUANTITY&#13;&#10;&#13;&#10;&#9;&#9;if (MMH.SECTIONS.SUPPLIES_USED) then&#13;&#10;&#9;&#9;&#9;setfillstyle('gradient', 'linear', 2, 0, 0, 0, 16)&#13;&#10;&#9;&#9;&#9;addgradcolors(unpack(MMH.COLORS.ENTRY_NAME_BACKGROUND))&#13;&#10;&#9;&#9;&#9;drawroundrect(0, 87 + ROW_QUANTITY * 18, 240, 15, 2, 2)&#13;&#10;&#13;&#10;&#9;&#9;&#9;setcompositionmode(CompositionMode_SourceOver)&#13;&#10;&#9;&#9;&#9;drawitem(ItemEntry.id, 6, 87 + ROW_QUANTITY * 18, 50, 100)&#13;&#10;&#9;&#9;&#9;setcompositionmode(CompositionMode_Automatic)&#13;&#10;&#13;&#10;&#9;&#9;&#9;drawtext(((#ItemEntry.name &gt; 16 and string.match(string.sub(ItemEntry.name, 1, 16), '(.-)%s?$') .. '...') or ItemEntry.name):capitalizeall(), 28, 87 + ROW_QUANTITY * 18 + 15 / 2 - STRING_HEIGHT * 0.5)&#13;&#10;&#13;&#10;&#9;&#9;&#9;setfillstyle('gradient', 'linear', 2, 0, 0, 0, 16)&#13;&#10;&#9;&#9;&#9;addgradcolors(unpack(MMH.COLORS.ENTRY_VALUE_BACKGROUND))&#13;&#10;&#9;&#9;&#9;drawroundrect(130, 87 + ROW_QUANTITY * 18, 110, 15, 2, 2)&#13;&#10;&#9;&#9;&#9;drawtext(num(SUPPLY_USED_QUANTITY) .. ' (' .. math.floor(SUPPLY_USED_WORTH / 100) / 10 .. 'K)', 136, 87 + ROW_QUANTITY * 18 + 15 / 2 - STRING_HEIGHT * 0.5)&#13;&#10;&#13;&#10;&#9;&#9;&#9;ROW_QUANTITY = ROW_QUANTITY + 1&#13;&#10;&#9;&#9;end&#13;&#10;&#13;&#10;&#9;&#9;SUPPLIES_USED_WORTH = SUPPLIES_USED_WORTH + SUPPLY_USED_WORTH&#13;&#10;&#9;end&#13;&#10;end&#13;&#10;&#13;&#10;if (MMH.SECTIONS.SUPPLIES_USED) then&#13;&#10;&#9;setfillstyle('gradient', 'linear', 2, 0, 0, 0, 16)&#13;&#10;&#9;addgradcolors(unpack(MMH.COLORS.ENTRY_NAME_BACKGROUND))&#13;&#10;&#9;drawroundrect(0, 87 + ROW_QUANTITY * 18, 240, 15, 2, 2)&#13;&#10;&#13;&#10;&#9;setcompositionmode(CompositionMode_SourceOver)&#13;&#10;&#9;drawitem(3031, 6, 87 + ROW_QUANTITY * 18, 50, 100)&#13;&#10;&#9;setcompositionmode(CompositionMode_Automatic)&#13;&#10;&#13;&#10;&#9;drawtext('Money Spent', 28, 87 + ROW_QUANTITY * 18 + 15 / 2 - STRING_HEIGHT * 0.5)&#13;&#10;&#13;&#10;&#9;setfillstyle('gradient', 'linear', 2, 0, 0, 0, 16)&#13;&#10;&#9;addgradcolors(unpack(MMH.COLORS.ENTRY_VALUE_BACKGROUND))&#13;&#10;&#9;drawroundrect(130, 87 + ROW_QUANTITY * 18, 110, 15, 2, 2)&#13;&#10;&#9;drawtext(num($moneyspent) .. ' (' .. math.floor($moneyspent / 100) / 10 .. 'K)', 136, 87 + ROW_QUANTITY * 18 + 15 / 2 - STRING_HEIGHT * 0.5)&#13;&#10;&#13;&#10;&#9;ROW_QUANTITY = ROW_QUANTITY + 1&#13;&#10;end&#13;&#10;&#13;&#10;SUPPLIES_USED_WORTH = SUPPLIES_USED_WORTH + $moneyspent&#13;&#10;&#13;&#10;setfillstyle('gradient', 'linear', 2, 0, 0, 0, 16)&#13;&#10;addgradcolors(unpack(MMH.COLORS.ENTRY_NAME_BACKGROUND))&#13;&#10;drawroundrect(0, 87 + ROW_QUANTITY * 18, 240, 15, 2, 2)&#13;&#10;drawtext('Total: ' .. num(SUPPLIES_USED_WORTH) .. ' GPs', 6, 87 + ROW_QUANTITY * 18 + 15 / 2 - STRING_HEIGHT * 0.5)&#13;&#10;&#13;&#10;ROW_QUANTITY = ROW_QUANTITY + 1&#13;&#10;&#13;&#10;setfontsize(8)&#13;&#10;&#13;&#10;STRING_WIDTH, STRING_HEIGHT = measurestring('TEMP')&#13;&#10;&#13;&#10;setfillstyle('gradient', 'linear', 2, 0, 0, 0, 21)&#13;&#10;if (ITEMS_LOOTED_WORTH &gt;= SUPPLIES_USED_WORTH) then&#13;&#10;&#9;addgradcolors(unpack(MMH.COLORS.RESULT_POSITIVE_BACKGROUND))&#13;&#10;else&#13;&#10;&#9;addgradcolors(unpack(MMH.COLORS.RESULT_NEGATIVE_BACKGROUND))&#13;&#10;end&#13;&#10;drawroundrect(0, 87 + ROW_QUANTITY * 18, 240, 20, 2, 2)&#13;&#10;drawtext(((ITEMS_LOOTED_WORTH &gt;= SUPPLIES_USED_WORTH and ('PROFIT: ')) or ('WASTE: ')) .. num(ITEMS_LOOTED_WORTH - SUPPLIES_USED_WORTH) .. ' GPs (' .. math.abs(math.floor(((ITEMS_LOOTED_WORTH - SUPPLIES_USED_WORTH) * 3600) / ($charactertime / 1000) / 100) / 10) .. ' k/h)', 6, 87 + ROW_QUANTITY * 18 + 20 / 2 - STRING_HEIGHT * 0.5)" enabled="yes" refreshRate="100"/>
            <HUDScript name="MonitorMyStats" script="init start&#10;    --&#10;    --              88                                                                  &#10;    --              &quot;&quot;                                                ,d                &#10;    --                                                                88                &#10;    --   ,adPPYba,  88  8b,dPPYba,  88,dPYba,,adPYba,   ,adPPYYba,  MM88MMM  ,adPPYba,  &#10;    --   I8[    &quot;&quot;  88  88P'   &quot;Y8  88P'   &quot;88&quot;    &quot;8a  &quot;&quot;     `Y8    88    a8P_____88  &#10;    --    `&quot;Y8ba,   88  88          88      88      88  ,adPPPPP88    88    8PP&quot;&quot;&quot;&quot;&quot;&quot;&quot;  &#10;    --   aa    ]8I  88  88          88      88      88  88,    ,88    88,   &quot;8b,   ,aa  &#10;    --   `&quot;YbbdP&quot;'  88  88          88      88      88  `&quot;8bbdP&quot;Y8    &quot;Y888  `&quot;Ybbd8&quot;'  &#10;    --&#10;&#10;    --   Name: Monitor My Stats&#10;    --   Last Updated: 19/12/2013&#10;    --   Version: 1.0&#10;&#10;    local MMS = {&#10;        ShowInfo = false,&#10;&#10;        Title = &quot;SCRIPT INFO&quot;,&#10;        Creator = &quot;CREATOR NAME&quot;,&#10;        Info = 'Voc - Script Name',&#10;        Version = '1.0.0'&#10;    }&#10;&#10;    -- [[ Do not change anything below this line. ]] --&#10;&#10;    filterinput(false, true, false, false)&#10;&#10;    local HUD_Sections = {&#10;        {Name = 'OTHERS', State = true, Items = {&#10;                {'Ping', function() return $ping .. ' (avg: ' .. $pingaverage .. ')' end},&#10;                {'Bank Balance', function() return num($balance) end},&#10;            }&#10;        },&#10;&#10;        {Name = 'CHARACTER STATS', State = true, Items = {&#10;                {'Level', function() return $level .. ' (' .. 100 - math.floor(($exp - expatlvl($level)) * 100 / (expatlvl($level + 1) - expatlvl($level))) .. '%)' end},&#10;                {'Experience', function() return num($exp) end},&#10;                {'Magic Level', function() return $mlevel .. ' (' .. 100 - $mlevelpc .. '%)' end},&#10;                {'Weapon Skill', function() local _ = WeaponSkill() return _.skill .. ' (' .. 100 - _.skillpc .. '%)' end},&#10;                {'Shielding', function() return $shielding .. ' (' .. 100 - $shieldingpc .. '%)' end},&#10;                {'Fishing', function() return $fishing .. ' (' .. 100 - $fishingpc .. '%)' end}&#10;            }&#10;        },&#10;&#10;        {Name = 'ENGINE STATES', State = true, Items = {&#10;                {'Spell Healer', function() return getsetting('SpellHealer/Enabled') end, function() return toggle('SpellHealer/Enabled') end},&#10;                {'Potion Healer', function() return getsetting('PotionHealer/Enabled') end, function() return toggle('PotionHealer/Enabled') end},&#10;                {'Condition Healer', function() return getsetting('ConditionHealer/Enabled') end, function() return toggle('ConditionHealer/Enabled') end},&#10;                {'Mana Training', function() return getsetting('ManaTrainer/Enabled') end, function() return toggle('ManaTrainer/Enabled') end},&#10;                {'Cavebot', function() return getsetting('Cavebot/Enabled') end, function() return toggle('Cavebot/Enabled') end},&#10;                {'Looting', function() return getsetting('Looting/Enabled') end, function() return toggle('Looting/Enabled') end},&#10;                {'Targeting', function() return getsetting('Targeting/Enabled') end, function() return toggle('Targeting/Enabled') end}&#10;            }&#10;        },&#10;&#10;        {Name = 'BOTTING STATS', State = true, Items = {&#10;                {'Experience per Hour', function() return num($exphour) end},&#10;                {'Experience Left', function() return num(exptolevel()) end},&#10;                {'Experience Today', function() return num($expgained) end},&#10;                {'Time to Next Level', function() return time(timetolevel()) end},&#10;                {'Played Time', function() return time(math.floor($charactertime / 1000)) end},&#10;                {'Stamina', function() return time($stamina) end}&#10;            }&#10;        }&#10;    }&#10;&#10;    local HUD_Colors = {&#10;            Font = color(255, 255, 255, 0),&#10;            SectionHeaderBackground = {0.0, color(36, 68, 105, 20), 0.23, color(39, 73, 114, 20), 0.76, color(21, 39, 60, 20)},&#10;            EntryNameBackground = {0.0, color(75, 75, 75, 20), 0.23, color(45, 45, 45, 20), 0.76, color(19, 19, 19, 20)},&#10;            EntryValueBackground = {0.0, color(145, 95, 0, 20), 0.23, color(158, 104, 0, 20), 0.76, color(84, 55, 0, 20)},&#10;            EntryValueEnabledBackground = {0.0, color(65, 96, 12, 20), 0.23, color(67, 99, 13, 20), 0.76, color(36, 52, 6, 20)},&#10;            EntryValueDisabledBackground = {0.0, color(90, 12, 15, 20), 0.23, color(98, 13, 17, 20), 0.76, color(52, 6, 9, 20)},&#10;    }&#10;&#10;    function WeaponSkill()&#10;        local SkillTypes = {&#10;            ['axe'] = {type = 'axe', skill = $axe, skillpc = $axepc},&#10;            ['club'] = {type = 'club', skill = $club, skillpc = $clubpc},&#10;            ['sword'] = {type = 'sword', skill = $sword, skillpc = $swordpc},&#10;            ['bow'] = {type = 'distance', skill = $distance, skillpc = $distancepc},&#10;            ['distance weapon'] = {type = 'distance', skill = $distance, skillpc = $distancepc},&#10;            ['no weapon'] = {type = 'fist', skill = $fist, skillpc = $fistpc},&#10;            ['rod'] = {type = 'magic', skill = $mlevel, skillpc = $mlevelpc},&#10;            ['wand'] = {type = 'magic', skill = $mlevel, skillpc = $mlevelpc},&#10;        }&#10;&#10;        return SkillTypes[findweapontype()]&#10;    end&#10;&#10;    local Moving, Temp, Moved = false, {0, 0}, {0, 0}&#10;&#10;    function inputevents(e)&#10;        if (e.type == IEVENT_LMOUSEDOWN) then&#10;            for _, Section in ipairs(HUD_Sections) do&#10;                if (e.elementid == Section.StateSwitch) then&#10;                    Section.State = not Section.State&#10;                    return&#10;                end&#10;            end&#10;        for _, Section in ipairs(HUD_Sections) do&#10;                if (Section.Name == 'ENGINE STATES') then&#10;                    for _, SectionItem in ipairs(Section.Items) do&#10;                        if (e.elementid == SectionItem[4]) then&#10;                            SectionItem[3]()&#10;                            return&#10;                        end&#10;                    end&#10;                end&#10;            end&#10;        end&#10;&#10;        if (e.type == IEVENT_MMOUSEDOWN) then&#10;            Moving, Temp = true, {$cursor.x - Moved[1], $cursor.y - Moved[2]}&#10;        end&#10;&#10;        if (e.type == IEVENT_MMOUSEUP) then&#10;            Moving = false&#10;        end&#10;    end&#10;    &#10;    setmaskcolorxp(0)&#10;init end&#10;&#10;if (Moving) then&#10;    auto(10)&#10;    Moved = {$cursor.x - Temp[1], $cursor.y - Temp[2]}&#10;end&#10;&#10;setposition($clientwin.left + 5 + Moved[1], $worldwin.top + Moved[2])&#10;setfontstyle('Tahoma', 8, 75, 0xFFFFFF, 1, color(0, 0, 0, 20))&#10;&#10;local YPosition, SectionRow, SectionItemsRow = 0, 0, 0&#10;&#10;if MMS.ShowInfo then&#10;    local StringWidth, StringHeight = measurestring('TEMP')&#10;&#10;    setfillstyle('gradient', 'linear', 2, 0, 0, 0, 22)&#10;    addgradcolors(unpack(HUD_Colors.SectionHeaderBackground))&#10;    drawroundrect(0, 0, 240, 21, 2, 2)&#10;    drawtext(MMS.Title, 6, 21 / 2 - StringHeight * 0.5)&#10;&#10;    setfillstyle('gradient', 'linear', 2, 0, 0, 0, 22)&#10;    addgradcolors(unpack(HUD_Colors.EntryValueBackground))&#10;    drawroundrect(130, 0, 110, 21, 2, 2)&#10;    drawtext(MMS.Creator, 136, 21 / 2 - StringHeight * 0.5)&#10;&#10;    setfontsize(7)&#10;&#10;    local StringWidth, StringHeight = measurestring('TEMP')&#10;&#10;    setfillstyle('gradient', 'linear', 2, 0, 0, 0, 16)&#10;    addgradcolors(unpack(HUD_Colors.EntryNameBackground))&#10;    drawroundrect(0, 24 + 0 * 18, 240, 15, 2, 2)&#10;    drawtext(MMS.Info, 6, 24 + 0 * 18 + 15 / 2 - StringHeight * 0.5 + 1)&#10;     &#10;    setfillstyle('gradient', 'linear', 2, 0, 0, 0, 16)&#10;    addgradcolors(unpack(HUD_Colors.EntryNameBackground))&#10;    drawroundrect(0, 24 + 1 * 18, 240, 15, 2, 2)&#10;    drawtext('Script version:', 6, 24 + 1 * 18 + 15 / 2 - StringHeight * 0.5 + 1)&#10;     &#10;    setfillstyle('gradient', 'linear', 2, 0, 0, 0, 16)&#10;    addgradcolors(unpack(HUD_Colors.EntryValueBackground))&#10;    drawroundrect(130, 24 + 1 * 18, 110, 15, 2, 2)&#10;    drawtext(MMS.Version, 136, 24 + 1 * 18 + 15 / 2 - StringHeight * 0.5 + 1)&#10;    &#10;    YPosition = 22 + 2 * 19&#10;end&#10;&#10;for SectionIndex, Section in ipairs(HUD_Sections) do&#10;    setfontsize(8)&#10;&#10;    local StringWidth, StringHeight = measurestring('TEMP')&#10;&#10;    setfillstyle('gradient', 'linear', 2, 0, 0, 0, 21)&#10;    addgradcolors(unpack(HUD_Colors.SectionHeaderBackground))&#10;    drawroundrect(0, YPosition + (SectionRow * 23) + (SectionItemsRow * 19), 240, 20, 2, 2)&#10;    drawtext(Section.Name, 6, YPosition + (SectionRow * 23) + (SectionItemsRow * 19) + 20 / 2 - StringHeight * 0.5 + 1)&#10;&#10;    setfillstyle('gradient', 'linear', 2, 0, 0, 0, 21)&#10;    if (Section.State) then&#10;        addgradcolors(unpack(HUD_Colors.EntryValueEnabledBackground))&#10;    else&#10;        addgradcolors(unpack(HUD_Colors.EntryValueDisabledBackground))&#10;    end&#10;    Section.StateSwitch = drawroundrect(220, YPosition + (SectionRow * 23) + (SectionItemsRow * 19), 20, 20, 2, 2)&#10;    drawtext('X', 228, YPosition + (SectionRow * 23) + (SectionItemsRow * 19) + 20 / 2 - StringHeight * 0.5 + 1)&#10;&#10;    SectionRow = SectionRow + 1&#10;&#10;    if (Section.State) then&#10;        setfontsize(7)&#10;&#10;        local StringWidth, StringHeight = measurestring('TEMP')&#10;&#10;        for SectionItemIndex, SectionItem in ipairs(Section.Items) do&#10;            setfillstyle('gradient', 'linear', 2, 0, 0, 0, 17)     &#10;            addgradcolors(unpack(HUD_Colors.EntryNameBackground))&#10;            drawroundrect(0, YPosition + (SectionRow * 23) + (SectionItemsRow * 19), 240, 16, 2, 2)&#10;            drawtext(SectionItem[1], 6, YPosition + (SectionRow * 23) + (SectionItemsRow * 19) + 16 / 2 - StringHeight * 0.5 + 1)&#10;&#10;            if (Section.Name == 'ENGINE STATES') then&#10;                local EngineCurrentState = SectionItem[2]()&#10;&#10;                setfillstyle('gradient', 'linear', 2, 0, 0, 0, 17)&#10;                if (EngineCurrentState == 'yes') then&#10;                    addgradcolors(unpack(HUD_Colors.EntryValueEnabledBackground))&#10;                else&#10;                    addgradcolors(unpack(HUD_Colors.EntryValueDisabledBackground))&#10;                end&#10;                HUD_Sections[SectionIndex].Items[SectionItemIndex][4] = drawroundrect(130, YPosition + (SectionRow * 23) + (SectionItemsRow * 19), 110, 16, 2, 2)&#10;&#10;&#10;                drawtext((EngineCurrentState == 'yes' and ('On')) or ('Off'), 136, YPosition + (SectionRow * 23) + (SectionItemsRow * 19) + 16 / 2 - StringHeight * 0.5 + 1)&#10;            else&#10;                setfillstyle('gradient', 'linear', 2, 0, 0, 0, 17)&#10;                addgradcolors(unpack(HUD_Colors.EntryValueBackground))&#10;                drawroundrect(130, YPosition + (SectionRow * 23) + (SectionItemsRow * 19), 110, 16, 2, 2)&#10;                drawtext(SectionItem[2](), 136, YPosition + (SectionRow * 23) + (SectionItemsRow * 19) + 16 / 2 - StringHeight * 0.5 + 1)&#10;            end&#10;&#10;            SectionItemsRow = SectionItemsRow + 1&#10;        end&#10;    end&#10;end" enabled="yes" refreshRate="100"/>
            <HUDScript name="ShowWaypoints" script="init start&#10;&#9;-- local SCRIPT_VERSION = '1.2.1'&#10;&#10;&#9;local waypointColors = {&#10;&#9;&#9;walk    = 0xAAF200,&#10;&#9;&#9;node    = 0x2A0736,&#10;&#9;&#9;stand   = 0x00AACC,&#10;&#9;&#9;shovel  = 0xEB8540,&#10;&#9;&#9;rope    = 0xFFCC00,&#10;&#9;&#9;machete = 0x003366,&#10;&#9;&#9;ladder  = 0xC55186,&#10;&#9;&#9;use     = 0x36693E,&#10;&#9;&#9;action  = 0x00FFFF,&#10;&#9;&#9;lure    = 0xCCCCCC&#10;&#9;}&#10;&#10;&#9;local function deleteWaypointCall(menu)&#10;&#9;&#9;removewaypoint(menu.waypointID)&#10;&#9;end&#10;&#10;&#9;local function moveWaypointName()&#10;&#9;&#9;if resizedWpt == nil then&#10;&#9;&#9;&#9;return tern(draggedWpt == nil, 'Move Waypoint', 'Stop Moving')&#10;&#9;&#9;end&#10;&#9;end&#10;&#10;&#9;local function moveWaypointCall(menu)&#10;&#9;&#9;if draggedWpt == nil then&#10;&#9;&#9;&#9;draggedWpt = menu.waypoint&#10;&#9;&#9;else&#10;&#9;&#9;&#9;draggedWpt = nil&#10;&#9;&#9;end&#10;&#9;end&#10;&#10;&#9;local function resizeWaypointName()&#10;&#9;&#9;if draggedWpt == nil then&#10;&#9;&#9;&#9;return tern(resizedWpt == nil, 'Resize Waypoint', 'Stop Resizing')&#10;&#9;&#9;end&#10;&#9;end&#10;&#10;&#9;local function resizeWaypointCall(menu)&#10;&#9;&#9;if resizedWpt == nil then&#10;&#9;&#9;&#9;resizedWpt = menu.waypoint&#10;&#9;&#9;else&#10;&#9;&#9;&#9;resizedWpt = nil&#10;&#9;&#9;end&#10;&#9;end&#10;&#10;&#9;registermessagehandler('contextMenu_waypoint', moveWaypointName, moveWaypointCall)&#10;&#9;registermessagehandler('contextMenu_waypoint', resizeWaypointName, resizeWaypointCall)&#10;&#9;registermessagehandler('contextMenu_waypoint', 'Delete Waypoint', deleteWaypointCall)&#10;&#9;registermessagehandler('contextMenu_waypoint', MENU_SEPARATOR, nil)&#10;&#10;&#9;local xOffset, yOffset, worldWidth, worldHeight, x, y, z, topLeftTilePos,&#10;&#9;      botRightTilePos, width, height, text, label&#10;&#9;local waypointRect = {}&#10;&#10;&#9;function gettilepos(x, y, z)&#10;&#9;&#9;local tile = getobjectarea(x, y, z)&#10;&#10;&#9;&#9;if tile == nil then&#10;&#9;&#9;&#9;local xDiff, yDiff = x - $posx, y - $posy&#10;&#9;&#9;&#9;if math.abs($posx - x) &lt;= 7 then&#10;&#9;&#9;&#9;&#9;tile = getobjectarea(x, $posy, $posz)&#10;&#9;&#9;&#9;&#9;xDiff = 0&#10;&#9;&#9;&#9;elseif math.abs($posy - y) &lt;= 5 then&#10;&#9;&#9;&#9;&#9;tile = getobjectarea($posx, y, $posz)&#10;&#9;&#9;&#9;&#9;yDiff = 0&#10;&#9;&#9;&#9;else&#10;&#9;&#9;&#9;&#9;tile = getobjectarea($posx, $posy, $posz)&#10;&#9;&#9;&#9;end&#10;&#10;&#9;&#9;&#9;-- Some strange stuff happens when you go from 0 to -1, so I'm&#10;&#9;&#9;&#9;-- adding this as a precaution.&#10;&#9;&#9;&#9;if tile ~= nil then&#10;&#9;&#9;&#9;&#9;local width, height = $worldwin.width, $worldwin.height&#10;&#10;&#9;&#9;&#9;&#9;tile.left    = tile.left    + (width * xDiff)&#10;&#9;&#9;&#9;&#9;tile.right   = tile.right   + (width * xDiff)&#10;&#9;&#9;&#9;&#9;tile.centerx = tile.centerx + (width * xDiff)&#10;&#9;&#9;&#9;&#9;tile.top     = tile.top     + (height * yDiff)&#10;&#9;&#9;&#9;&#9;tile.bottom  = tile.bottom  + (height * yDiff)&#10;&#9;&#9;&#9;&#9;tile.centery = tile.centery + (height * yDiff)&#10;&#9;&#9;&#9;end&#10;&#9;&#9;end&#10;&#10;&#9;&#9;return tile&#10;&#9;end&#10;&#10;&#9;useworldhud()&#10;init end&#10;&#10;setfontstyle('Tahoma', 7, 75, 0xFFFFFF, 1, 0x000000)&#10;&#10;xOffset, yOffset = $worldwin.left - $clientwin.left, $worldwin.top - $clientwin.top&#10;worldWidth, worldHeight = $worldwin.right - $worldwin.left - 2, $worldwin.bottom - $worldwin.top - 2&#10;&#10;local i = 0&#10;foreach settingsentry e 'Cavebot/Waypoints' do&#10;&#9;x, y, z = getsetting(e, 'Coordinates'):match(REGEX_SPA_COORDS)&#10;&#9;x, y, z = tonumber(x), tonumber(y), tonumber(z)&#10;&#10;&#9;if z == $posz then&#10;&#9;&#9;width, height = getsetting(e, 'Range'):match(REGEX_SPA_SIZE)&#10;&#9;&#9;width, height = tonumber(width), tonumber(height)&#10;&#10;&#9;&#9;topLeftTilePos = gettilepos(x, y, z)&#10;&#9;&#9;botRightTilePos = gettilepos(x + width - 1, y + height - 1, z)&#10;&#10;&#9;&#9;if topLeftTilePos and botRightTilePos then&#10;&#9;&#9;&#9;waypointRect.left   = math.max(topLeftTilePos.left  , 0)&#10;&#9;&#9;&#9;waypointRect.top    = math.max(topLeftTilePos.top   , 0)&#10;&#9;&#9;&#9;waypointRect.right  = math.min(botRightTilePos.right , worldWidth)&#10;&#9;&#9;&#9;waypointRect.bottom = math.min(botRightTilePos.bottom, worldHeight)&#10;&#9;&#9;&#9;waypointRect.width  = waypointRect.right - waypointRect.left&#10;&#9;&#9;&#9;waypointRect.height = waypointRect.bottom - waypointRect.top&#10;&#10;&#9;&#9;&#9;if waypointRect.width &gt; 0 and waypointRect.height &gt; 0 then&#10;&#9;&#9;&#9;&#9;label = getsetting(e, 'Label')&#10;&#9;&#9;&#9;&#9;text = tern(#label == 0, tostring(i), label .. ' (' .. i .. ')')&#10;&#9;&#9;&#9;&#9;wptType = getsetting(e, 'Type')&#10;&#10;&#9;&#9;&#9;&#9;setfillstyle('color', (waypointColors[wptType:lower()] or 0) + (math.floor(2.55*50)*16777216))&#10;&#9;&#9;&#9;&#9;drawroundrect(&#10;&#9;&#9;&#9;&#9;&#9;waypointRect.left,&#10;&#9;&#9;&#9;&#9;&#9;waypointRect.top,&#10;&#9;&#9;&#9;&#9;&#9;waypointRect.width,&#10;&#9;&#9;&#9;&#9;&#9;waypointRect.height,&#10;&#9;&#9;&#9;&#9;&#9;10, 10&#10;&#9;&#9;&#9;&#9;)&#10;&#10;&#9;&#9;&#9;&#9;if waypointRect.width &gt; 10 then&#10;&#9;&#9;&#9;&#9;&#9;drawtext(&#10;&#9;&#9;&#9;&#9;&#9;&#9;string.fit(text, waypointRect.width - 10, '...', true),&#10;&#9;&#9;&#9;&#9;&#9;&#9;waypointRect.left + 5,&#10;&#9;&#9;&#9;&#9;&#9;&#9;waypointRect.top + 3&#10;&#9;&#9;&#9;&#9;&#9;)&#10;&#9;&#9;&#9;&#9;&#9;drawtext(&#10;&#9;&#9;&#9;&#9;&#9;&#9;string.fit(wptType, waypointRect.width - 10, '...', true),&#10;&#9;&#9;&#9;&#9;&#9;&#9;waypointRect.left + 5,&#10;&#9;&#9;&#9;&#9;&#9;&#9;waypointRect.top + 15&#10;&#9;&#9;&#9;&#9;&#9;)&#10;&#9;&#9;&#9;&#9;end&#10;&#9;&#9;&#9;end&#10;&#9;&#9;end&#10;&#9;end&#10;&#10;&#9;i = i + 1&#10;end&#10;&#10;if contextmenuinfo() == nil then&#10;&#9;if draggedWpt then&#10;&#9;&#9;set(draggedWpt, 'Coordinates', string.format('x:%i, y:%i, z:%i', $cursorinfo.x, $cursorinfo.y, $cursorinfo.z))&#10;&#9;elseif resizedWpt then&#10;&#9;&#9;local x, y = get(resizedWpt, 'Coordinates'):match(REGEX_COORDS)&#10;&#9;&#9;x, y = tonumber(x), tonumber(y)&#10;&#10;&#9;&#9;set(resizedWpt, 'Range', string.format('%i x %i', math.max(1, 1 + ($cursorinfo.x - x)) , math.max(1, 1 + ($cursorinfo.y - y))))&#10;&#9;end&#10;end" enabled="yes" refreshRate="100"/>
            <HUDScript name="ActiveHotkeys" script="init start&#13;&#10;&#9;-- local SCRIPT_VERSION = '1.0.1'&#13;&#10;&#9;&#13;&#10;&#9;local types = {&quot;hotkey&quot;, &quot;persistent&quot;, &quot;cavebot&quot;}&#13;&#10;&#9;local fontsize = 7&#13;&#10;&#9;local fontspacing = fontsize + 6&#13;&#10;&#9;&#13;&#10;&#9;setfontstyle(&quot;Tahoma&quot;, fontsize, 99, 0xE4B31B, 1)&#13;&#10;&#9;setmaskcolorxp(0)&#13;&#10;init end&#13;&#10;&#13;&#10;local row = 0&#13;&#10;for _,scripttype in ipairs(types) do&#13;&#10;&#9;local i = 0&#13;&#10;&#9;while isscript(scripttype, i) do&#13;&#10;&#9;&#9;local listname = scriptlistname(scripttype, i)&#13;&#10;&#9;&#9;&#13;&#10;&#9;&#9;if listname ~= &quot;&quot; then&#13;&#10;&#9;&#9;&#9;setfontcolor(scriptlistcolor(scripttype, i))&#13;&#10;&#9;&#9;&#9;drawtext(listname, 2, 2 + row*fontspacing)&#13;&#10;&#9;&#9;&#9;row = row + 1&#13;&#10;&#9;&#9;end&#13;&#10;&#9;&#9;&#13;&#10;&#9;&#9;i = i + 1&#13;&#10;&#9;end&#13;&#10;end&#13;&#10;&#13;&#10;setposition($clientwin.left + 7, $worldwin.bottom - row*fontspacing - 1)" enabled="yes" refreshRate="100"/>
        </HUDScripts>
    </HUDs>
    <GeneralSettings>
        <Input>
            <MouseOption mouseMode="Simulate Mouse"/>
            <MouseOption scrollMode="Use mouse wheel"/>
            <MouseOption stuckCursorPolicy="If Cavebot on, Release Instantly"/>
            <MouseOption moveSpeed="9"/>
            <MouseOption clickWaitMin="30" clickWaitMax="50"/>
            <KeyboardOption keyboardMode="Simulate Keyboard"/>
            <KeyboardOption stuckCtrlShiftPolicy="If Cavebot on, Release after 1 sec"/>
            <KeyboardOption typeWaitMin="75" typeWaitMax="140"/>
            <KeyboardOption pressWaitMin="45" pressWaitMax="65"/>
            <FocusOption focusPolicy="Don't auto-focus"/>
            <FocusOption openMenuPolicy="Confirm if cavebotting"/>
        </Input>
    </GeneralSettings>
    <Alerts disableSounds="no">
        <alert name="Player On Screen" playSound="no" pauseBot="no" logout="no" safeList="&lt;SafeList&gt;&#10;"/>
        <alert name="Player Attacking" playSound="yes" pauseBot="no" logout="no" safeList="&lt;SafeList&gt;&#10;"/>
        <alert name="Monster Attacking" playSound="no" pauseBot="no" logout="no" safeList="&lt;SafeList&gt;&#10;"/>
        <alert name="Private Message" playSound="no" pauseBot="no" logout="no" safeList="&lt;SafeList&gt;&#10;"/>
        <alert name="Default Message" playSound="no" pauseBot="no" logout="no" safeList="&lt;SafeList&gt;&#10;"/>
        <alert name="GM Detected" playSound="yes" pauseBot="yes" logout="no"/>
        <alert name="Disconnected" playSound="yes" pauseBot="no" logout="no"/>
        <alert name="Character Stuck" playSound="no" pauseBot="no" logout="no" standTime="30000"/>
        <alert name="Health Below" playSound="no" pauseBot="no" logout="no" healthPercent="50"/>
        <alert name="Mana Below" playSound="no" pauseBot="no" logout="no" manaPercent="50"/>
        <alert name="Unjust Kill" playSound="yes" pauseBot="yes" logout="Force Logout"/>
        <alert name="Enemies Online" playSound="no" pauseBot="no" logout="no" enemiesCount="50"/>
    </Alerts>
    <Cavebot enabled="yes">
        <Options>
            <Option shovel="3457"/>
            <Option rope="3003"/>
            <Option machete="3308"/>
            <Option pick="3456"/>
            <Option nodeRange="4"/>
            <Option pauseBotOnDeath="yes"/>
            <Option refillAmmo="no" refillAmmoMin="30" refillAmmoMax="70"/>
            <Option autoMount="no"/>
            <Option fireAvoidanceMin="0" fireAvoidanceMax="0"/>
            <Option energyAvoidanceMin="0" energyAvoidanceMax="0"/>
            <Option poisonAvoidanceMin="0" poisonAvoidanceMax="0"/>
            <Option walkThroughPlayers="yes"/>
            <Option walkMethod="Walk With Arrow Keys"/>
            <Option walkableItems="140, 404, 831, 832, 833, 834, 883, 2118, 2119, 2120, 2121, 2122, 2123, 2124, 2125, 2126, 2127, 2131, 2132, 2133, 2134, 2135, 2314, 2315, 2316, 2319, 2346, 2347, 2348, 2349, 2350, 2351, 2352, 2353, 2354, 2355, 2356, 2357, 2358, 2359, 2360, 2361, 2362, 2363, 2364, 2365, 2366, 2367, 2368, 2369, 2370, 2371, 2372, 2373, 2374, 2375, 2376, 2377, 2378, 2379, 2380, 2381, 2382, 2383, 2384, 2385, 2418, 2419, 2420, 2421, 2422, 2423, 2424, 2425, 2426, 2431, 2432, 2433, 2434, 2441, 2442, 2443, 2444, 2469, 2471, 2472, 2473, 2478, 2480, 2481, 2482, 2483, 2484, 2485, 2486, 2519, 2523, 2775, 2776, 2777, 2778, 2779, 2780, 2781, 2782, 2783, 2784, 2785, 2786, 2787, 2788, 2789, 2790, 2791, 2792, 2793, 2794, 2795, 2796, 2797, 2798, 2799, 2800, 2801, 2802, 2803, 2804, 2805, 2806, 2807, 2808, 2809, 2810, 2811, 2812, 2981, 2982, 2983, 2984, 2985, 2987, 2988, 3503, 3504, 3514, 3807, 5086, 5087, 5088, 6114, 6115, 6355, 6356, 6357, 6358, 6359, 6360, 6361, 6362, 6371, 6372, 7864, 8455, 8763, 9061, 9062, 10207, 10209, 10216, 10286, 10287, 10288, 11009, 11800, 11801, 11802, 11803, 11804, 11805, 11806, 11807, 11808, 11809, 11810"/>
            <Option mapWalkDistMin="20" mapWalkDistMax="50"/>
            <Option userOptionsScript=""/>
        </Options>
        <SpecialAreas>
            <Area name="SArea" x="33072" y="32169" z="2" type="Square (Filled)" width="1" height="1" avoidance="250" waitTimeMin="0" waitTimeMax="0" policy="Cavebot &amp; Targeting" ignoreWhenLuring="no" ignoreWhenLooting="no" comment=""/>
            <Area name="SArea1" x="33079" y="32169" z="2" type="Square (Filled)" width="1" height="1" avoidance="250" waitTimeMin="0" waitTimeMax="0" policy="Cavebot &amp; Targeting" ignoreWhenLuring="no" ignoreWhenLooting="no" comment=""/>
        </SpecialAreas>
        <CavebotScripts/>
        <WaypointSection name="Waypoints">
            <Waypoint type="Stand" x="33019" y="32054" z="6" rangeX="1" rangeY="1" label="InfrontBanker"/>
            <Waypoint type="Action" x="33019" y="32054" z="6" rangeX="1" rangeY="1" label="SetCheckOn" script="setsetting(&quot;Persistent/Scripts/Check/Enabled&quot;, &quot;yes&quot;)&#10;wait(5000)"/>
            <Waypoint type="Action" x="33019" y="32054" z="6" rangeX="1" rangeY="1" label="BankCheck" script="if not islocation()&#10;then&#10;    gotolabel(&quot;InfrontBanker&quot;)&#10;end"/>
            <Waypoint type="Action" x="33019" y="32054" z="6" rangeX="1" rangeY="1" label="OpenBpsForBank" script="closewindows()&#10;wait(500, 1000)&#10;openitem(Mainbp, 'back')&#10;wait(500, 1000)&#10;resizewindows() &#10;wait(500, 1000)&#10;openitem(SupplyBp, Mainbp, true)&#10;wait(500, 1000)&#10;resizewindows()"/>
            <Waypoint type="Action" x="33019" y="32054" z="6" rangeX="1" rangeY="1" label="CheckBpAfter" script="if windowcount_ib() &lt; 2 then gotolabel(&quot;OpenBpsForBank&quot;) end"/>
            <Waypoint type="Stand" x="33019" y="32053" z="6" rangeX="1" rangeY="1" label="w150"/>
            <Waypoint type="Action" x="33019" y="32054" z="6" rangeX="1" rangeY="1" label="Bank" script="local mana = positive(MPtobuy - itemcount(MPname, 'all')) * MPprice&#10;local health = positive(HPtobuy - itemcount(HPname, 'all')) * HPprice&#10;local Total = mana + health &#10;&#10;say('hi')&#10;wait(1500,1800)&#10;npcsay('deposit all')&#10;wait(1500,1800)&#10;npcsay('yes')&#10;wait(1500,1800)&#10;&#10;if Total &gt; 0 then&#10;   npcsay(&quot;withdraw &quot;..Total)&#10;   wait(2000,3000)&#10;   npcsay(&quot;yes&quot;)&#10;   wait(2000,3000)&#10;end"/>
            <Waypoint type="Stand" x="33020" y="32058" z="6" rangeX="1" rangeY="1" label="w000"/>
            <Waypoint type="Walk" x="33020" y="32059" z="6" rangeX="1" rangeY="1" label="w001"/>
            <Waypoint type="Stand" x="33018" y="32050" z="7" rangeX="1" rangeY="1" label="w002"/>
            <Waypoint type="Action" x="33018" y="32050" z="7" rangeX="1" rangeY="1" label="DepotActions" script="setsetting(&quot;Looting/OpenNextBP&quot;,&quot;no&quot;)&#10;wait(500)&#10;closewindows()&#10;wait(500, 1000)&#10;openitem(Mainbp, 'back')&#10;wait(500, 1000)&#10;resizewindows() &#10;wait(500, 1000)&#10;openitem(LootBp, Mainbp, true)&#10;wait(500, 1000)&#10;resizewindows()"/>
            <Waypoint type="Action" x="33018" y="32050" z="7" rangeX="1" rangeY="1" label="BpSetupDeposit" script="if windowcount_ib() &lt; 2 then gotolabel(&quot;DepotActions&quot;) end"/>
            <Waypoint type="Action" x="33018" y="32050" z="7" rangeX="1" rangeY="1" label="Deposit" script="wait(1000)&#10;setsetting(&quot;Looting/OpenNextBP&quot;,&quot;no&quot;)&#10;&#10;reachgrounditem(&quot;depot&quot;)&#10;wait(2000)&#10;&#10;openitem(&quot;depot&quot;)&#10;&#10;wait(2000)&#10;openitem(3502, &quot;locker&quot;)&#10;wait(2000)&#10;&#10;openitem(MainDpBp, &quot;depot chest&quot;)&#10;wait(2000)&#10;&#10;depotdeposit_ib(StackableDpBp, &quot;Elven Amulet&quot;, &quot;Rotten Piece Of Cloth&quot;, &quot;Cyclops Toe&quot;, &quot;Small Diamond&quot;, &quot;Green Dragon Leather&quot;, &quot;Green Dragon Scale&quot;, &quot;Life Crystal&quot;, &quot;Brown Piece of Cloth&quot;, &quot;Holy Orchid&quot;, &quot;Heaven Blossom&quot;, &quot;Flintstone&quot;, &quot;Elven Astral Observer&quot;, &quot;Elven Scouting Glass&quot;)&#10;wait(700,900)&#10;wait(2000)&#10;depotdeposit_ib(LootDpBp, &quot;Time Ring&quot;, &quot;Crystal Ball&quot;, &quot;Guardian Shield&quot;, &quot;Wand of Inferno&quot;, &quot;Dragon Shield&quot;, &quot;Dragon Hammer&quot;, &quot;Dragonbone Staff&quot;, &quot;Serpent Sword&quot;, &quot;Elvish Talisman&quot;, &quot;Elvish Bow&quot;, &quot;Wand of Cosmic Energy&quot;)&#10;wait(1000)&#10;openitem(LootBp, LootBp)&#10;&#10;depotdeposit_ib(StackableDpBp, &quot;Elven Amulet&quot;, &quot;Rotten Piece Of Cloth&quot;, &quot;Cyclops Toe&quot;, &quot;Small Diamond&quot;, &quot;Green Dragon Leather&quot;, &quot;Green Dragon Scale&quot;, &quot;Life Crystal&quot;, &quot;Brown Piece of Cloth&quot;, &quot;Holy Orchid&quot;, &quot;Heaven Blossom&quot;, &quot;Flintstone&quot;, &quot;Elven Astral Observer&quot;, &quot;Elven Scouting Glass&quot;)&#10;wait(700,900)&#10;wait(2000)&#10;depotdeposit_ib(LootDpBp, &quot;Time Ring&quot;, &quot;Crystal Ball&quot;, &quot;Guardian Shield&quot;, &quot;Wand of Inferno&quot;, &quot;Dragon Shield&quot;, &quot;Dragon Hammer&quot;, &quot;Dragonbone Staff&quot;, &quot;Serpent Sword&quot;, &quot;Elvish Talisman&quot;, &quot;Elvish Bow&quot;, &quot;Wand of Cosmic Energy&quot;)&#10;wait(1000)&#10;openitem(LootBp, LootBp)&#10;&#10;depotdeposit_ib(StackableDpBp, &quot;Elven Amulet&quot;, &quot;Rotten Piece Of Cloth&quot;, &quot;Cyclops Toe&quot;, &quot;Small Diamond&quot;, &quot;Green Dragon Leather&quot;, &quot;Green Dragon Scale&quot;, &quot;Life Crystal&quot;, &quot;Brown Piece of Cloth&quot;, &quot;Holy Orchid&quot;, &quot;Heaven Blossom&quot;, &quot;Flintstone&quot;, &quot;Elven Astral Observer&quot;, &quot;Elven Scouting Glass&quot;)&#10;wait(700,900)&#10;wait(2000)&#10;depotdeposit_ib(LootDpBp, &quot;Time Ring&quot;, &quot;Crystal Ball&quot;, &quot;Guardian Shield&quot;, &quot;Wand of Inferno&quot;, &quot;Dragon Shield&quot;, &quot;Dragon Hammer&quot;, &quot;Dragonbone Staff&quot;, &quot;Serpent Sword&quot;, &quot;Elvish Talisman&quot;, &quot;Elvish Bow&quot;, &quot;Wand of Cosmic Energy&quot;)&#10;wait(1000)&#10;openitem(LootBp, LootBp)&#10;&#10;depotdeposit_ib(StackableDpBp, &quot;Elven Amulet&quot;, &quot;Rotten Piece Of Cloth&quot;, &quot;Cyclops Toe&quot;, &quot;Small Diamond&quot;, &quot;Green Dragon Leather&quot;, &quot;Green Dragon Scale&quot;, &quot;Life Crystal&quot;, &quot;Brown Piece of Cloth&quot;, &quot;Holy Orchid&quot;, &quot;Heaven Blossom&quot;, &quot;Flintstone&quot;, &quot;Elven Astral Observer&quot;, &quot;Elven Scouting Glass&quot;)&#10;wait(700,900)&#10;wait(2000)&#10;depotdeposit_ib(LootDpBp, &quot;Time Ring&quot;, &quot;Crystal Ball&quot;, &quot;Guardian Shield&quot;, &quot;Wand of Inferno&quot;, &quot;Dragon Shield&quot;, &quot;Dragon Hammer&quot;, &quot;Dragonbone Staff&quot;, &quot;Serpent Sword&quot;, &quot;Elvish Talisman&quot;, &quot;Elvish Bow&quot;, &quot;Wand of Cosmic Energy&quot;)&#10;wait(1000)&#10;openitem(LootBp, LootBp)"/>
            <Waypoint type="Stand" x="33019" y="32059" z="7" rangeX="1" rangeY="1" label="ToStairs"/>
            <Waypoint type="Walk" x="33020" y="32059" z="7" rangeX="1" rangeY="1" label="UpToBank"/>
            <Waypoint type="Node" x="33012" y="32053" z="6" rangeX="1" rangeY="1" label="ToBpSetup"/>
            <Waypoint type="Action" x="33012" y="32053" z="6" rangeX="1" rangeY="1" label="CheckToSetup" script="if not islocation()&#10;then&#10;    gotolabel(&quot;ToBpSetup&quot;)&#10;end"/>
            <Waypoint type="Action" x="33012" y="32053" z="6" rangeX="1" rangeY="1" label="BpSetupShops" script="wait(500)&#10;setsetting(&quot;Persistent/Scripts/Move/Enabled&quot;, &quot;yes&quot;)  &#10;closewindows()&#10;wait(500, 1000)&#10;openitem(Mainbp, 'back')&#10;wait(500, 1000)&#10;resizewindows() &#10;wait(500, 1000)&#10;openitem(SupplyBp, Mainbp, true)&#10;wait(500, 1000)&#10;resizewindows()&#10;&#10;if windowcount_ib() &lt; 2 then gotolabel(&quot;CheckToSetup&quot;) end"/>
            <Waypoint type="Stand" x="33007" y="32065" z="6" rangeX="1" rangeY="1" label="w003"/>
            <Waypoint type="Stand" x="32985" y="32073" z="6" rangeX="1" rangeY="1" label="w004"/>
            <Waypoint type="Stand" x="32971" y="32085" z="6" rangeX="1" rangeY="1" label="InfrontShops"/>
            <Waypoint type="Action" x="32971" y="32085" z="6" rangeX="1" rangeY="1" label="BuyPots" script="opentrade()&#10;wait(1500)&#10;sellflasks()&#10;wait(1500)&#10;buyitemsupto(MPname, MPtobuy)&#10;buyitemsupto(HPname, HPtobuy)&#10;wait(1500)"/>
            <Waypoint type="Node" x="32976" y="32079" z="6" rangeX="1" rangeY="1" label="AfterPots"/>
            <Waypoint type="Action" x="32976" y="32079" z="6" rangeX="1" rangeY="1" label="CheckToHunt" script="setsetting(&quot;Looting/OpenNextBP&quot;,&quot;yes&quot;)&#10;closewindows()&#10;wait(500, 1000)&#10;openitem(Mainbp, 'back')&#10;wait(500, 1000)&#10;resizewindows() &#10;wait(500,900)&#10;openitem(SupplyBp, Mainbp, true)&#10;wait(500, 1000)&#10;resizewindows() &#10;openitem(LootBp, Mainbp, true)&#10;resizewindows() &#10;openitem(GoldBp, Mainbp, true)&#10;wait(500, 1000)&#10;resizewindows()&#10;&#10;if windowcount_ib() &lt; 4 then gotolabel(&quot;AfterPots&quot;) end&#10;    &#10;if $cap &gt; Captoback and itemcount(MPname, 'all') &lt; MPtoback and itemcount(HPname, 'all') &lt; HPtoback then&#10;    gotolabel(&quot;InfrontBanker&quot;)&#10;else&#10;    gotolabel(&quot;GoHunt&quot;)&#10;end"/>
            <Waypoint type="Node" x="32980" y="32073" z="6" rangeX="1" rangeY="1" label="GoHunt"/>
            <Waypoint type="Stand" x="32998" y="32081" z="6" rangeX="1" rangeY="1" label="w006"/>
            <Waypoint type="Stand" x="32998" y="32096" z="6" rangeX="1" rangeY="1" label="AtDoor1"/>
            <Waypoint type="Action" x="32998" y="32096" z="6" rangeX="1" rangeY="1" label="CheckOpenDoor1" script="if topitem(32999, 32096, 6).id == 17569 then&#10;    useitem(17569, 32999, 32096, 6)&#10;end"/>
            <Waypoint type="Stand" x="33004" y="32096" z="6" rangeX="1" rangeY="1" label="w008"/>
            <Waypoint type="Walk" x="33004" y="32095" z="6" rangeX="1" rangeY="1" label="w009"/>
            <Waypoint type="Stand" x="33004" y="32095" z="7" rangeX="1" rangeY="1" label="w010"/>
            <Waypoint type="Action" x="33004" y="32095" z="7" rangeX="1" rangeY="1" label="CheckToGoDoor2" script="if not islocation() then&#10;    gotolabel(&quot;AtDoor1&quot;)&#10;end"/>
            <Waypoint type="Stand" x="33004" y="32098" z="7" rangeX="1" rangeY="1" label="AtDoor2"/>
            <Waypoint type="Action" x="33004" y="32098" z="7" rangeX="1" rangeY="1" label="OpenDoor2Go" script="if topitem(33004, 32099, 7).id == 17700 then&#10;    useitem(17700, 33004, 32099, 7)&#10;end"/>
            <Waypoint type="Stand" x="33015" y="32095" z="7" rangeX="1" rangeY="1" label="w007"/>
            <Waypoint type="Walk" x="33016" y="32095" z="7" rangeX="1" rangeY="1" label="w011"/>
            <Waypoint type="Stand" x="33017" y="32095" z="6" rangeX="1" rangeY="1" label="w012"/>
            <Waypoint type="Action" x="33017" y="32095" z="6" rangeX="1" rangeY="1" label="CheckToGoHunt" script="if not islocation() then&#10;    gotolabel(&quot;AtDoor2&quot;)&#10;end"/>
            <Waypoint type="Node" x="33028" y="32098" z="6" rangeX="1" rangeY="1" label="ToHunt"/>
            <Waypoint type="Stand" x="33032" y="32097" z="6" rangeX="1" rangeY="1" label="w014"/>
            <Waypoint type="Walk" x="33032" y="32096" z="6" rangeX="1" rangeY="1" label="w015"/>
            <Waypoint type="Node" x="33040" y="32095" z="7" rangeX="1" rangeY="1" label="w016"/>
            <Waypoint type="Node" x="33062" y="32095" z="7" rangeX="1" rangeY="1" label="w017"/>
            <Waypoint type="Action" x="33062" y="32095" z="7" rangeX="1" rangeY="1" label="CheckToGoHunt2" script="if not islocation() then&#10;    gotolabel(&quot;ToHunt&quot;)&#10;end"/>
            <Waypoint type="Node" x="33080" y="32092" z="7" rangeX="1" rangeY="1" label="ContinueToHunt"/>
            <Waypoint type="Stand" x="33099" y="32084" z="7" rangeX="1" rangeY="1" label="w020"/>
            <Waypoint type="Walk" x="33099" y="32085" z="7" rangeX="1" rangeY="1" label="w021"/>
            <Waypoint type="Stand" x="33099" y="32086" z="6" rangeX="1" rangeY="1" label="w022"/>
            <Waypoint type="Action" x="33099" y="32086" z="6" rangeX="1" rangeY="1" label="CheckPos3" script="if not islocation() then&#10;    gotolabel(&quot;Go3&quot;)&#10;end"/>
            <Waypoint type="Stand" x="33100" y="32104" z="6" rangeX="1" rangeY="1" label="Go4"/>
            <Waypoint type="Walk" x="33101" y="32104" z="6" rangeX="1" rangeY="1" label="w023"/>
            <Waypoint type="Stand" x="33102" y="32104" z="7" rangeX="1" rangeY="1" label="w024"/>
            <Waypoint type="Action" x="33102" y="32104" z="7" rangeX="1" rangeY="1" label="CheckPos4" script="if not islocation() then&#10;    gotolabel(&quot;Go4&quot;)&#10;end"/>
            <Waypoint type="Stand" x="33101" y="32108" z="7" rangeX="1" rangeY="1" label="Go5"/>
            <Waypoint type="Ladder" x="33101" y="32108" z="7" rangeX="1" rangeY="1" label="w025"/>
            <Waypoint type="Stand" x="33101" y="32109" z="6" rangeX="1" rangeY="1" label="w026"/>
            <Waypoint type="Action" x="33101" y="32109" z="6" rangeX="1" rangeY="1" label="CheckPos5" script="if not islocation() then&#10;    gotolabel(&quot;Go5&quot;)&#10;end"/>
            <Waypoint type="Stand" x="33101" y="32118" z="6" rangeX="1" rangeY="1" label="Go6"/>
            <Waypoint type="Walk" x="33101" y="32119" z="6" rangeX="1" rangeY="1" label="w027"/>
            <Waypoint type="Stand" x="33101" y="32119" z="7" rangeX="1" rangeY="1" label="w028"/>
            <Waypoint type="Action" x="33101" y="32119" z="7" rangeX="1" rangeY="1" label="CheckPos6" script="if not islocation() then&#10;    gotolabel(&quot;Go6&quot;)&#10;end"/>
            <Waypoint type="Stand" x="33099" y="32126" z="7" rangeX="1" rangeY="1" label="ToGates"/>
            <Waypoint type="Stand" x="33099" y="32134" z="7" rangeX="1" rangeY="1" label="AtFireyGates"/>
            <Waypoint type="Action" x="33099" y="32134" z="7" rangeX="1" rangeY="1" label="CheckGates" script="if not islocation() then&#10;    gotolabel(&quot;ToGates&quot;)&#10;end"/>
            <Waypoint type="Walk" x="33099" y="32135" z="7" rangeX="1" rangeY="1" label="InGates"/>
            <Waypoint type="Stand" x="33099" y="32137" z="6" rangeX="1" rangeY="1" label="w029"/>
            <Waypoint type="Walk" x="33099" y="32138" z="6" rangeX="1" rangeY="1" label="OutGates"/>
            <Waypoint type="Action" x="33099" y="32139" z="7" rangeX="1" rangeY="1" label="BeginHunt" script="pausewalking(30000)&#10;closewindows()&#10;wait(500, 1000)&#10;openitem(Mainbp, 'back')&#10;wait(500, 1000)&#10;resizewindows() &#10;wait(500,900)&#10;openitem(SupplyBp, Mainbp, true)&#10;wait(500, 1000)&#10;resizewindows() &#10;openitem(LootBp, Mainbp, true)&#10;resizewindows() &#10;openitem(GoldBp, Mainbp, true)&#10;wait(500, 1000)&#10;resizewindows()&#10;pausewalking(0)"/>
            <Waypoint type="Action" x="33099" y="32139" z="7" rangeX="1" rangeY="1" label="CheckHunt" script="--if not islocation() then&#10;if $wptz ~= $posz then&#10;    gotolabel(&quot;InGates&quot;)&#10;end"/>
            <Waypoint type="Action" x="33099" y="32139" z="7" rangeX="1" rangeY="1" label="HuntGround" script="if HuntFirstGround == true then&#10;    gotolabel(&quot;HuntFirstGrounds&quot;)&#10;else&#10;    gotolabel(&quot;SkipFirstGrounds&quot;)&#10;end"/>
            <Waypoint type="Action" x="33099" y="32139" z="7" rangeX="1" rangeY="1" label="HuntFirstGrounds" script=""/>
            <Waypoint type="Node" x="33087" y="32143" z="7" rangeX="3" rangeY="3" label="w005"/>
            <Waypoint type="Node" x="33076" y="32148" z="7" rangeX="3" rangeY="3" label="w030"/>
            <Waypoint type="Node" x="33083" y="32158" z="7" rangeX="3" rangeY="3" label="w032"/>
            <Waypoint type="Node" x="33094" y="32172" z="7" rangeX="3" rangeY="3" label="w033"/>
            <Waypoint type="Node" x="33103" y="32165" z="7" rangeX="3" rangeY="3" label="w034"/>
            <Waypoint type="Node" x="33101" y="32154" z="7" rangeX="3" rangeY="3" label="w035"/>
            <Waypoint type="Node" x="33117" y="32148" z="7" rangeX="3" rangeY="3" label="w036"/>
            <Waypoint type="Stand" x="33104" y="32140" z="7" rangeX="3" rangeY="3" label="SkipFirstGrounds"/>
            <Waypoint type="Action" x="33104" y="32140" z="7" rangeX="1" rangeY="1" label="HuntPlusOneCheck" script="if HuntPlusOne == true then&#10;    gotolabel(&quot;HuntPlusOneFloor&quot;)&#10;else&#10;    gotolabel(&quot;SkipPlusOneFloor&quot;)&#10;end"/>
            <Waypoint type="Stand" x="33105" y="32138" z="7" rangeX="3" rangeY="3" label="HuntPlusOneFloor"/>
            <Waypoint type="Ladder" x="33105" y="32138" z="7" rangeX="1" rangeY="1" label="UpFloor"/>
            <Waypoint type="Node" x="33103" y="32143" z="6" rangeX="3" rangeY="3" label="w038"/>
            <Waypoint type="Action" x="33103" y="32143" z="6" rangeX="1" rangeY="1" label="FloorCheck" script="if not islocation() then&#10;    gotolabel(&quot;HuntFloorPlusOne&quot;)&#10;end"/>
            <Waypoint type="Node" x="33093" y="32147" z="6" rangeX="3" rangeY="3" label="w037"/>
            <Waypoint type="Node" x="33098" y="32168" z="6" rangeX="3" rangeY="3" label="w039"/>
            <Waypoint type="Node" x="33082" y="32151" z="6" rangeX="3" rangeY="3" label="w040"/>
            <Waypoint type="Action" x="33074" y="32154" z="6" rangeX="1" rangeY="1" label="GateTower" script="if GateTower == true then&#10;    gotolabel(&quot;GoGateTower&quot;)&#10;else&#10;    gotolabael(&quot;SkipGateTower&quot;)&#10;end"/>
            <Waypoint type="Stand" x="33074" y="32144" z="6" rangeX="3" rangeY="3" label="GoGateTower"/>
            <Waypoint type="Stand" x="33093" y="32137" z="6" rangeX="1" rangeY="1" label="w041"/>
            <Waypoint type="Stand" x="33093" y="32138" z="6" rangeX="1" rangeY="1" label="InTower"/>
            <Waypoint type="Ladder" x="33093" y="32138" z="6" rangeX="1" rangeY="1" label="w018"/>
            <Waypoint type="Stand" x="33093" y="32139" z="5" rangeX="1" rangeY="1" label="w013"/>
            <Waypoint type="Action" x="33093" y="32139" z="5" rangeX="1" rangeY="1" label="CheckInTower" script="if not islocation() then&#10;    gotolabel(&quot;InTower&quot;)&#10;end"/>
            <Waypoint type="Stand" x="33105" y="32138" z="5" rangeX="1" rangeY="1" label="ToLadder2"/>
            <Waypoint type="Ladder" x="33105" y="32138" z="5" rangeX="1" rangeY="1" label="Up2"/>
            <Waypoint type="Stand" x="33105" y="32139" z="4" rangeX="1" rangeY="1" label="w045"/>
            <Waypoint type="Action" x="33105" y="32139" z="4" rangeX="1" rangeY="1" label="CheckLadder2" script="if not islocation() then&#10;    gotolabel(&quot;ToLadder2&quot;)&#10;end"/>
            <Waypoint type="Stand" x="33105" y="32139" z="4" rangeX="1" rangeY="1" label="LeaveIt"/>
            <Waypoint type="Walk" x="33105" y="32138" z="4" rangeX="1" rangeY="1" label="DownLadder2"/>
            <Waypoint type="Stand" x="33094" y="32138" z="5" rangeX="1" rangeY="1" label="w044"/>
            <Waypoint type="Walk" x="33093" y="32138" z="5" rangeX="1" rangeY="1" label="OutTower"/>
            <Waypoint type="Stand" x="33074" y="32147" z="6" rangeX="1" rangeY="1" label="EndT"/>
            <Waypoint type="Stand" x="33073" y="32157" z="6" rangeX="1" rangeY="1" label="GateTower001"/>
            <Waypoint type="Action" x="33073" y="32157" z="6" rangeX="1" rangeY="1" label="CheckLeaveTower" script="if not islocation() then&#10;    gotolabel(&quot;LeaveIt&quot;)&#10;end"/>
            <Waypoint type="Stand" x="33063" y="32161" z="6" rangeX="1" rangeY="1" label="SkipGateTower"/>
            <Waypoint type="Node" x="33063" y="32161" z="6" rangeX="1" rangeY="1" label="w046"/>
            <Waypoint type="Node" x="33060" y="32184" z="6" rangeX="1" rangeY="1" label="w047"/>
            <Waypoint type="Node" x="33064" y="32201" z="6" rangeX="1" rangeY="1" label="w048"/>
            <Waypoint type="Node" x="33078" y="32186" z="6" rangeX="1" rangeY="1" label="w049"/>
            <Waypoint type="Stand" x="33084" y="32188" z="6" rangeX="1" rangeY="1" label="AtSkinnyTower"/>
            <Waypoint type="Action" x="33084" y="32188" z="6" rangeX="1" rangeY="1" label="SkinnyTower" script="if SkinnyTower == true then&#10;    gotolabel(&quot;InSkinnyTower&quot;)&#10;else&#10;    gotolabel(&quot;SkipSkinnyTower&quot;)&#10;end"/>
            <Waypoint type="Stand" x="33085" y="32190" z="6" rangeX="1" rangeY="1" label="InSkinnyTower"/>
            <Waypoint type="Ladder" x="33085" y="32190" z="6" rangeX="1" rangeY="1" label="IntoSkinnyTower"/>
            <Waypoint type="Stand" x="33086" y="32189" z="5" rangeX="1" rangeY="1" label="w050"/>
            <Waypoint type="Ladder" x="33086" y="32189" z="5" rangeX="1" rangeY="1" label="w051"/>
            <Waypoint type="Stand" x="33085" y="32190" z="4" rangeX="1" rangeY="1" label="w052"/>
            <Waypoint type="Ladder" x="33085" y="32190" z="4" rangeX="1" rangeY="1" label="TopTower"/>
            <Waypoint type="Stand" x="33086" y="32190" z="3" rangeX="1" rangeY="1" label="w053"/>
            <Waypoint type="Walk" x="33085" y="32190" z="3" rangeX="1" rangeY="1" label="w054"/>
            <Waypoint type="Stand" x="33086" y="32190" z="4" rangeX="1" rangeY="1" label="w055"/>
            <Waypoint type="Walk" x="33086" y="32189" z="4" rangeX="1" rangeY="1" label="w056"/>
            <Waypoint type="Walk" x="33085" y="32190" z="5" rangeX="1" rangeY="1" label="OutTower001"/>
            <Waypoint type="Action" x="33085" y="32190" z="6" rangeX="1" rangeY="1" label="TowerCheck" script="if not islocation() then&#10;    gotolabel(&quot;InSkinnyTower&quot;)&#10;end"/>
            <Waypoint type="Node" x="33079" y="32188" z="6" rangeX="1" rangeY="1" label="SkipSkinnyTower"/>
            <Waypoint type="Stand" x="33060" y="32182" z="6" rangeX="1" rangeY="1" label="AtSecondGrounds"/>
            <Waypoint type="Action" x="33060" y="32182" z="6" rangeX="1" rangeY="1" label="SecondGrounds" script="if HuntSecondGrounds == true then&#10;    gotolabel(&quot;InSecondGrounds&quot;)&#10;else&#10;    gotolabel(&quot;SkipSecondGrounds&quot;)&#10;end"/>
            <Waypoint type="Stand" x="33060" y="32182" z="6" rangeX="1" rangeY="1" label="InSecondGrounds"/>
            <Waypoint type="Walk" x="33060" y="32181" z="6" rangeX="1" rangeY="1" label="w059"/>
            <Waypoint type="Stand" x="33061" y="32189" z="7" rangeX="1" rangeY="1" label="w058"/>
            <Waypoint type="Action" x="33061" y="32189" z="7" rangeX="1" rangeY="1" label="CheckSecondGrounds" script="if not islocation() then&#10;    gotolabel(&quot;InSecondGrounds&quot;)&#10;end"/>
            <Waypoint type="Node" x="33083" y="32189" z="7" rangeX="1" rangeY="1" label="w060"/>
            <Waypoint type="Node" x="33059" y="32200" z="7" rangeX="1" rangeY="1" label="w061"/>
            <Waypoint type="Node" x="33059" y="32188" z="7" rangeX="1" rangeY="1" label="w062"/>
            <Waypoint type="Stand" x="33060" y="32181" z="7" rangeX="1" rangeY="1" label="LeaveSecondGrounds"/>
            <Waypoint type="Ladder" x="33060" y="32181" z="7" rangeX="1" rangeY="1" label="OutSecondGrounds"/>
            <Waypoint type="Stand" x="33060" y="32182" z="6" rangeX="1" rangeY="1" label="w065"/>
            <Waypoint type="Action" x="33060" y="32182" z="6" rangeX="1" rangeY="1" label="CheckOutSecondGrounds" script="if not islocation() then&#10;    gotolabel(&quot;LeaveSecondGrounds&quot;)&#10;end"/>
            <Waypoint type="Node" x="33058" y="32181" z="6" rangeX="1" rangeY="1" label="SkipSecondGrounds"/>
            <Waypoint type="Node" x="33062" y="32163" z="6" rangeX="1" rangeY="1" label="w063"/>
            <Waypoint type="Action" x="33062" y="32163" z="6" rangeX="1" rangeY="1" label="CheckBigTower" script="if BigTower == true then&#10;    gotolabel(&quot;InBigTower&quot;)&#10;else&#10;    gotolabel(&quot;SkipBigTower&quot;)&#10;end"/>
            <Waypoint type="Stand" x="33058" y="32158" z="6" rangeX="1" rangeY="1" label="InBigTower"/>
            <Waypoint type="Ladder" x="33058" y="32158" z="6" rangeX="1" rangeY="1" label="IntoBigTower"/>
            <Waypoint type="Stand" x="33062" y="32157" z="5" rangeX="1" rangeY="1" label="IntoFloor2"/>
            <Waypoint type="Ladder" x="33062" y="32157" z="5" rangeX="1" rangeY="1" label="UpFloor2"/>
            <Waypoint type="Stand" x="33062" y="32158" z="4" rangeX="1" rangeY="1" label="EndFloor2"/>
            <Waypoint type="Action" x="33062" y="32158" z="4" rangeX="1" rangeY="1" label="EndFloor2Check" script="if not islocation() then&#10;    gotolabel(&quot;InBigTower&quot;)&#10;end"/>
            <Waypoint type="Walk" x="33062" y="32157" z="4" rangeX="1" rangeY="1" label="w064"/>
            <Waypoint type="Stand" x="33059" y="32158" z="5" rangeX="1" rangeY="1" label="w066"/>
            <Waypoint type="Walk" x="33058" y="32158" z="5" rangeX="1" rangeY="1" label="EndBigTower"/>
            <Waypoint type="Stand" x="33062" y="32158" z="6" rangeX="1" rangeY="1" label="SkipBigTower"/>
            <Waypoint type="Action" x="33062" y="32158" z="6" rangeX="1" rangeY="1" label="CheckDragonTower" script="if DragonTower == true then&#10;    gotolabel(&quot;GoDragon&quot;)&#10;else&#10;    gotolabel(&quot;SkipDragonTower&quot;)&#10;end"/>
            <Waypoint type="Stand" x="33062" y="32158" z="6" rangeX="1" rangeY="1" label="GoDragon"/>
            <Waypoint type="Walk" x="33062" y="32157" z="6" rangeX="1" rangeY="1" label="Down"/>
            <Waypoint type="Node" x="33067" y="32166" z="7" rangeX="1" rangeY="1" label="w068"/>
            <Waypoint type="Stand" x="33074" y="32167" z="7" rangeX="1" rangeY="1" label="AtTowerLadder"/>
            <Waypoint type="Ladder" x="33074" y="32167" z="7" rangeX="1" rangeY="1" label="IntoTower"/>
            <Waypoint type="Stand" x="33075" y="32166" z="6" rangeX="1" rangeY="1" label="w067"/>
            <Waypoint type="Ladder" x="33075" y="32166" z="6" rangeX="1" rangeY="1" label="w069"/>
            <Waypoint type="Stand" x="33076" y="32166" z="5" rangeX="1" rangeY="1" label="w070"/>
            <Waypoint type="Ladder" x="33076" y="32166" z="5" rangeX="1" rangeY="1" label="w071"/>
            <Waypoint type="Stand" x="33075" y="32166" z="4" rangeX="1" rangeY="1" label="w072"/>
            <Waypoint type="Ladder" x="33075" y="32166" z="4" rangeX="1" rangeY="1" label="w073"/>
            <Waypoint type="Stand" x="33075" y="32168" z="3" rangeX="1" rangeY="1" label="w074"/>
            <Waypoint type="Action" x="33075" y="32168" z="3" rangeX="1" rangeY="1" label="CheckByDragons" script="if not islocation() then&#10;    gotolabel(&quot;AtTowerLadder&quot;)&#10;end"/>
            <Waypoint type="Action" x="33075" y="32168" z="3" rangeX="1" rangeY="1" label="DragonCheck" script="if HuntDragons == true then&#10;    gotolabel(&quot;ToDragons&quot;)&#10;else&#10;    gotolabel(&quot;SkipDragons&quot;)&#10;end"/>
            <Waypoint type="Stand" x="33075" y="32168" z="3" rangeX="1" rangeY="1" label="ToDragons"/>
            <Waypoint type="Stand" x="33074" y="32168" z="3" rangeX="1" rangeY="1" label="DragonLeft"/>
            <Waypoint type="Walk" x="33074" y="32169" z="3" rangeX="1" rangeY="1" label="IntoDragonLeft"/>
            <Waypoint type="Node" x="33072" y="32171" z="4" rangeX="1" rangeY="1" label="w077"/>
            <Waypoint type="Action" x="33072" y="32171" z="4" rangeX="1" rangeY="1" label="CheckInLeftDragon" script="--if not islocation() then&#10;if $wptz ~= $posz then&#10;    gotolabel(&quot;DragonLeft&quot;)&#10;end"/>
            <Waypoint type="Stand" x="33073" y="32169" z="4" rangeX="1" rangeY="1" label="w075"/>
            <Waypoint type="Walk" x="33074" y="32169" z="4" rangeX="1" rangeY="1" label="OutLeftDragon"/>
            <Waypoint type="Stand" x="33075" y="32169" z="3" rangeX="1" rangeY="1" label="DragonRight"/>
            <Waypoint type="Walk" x="33076" y="32169" z="3" rangeX="1" rangeY="1" label="IntoDragonRight"/>
            <Waypoint type="Node" x="33079" y="32170" z="4" rangeX="1" rangeY="1" label="w076"/>
            <Waypoint type="Action" x="33079" y="32170" z="4" rangeX="1" rangeY="1" label="CheckInRightDragon" script="--if not islocation() then&#10;if $wptz ~= $posz then&#10;    gotolabel(&quot;DragonRight&quot;)&#10;end"/>
            <Waypoint type="Stand" x="33077" y="32169" z="4" rangeX="1" rangeY="1" label="w078"/>
            <Waypoint type="Walk" x="33076" y="32169" z="4" rangeX="1" rangeY="1" label="OutRightDragon"/>
            <Waypoint type="Action" x="33075" y="32168" z="3" rangeX="1" rangeY="1" label="SkipDragons" script=""/>
            <Waypoint type="Stand" x="33074" y="32167" z="3" rangeX="1" rangeY="1" label="GoTop"/>
            <Waypoint type="Ladder" x="33074" y="32167" z="3" rangeX="1" rangeY="1" label="w080"/>
            <Waypoint type="Stand" x="33075" y="32167" z="2" rangeX="1" rangeY="1" label="ToLeave"/>
            <Waypoint type="Action" x="33075" y="32167" z="2" rangeX="1" rangeY="1" label="DownToLeaveDragonTower" script="if not islocation() then&#10;    gotolabel(&quot;GoTop&quot;)&#10;end"/>
            <Waypoint type="Walk" x="33074" y="32167" z="2" rangeX="1" rangeY="1" label="DownDragonTower"/>
            <Waypoint type="Stand" x="33075" y="32167" z="3" rangeX="1" rangeY="1" label="w079"/>
            <Waypoint type="Walk" x="33075" y="32166" z="3" rangeX="1" rangeY="1" label="w081"/>
            <Waypoint type="Stand" x="33075" y="32166" z="4" rangeX="1" rangeY="1" label="w082"/>
            <Waypoint type="Walk" x="33076" y="32166" z="4" rangeX="1" rangeY="1" label="w083"/>
            <Waypoint type="Stand" x="33075" y="32167" z="5" rangeX="1" rangeY="1" label="w084"/>
            <Waypoint type="Walk" x="33075" y="32166" z="5" rangeX="1" rangeY="1" label="w085"/>
            <Waypoint type="Stand" x="33075" y="32167" z="6" rangeX="1" rangeY="1" label="w086"/>
            <Waypoint type="Walk" x="33074" y="32167" z="6" rangeX="1" rangeY="1" label="OutTower002"/>
            <Waypoint type="Stand" x="33075" y="32167" z="7" rangeX="1" rangeY="1" label="AtQuestArea"/>
            <Waypoint type="Action" x="33075" y="32167" z="7" rangeX="1" rangeY="1" label="w088" script="if QuestArea == true then&#10;    gotolabel(&quot;InQuestArea&quot;)&#10;else&#10;    gotolabel(&quot;SkipQuestArea&quot;)&#10;end"/>
            <Waypoint type="Stand" x="33075" y="32167" z="7" rangeX="1" rangeY="1" label="InQuestArea"/>
            <Waypoint type="Walk" x="33075" y="32166" z="7" rangeX="1" rangeY="1" label="IntoQuestArea"/>
            <Waypoint type="Node" x="33079" y="32171" z="8" rangeX="1" rangeY="1" label="w087"/>
            <Waypoint type="Node" x="33067" y="32174" z="8" rangeX="1" rangeY="1" label="w089"/>
            <Waypoint type="Stand" x="33049" y="32179" z="8" rangeX="1" rangeY="1" label="AtQuestEntrance"/>
            <Waypoint type="Action" x="33049" y="32179" z="8" rangeX="1" rangeY="1" label="QuestArea" script="if QuestRoom == true then&#10;    gotolabel(&quot;GoQuestRoom&quot;)&#10;else&#10;    gotolabel(&quot;SkipQuestRoom&quot;)&#10;end"/>
            <Waypoint type="Stand" x="33048" y="32177" z="8" rangeX="1" rangeY="1" label="GoQuestRoom"/>
            <Waypoint type="Walk" x="33047" y="32177" z="8" rangeX="1" rangeY="1" label="w090"/>
            <Waypoint type="Node" x="33039" y="32179" z="9" rangeX="1" rangeY="1" label="w091"/>
            <Waypoint type="Action" x="33039" y="32179" z="9" rangeX="1" rangeY="1" label="CheckInQuest" script="if not islocation() then&#10;    gotolabel(&quot;GoQuestRoom&quot;)&#10;end"/>
            <Waypoint type="Stand" x="33046" y="32177" z="9" rangeX="1" rangeY="1" label="w092"/>
            <Waypoint type="Walk" x="33047" y="32177" z="9" rangeX="1" rangeY="1" label="w093"/>
            <Waypoint type="Stand" x="33049" y="32179" z="8" rangeX="1" rangeY="1" label="SkipQuestRoom"/>
            <Waypoint type="Node" x="33063" y="32187" z="8" rangeX="1" rangeY="1" label="w094"/>
            <Waypoint type="Node" x="33060" y="32198" z="8" rangeX="1" rangeY="1" label="w095"/>
            <Waypoint type="Stand" x="33050" y="32199" z="8" rangeX="1" rangeY="1" label="w096"/>
            <Waypoint type="Node" x="33058" y="32209" z="8" rangeX="1" rangeY="1" label="AtDragonHole"/>
            <Waypoint type="Action" x="33058" y="32209" z="8" rangeX="1" rangeY="1" label="GoThirdDragon" script="if ThirdDragon == true then&#10;    gotolabel(&quot;GoThirdDragon&quot;)&#10;else&#10;    gotolabel(&quot;SkipThirdDragon&quot;)&#10;end"/>
            <Waypoint type="Stand" x="33057" y="32210" z="8" rangeX="1" rangeY="1" label="GoThirdDragon001"/>
            <Waypoint type="Walk" x="33056" y="32210" z="8" rangeX="1" rangeY="1" label="w098"/>
            <Waypoint type="Stand" x="33045" y="32212" z="9" rangeX="1" rangeY="1" label="w099"/>
            <Waypoint type="Stand" x="33044" y="32212" z="9" rangeX="1" rangeY="1" label="AboveDragon"/>
            <Waypoint type="Walk" x="33043" y="32212" z="9" rangeX="1" rangeY="1" label="w101"/>
            <Waypoint type="Node" x="33039" y="32212" z="10" rangeX="1" rangeY="1" label="w102"/>
            <Waypoint type="Action" x="33039" y="32212" z="10" rangeX="1" rangeY="1" label="CheckDragon" script="--if not islocation() then&#10;if $wptz ~= $posz then&#10;    gotolabel(&quot;AboveDragon&quot;)&#10;end"/>
            <Waypoint type="Stand" x="33042" y="32212" z="10" rangeX="1" rangeY="1" label="DragonRamp"/>
            <Waypoint type="Walk" x="33043" y="32212" z="10" rangeX="1" rangeY="1" label="w103"/>
            <Waypoint type="Stand" x="33056" y="32210" z="9" rangeX="1" rangeY="1" label="w104"/>
            <Waypoint type="Rope" x="33056" y="32210" z="9" rangeX="1" rangeY="1" label="w105"/>
            <Waypoint type="Stand" x="33056" y="32211" z="8" rangeX="1" rangeY="1" label="w106"/>
            <Waypoint type="Action" x="33056" y="32211" z="8" rangeX="1" rangeY="1" label="EndDragonHole" script="if not islocation() then&#10;    gotolabel(&quot;DragonRamp&quot;)&#10;end"/>
            <Waypoint type="Node" x="33060" y="32207" z="8" rangeX="1" rangeY="1" label="SkipThirdDragon"/>
            <Waypoint type="Node" x="33079" y="32180" z="8" rangeX="1" rangeY="1" label="w097"/>
            <Waypoint type="Stand" x="33077" y="32168" z="8" rangeX="1" rangeY="1" label="w100"/>
            <Waypoint type="Stand" x="33075" y="32166" z="8" rangeX="1" rangeY="1" label="QuestAreaLadder"/>
            <Waypoint type="Ladder" x="33075" y="32166" z="8" rangeX="1" rangeY="1" label="OutQuestArea"/>
            <Waypoint type="Stand" x="33075" y="32167" z="7" rangeX="1" rangeY="1" label="SkipQuestArea"/>
            <Waypoint type="Node" x="33063" y="32160" z="7" rangeX="1" rangeY="1" label="w107"/>
            <Waypoint type="Stand" x="33062" y="32157" z="7" rangeX="1" rangeY="1" label="w108"/>
            <Waypoint type="Ladder" x="33062" y="32157" z="7" rangeX="1" rangeY="1" label="LeaveDragonTower"/>
            <Waypoint type="Stand" x="33064" y="32158" z="6" rangeX="1" rangeY="1" label="SkipDragonTower"/>
            <Waypoint type="Node" x="33090" y="32149" z="6" rangeX="1" rangeY="1" label="w109"/>
            <Waypoint type="Stand" x="33104" y="32140" z="6" rangeX="1" rangeY="1" label="w110"/>
            <Waypoint type="Stand" x="33105" y="32139" z="6" rangeX="1" rangeY="1" label="w111"/>
            <Waypoint type="Walk" x="33105" y="32138" z="6" rangeX="1" rangeY="1" label="OutPlusOneFloor"/>
            <Waypoint type="Stand" x="33103" y="32139" z="7" rangeX="1" rangeY="1" label="SkipPlusOneFloor"/>
            <Waypoint type="Action" x="33103" y="32139" z="7" rangeX="1" rangeY="1" label="CyclopsCheck" script="if Cyclops == true then&#10;    gotolabel(&quot;GoCyclops&quot;)&#10;else&#10;    gotolabel(&quot;SkipCyclops&quot;)&#10;end"/>
            <Waypoint type="Stand" x="33103" y="32139" z="7" rangeX="1" rangeY="1" label="GoCyclops"/>
            <Waypoint type="Walk" x="33103" y="32138" z="7" rangeX="1" rangeY="1" label="w113"/>
            <Waypoint type="Node" x="33106" y="32149" z="8" rangeX="1" rangeY="1" label="w112"/>
            <Waypoint type="Stand" x="33110" y="32145" z="8" rangeX="1" rangeY="1" label="AtCyclops"/>
            <Waypoint type="Walk" x="33110" y="32144" z="8" rangeX="1" rangeY="1" label="IntoCyclops"/>
            <Waypoint type="Node" x="33099" y="32148" z="9" rangeX="1" rangeY="1" label="w114"/>
            <Waypoint type="Action" x="33099" y="32148" z="9" rangeX="1" rangeY="1" label="FloorCheck001" script="if $wptz ~= $posz then&#10;    gotolabel(&quot;AtCyclops&quot;)&#10;end"/>
            <Waypoint type="Stand" x="33110" y="32145" z="9" rangeX="1" rangeY="1" label="w115"/>
            <Waypoint type="Walk" x="33110" y="32144" z="9" rangeX="1" rangeY="1" label="OutCyclops"/>
            <Waypoint type="Node" x="33101" y="32148" z="8" rangeX="1" rangeY="1" label="w116"/>
            <Waypoint type="Stand" x="33078" y="32144" z="8" rangeX="1" rangeY="1" label="w117"/>
            <Waypoint type="Node" x="33055" y="32159" z="8" rangeX="1" rangeY="1" label="w118"/>
            <Waypoint type="Node" x="33088" y="32156" z="8" rangeX="1" rangeY="1" label="w119"/>
            <Waypoint type="Node" x="33099" y="32139" z="8" rangeX="1" rangeY="1" label="w120"/>
            <Waypoint type="Stand" x="33103" y="32138" z="8" rangeX="1" rangeY="1" label="LeaveCyclopsArea"/>
            <Waypoint type="Ladder" x="33103" y="32138" z="8" rangeX="1" rangeY="1" label="OutCyclopsArea"/>
            <Waypoint type="Stand" x="33103" y="32139" z="7" rangeX="1" rangeY="1" label="SkipCyclops"/>
            <Waypoint type="Stand" x="33099" y="32139" z="7" rangeX="1" rangeY="1" label="w031"/>
            <Waypoint type="Action" x="33099" y="32139" z="7" rangeX="1" rangeY="1" label="CheckToLeave" script="if itemcount(MPname, 'all') &gt; MPtoback and itemcount(HPname, 'all') &gt; HPtoback and $cap &gt; Captoback then&#10;    gotolabel(&quot;BeginHunt&quot;)&#10;else&#10;    gotolabel(&quot;Refill&quot;)&#10;end"/>
            <Waypoint type="Stand" x="33099" y="32139" z="7" rangeX="1" rangeY="1" label="Refill"/>
            <Waypoint type="Walk" x="33099" y="32138" z="7" rangeX="1" rangeY="1" label="w121"/>
            <Waypoint type="Stand" x="33099" y="32136" z="6" rangeX="1" rangeY="1" label="w122"/>
            <Waypoint type="Walk" x="33099" y="32135" z="6" rangeX="1" rangeY="1" label="OutOfFireyGates"/>
            <Waypoint type="Stand" x="33099" y="32125" z="7" rangeX="1" rangeY="1" label="w123"/>
            <Waypoint type="Stand" x="33101" y="32119" z="7" rangeX="1" rangeY="1" label="w124"/>
            <Waypoint type="Ladder" x="33101" y="32119" z="7" rangeX="1" rangeY="1" label="w125"/>
            <Waypoint type="Stand" x="33101" y="32120" z="6" rangeX="1" rangeY="1" label="w126"/>
            <Waypoint type="Action" x="33101" y="32120" z="6" rangeX="1" rangeY="1" label="LeavePos1" script="if not islocation() then&#10;    gotolabel(&quot;OutOfFireyGates&quot;)&#10;end"/>
            <Waypoint type="Node" x="33101" y="32112" z="6" rangeX="1" rangeY="1" label="AfterCheck"/>
            <Waypoint type="Stand" x="33101" y="32109" z="6" rangeX="1" rangeY="1" label="w127"/>
            <Waypoint type="Walk" x="33101" y="32108" z="6" rangeX="1" rangeY="1" label="w129"/>
            <Waypoint type="Stand" x="33102" y="32104" z="7" rangeX="1" rangeY="1" label="w128"/>
            <Waypoint type="Walk" x="33101" y="32104" z="7" rangeX="1" rangeY="1" label="w130"/>
            <Waypoint type="Stand" x="33100" y="32104" z="6" rangeX="1" rangeY="1" label="w131"/>
            <Waypoint type="Action" x="33100" y="32104" z="6" rangeX="1" rangeY="1" label="LeavePos2" script="if not islocation() then&#10;    gotolabel(&quot;AfterCheck&quot;)&#10;end"/>
            <Waypoint type="Node" x="33097" y="32091" z="6" rangeX="1" rangeY="1" label="AfterCheck2"/>
            <Waypoint type="Stand" x="33099" y="32086" z="6" rangeX="1" rangeY="1" label="w133"/>
            <Waypoint type="Walk" x="33099" y="32085" z="6" rangeX="1" rangeY="1" label="w134"/>
            <Waypoint type="Stand" x="33087" y="32089" z="7" rangeX="1" rangeY="1" label="w135"/>
            <Waypoint type="Node" x="33067" y="32093" z="7" rangeX="1" rangeY="1" label="w136"/>
            <Waypoint type="Stand" x="33046" y="32096" z="7" rangeX="1" rangeY="1" label="w137"/>
            <Waypoint type="Stand" x="33032" y="32096" z="7" rangeX="1" rangeY="1" label="w138"/>
            <Waypoint type="Ladder" x="33032" y="32096" z="7" rangeX="1" rangeY="1" label="w139"/>
            <Waypoint type="Stand" x="33032" y="32097" z="6" rangeX="1" rangeY="1" label="w140"/>
            <Waypoint type="Action" x="33032" y="32097" z="6" rangeX="1" rangeY="1" label="CheckUpLeave" script="if not islocation() then&#10;    gotolabel(&quot;AfterCheck2&quot;)&#10;end"/>
            <Waypoint type="Node" x="33019" y="32094" z="6" rangeX="1" rangeY="1" label="w132"/>
            <Waypoint type="Stand" x="33017" y="32095" z="6" rangeX="1" rangeY="1" label="w141"/>
            <Waypoint type="Walk" x="33016" y="32095" z="6" rangeX="1" rangeY="1" label="w142"/>
            <Waypoint type="Node" x="33008" y="32097" z="7" rangeX="1" rangeY="1" label="w143"/>
            <Waypoint type="Stand" x="33004" y="32100" z="7" rangeX="1" rangeY="1" label="AtDoorBack"/>
            <Waypoint type="Action" x="33004" y="32100" z="7" rangeX="1" rangeY="1" label="w145" script="if topitem(33004, 32099, 7).id == 17700 then&#10;    useitem(17700, 33004, 32099, 7)&#10;end"/>
            <Waypoint type="Stand" x="33004" y="32095" z="7" rangeX="1" rangeY="1" label="w146"/>
            <Waypoint type="Action" x="33004" y="32095" z="7" rangeX="1" rangeY="1" label="PastDoorCheck" script="if not islocation() then&#10;    gotolabel(&quot;AtDoorBack&quot;)&#10;end"/>
            <Waypoint type="Ladder" x="33004" y="32095" z="7" rangeX="1" rangeY="1" label="w144"/>
            <Waypoint type="Stand" x="33000" y="32096" z="6" rangeX="1" rangeY="1" label="AtDoor2Back"/>
            <Waypoint type="Action" x="33000" y="32096" z="6" rangeX="1" rangeY="1" label="w147" script="if topitem(32999, 32096, 6).id == 17569 then&#10;    useitem(17569, 32999, 32096, 6)&#10;end"/>
            <Waypoint type="Node" x="32998" y="32088" z="6" rangeX="1" rangeY="1" label="PastDoor2Check"/>
            <Waypoint type="Action" x="32998" y="32088" z="6" rangeX="1" rangeY="1" label="w149" script="if not islocation() then&#10;    gotolabel(&quot;AtDoor2Back&quot;)&#10;end"/>
            <Waypoint type="Node" x="32999" y="32073" z="6" rangeX="1" rangeY="1" label="w148"/>
            <Waypoint type="Node" x="33008" y="32054" z="6" rangeX="1" rangeY="1" label="End"/>
        </WaypointSection>
    </Cavebot>
    <Looting enabled="yes">
        <Options>
            <Option range="50"/>
            <Option moveItemsQuickly="yes"/>
            <Option eatFoodFromCorpse="yes"/>
            <Option openNextBP="yes"/>
            <Option openBPsAtLogin="no"/>
            <Option valuableBodies="3000"/>
            <Option ultraValuableBodies="50000"/>
            <Option alertOnValuableBodies="no"/>
            <Option openValuableBodiesOnly="no"/>
            <Option openUltraValuableBodiesImmediately="no"/>
            <Option policy="Smart Looting"/>
            <LootingDestinations>
                <lootingDestination name="mainbp" destination="backpack"/>
                <lootingDestination name="rarebp" destination="golden backpack"/>
                <lootingDestination name="goldbp" destination="yellow backpack"/>
                <lootingDestination name="maindp" destination="fur backpack"/>
                <lootingDestination name="stackdp" destination="camouflage backpack"/>
                <lootingDestination name="nstackdp" destination=""/>
                <lootingDestination name="rarebpn" destination="purple backpack"/>
            </LootingDestinations>
        </Options>
        <LootingProfile name="LootList" isCurrentProfile="yes">
            <LootItem name="gold coin" id="3031" sellPrice="1" weight="0.10" destinationName="goldbp" action="Loot" lootCondition="Has Cap to Loot" itemCategory="g" alertOnDrop="no" alertOnMiss="no"/>
            <LootItem name="elvish talisman" id="9635" sellPrice="45" weight="1.10" destinationName="rarebp" action="Loot" lootCondition="Has Cap to Loot" itemCategory="s" alertOnDrop="no" alertOnMiss="no"/>
            <LootItem name="heaven blossom" id="5921" sellPrice="50" weight="2.10" destinationName="rarebp" action="Loot" lootCondition="Has Cap to Loot" itemCategory="s" alertOnDrop="no" alertOnMiss="no"/>
            <LootItem name="flintstone" id="12806" sellPrice="800" weight="3.75" destinationName="rarebp" action="Loot" lootCondition="Has Cap to Loot" itemCategory="s" alertOnDrop="no" alertOnMiss="no"/>
            <LootItem name="holy orchid" id="5922" sellPrice="90" weight="2.50" destinationName="rarebp" action="Loot" lootCondition="Has Cap to Loot" itemCategory="s" alertOnDrop="no" alertOnMiss="no"/>
            <LootItem name="wand of cosmic energy" id="3073" sellPrice="2000" weight="25.00" destinationName="rarebp" action="Loot" lootCondition="Has Cap to Loot" itemCategory="s" alertOnDrop="no" alertOnMiss="no"/>
            <LootItem name="Elven Scouting Glass" id="11464" sellPrice="50" weight="0.80" destinationName="rarebp" action="Loot" lootCondition="Has Cap to Loot" itemCategory="s" alertOnDrop="no" alertOnMiss="no"/>
            <LootItem name="Elven Astral Observer" id="11465" sellPrice="90" weight="1.12" destinationName="rarebp" action="Loot" lootCondition="Has Cap to Loot" itemCategory="s" alertOnDrop="no" alertOnMiss="no"/>
            <LootItem name="elvish bow" id="7438" sellPrice="2000" weight="39.00" destinationName="rarebp" action="Loot" lootCondition="Has Cap to Loot" itemCategory="s" alertOnDrop="no" alertOnMiss="no"/>
            <LootItem name="brown piece of cloth" id="5913" sellPrice="100" weight="5.00" destinationName="rarebp" action="Loot" lootCondition="Has Cap to Loot" itemCategory="s" alertOnDrop="no" alertOnMiss="no"/>
            <LootItem name="life crystal" id="3061" sellPrice="85" weight="2.63" destinationName="rarebp" action="Loot" lootCondition="Has Cap to Loot" itemCategory="s" alertOnDrop="no" alertOnMiss="no"/>
            <LootItem name="Wand of Inferno" id="3071" sellPrice="3000" weight="27.00" destinationName="rarebp" action="Loot" lootCondition="Has Cap to Loot" itemCategory="s" alertOnDrop="no" alertOnMiss="no"/>
            <LootItem name="Dragon Shield" id="3416" sellPrice="4000" weight="60.00" destinationName="rarebp" action="Loot" lootCondition="Has Cap to Loot" itemCategory="s" alertOnDrop="no" alertOnMiss="no"/>
            <LootItem name="Dragon Hammer" id="3322" sellPrice="2000" weight="97.00" destinationName="rarebp" action="Loot" lootCondition="Has Cap to Loot" itemCategory="s" alertOnDrop="no" alertOnMiss="no"/>
            <LootItem name="Dragonbone Staff" id="7430" sellPrice="3000" weight="18.00" destinationName="rarebp" action="Loot" lootCondition="Has Cap to Loot" itemCategory="s" alertOnDrop="no" alertOnMiss="no"/>
            <LootItem name="Serpent Sword" id="3297" sellPrice="900" weight="41.00" destinationName="rarebp" action="Loot" lootCondition="Has Cap to Loot" itemCategory="s" alertOnDrop="no" alertOnMiss="no"/>
            <LootItem name="Green Dragon Leather" id="5877" sellPrice="100" weight="0.60" destinationName="rarebp" action="Loot" lootCondition="Has Cap to Loot" itemCategory="s" alertOnDrop="no" alertOnMiss="no"/>
            <LootItem name="Green Dragon Scale" id="5920" sellPrice="100" weight="0.80" destinationName="rarebp" action="Loot" lootCondition="Has Cap to Loot" itemCategory="s" alertOnDrop="no" alertOnMiss="no"/>
            <LootItem name="Small Diamond" id="3028" sellPrice="300" weight="0.10" destinationName="rarebp" action="Loot" lootCondition="Has Cap to Loot" itemCategory="s" alertOnDrop="no" alertOnMiss="no"/>
            <LootItem name="rotten piece of cloth" id="10291" sellPrice="30" weight="0.60" destinationName="rarebp" action="Loot" lootCondition="Has Cap to Loot" itemCategory="s" alertOnDrop="no" alertOnMiss="no"/>
            <LootItem name="Cyclops Toe" id="9657" sellPrice="55" weight="1.11" destinationName="rarebp" action="Loot" lootCondition="Has Cap to Loot" itemCategory="s" alertOnDrop="no" alertOnMiss="no"/>
            <LootItem name="Guardian Shield" id="3415" sellPrice="2000" weight="55.00" destinationName="rarebp" action="Loot" lootCondition="Has Cap to Loot" itemCategory="s" alertOnDrop="no" alertOnMiss="no"/>
            <LootItem name="Mana Potion" id="268" sellPrice="0" weight="2.70" destinationName="mainbp" action="Loot" lootCondition="Has Cap to Loot" itemCategory="m" alertOnDrop="no" alertOnMiss="no"/>
            <LootItem name="coal" id="12600" sellPrice="20" weight="5.00" destinationName="rarebp" action="Ignore" lootCondition="Has Cap to Loot" itemCategory="s" alertOnDrop="no" alertOnMiss="no"/>
        </LootingProfile>
    </Looting>
    <Supplies>
        <Options>
            <Option defaultBackpack=""/>
            <Option extraCashMin="1000" extraCashMax="2500"/>
            <Option autoSwitchProfiles="no"/>
        </Options>
        <SupplyProfile name="SupplyList" vocation="Knight" level="73" isCurrentProfile="yes">
            <SupplyItem name="strong health potion" id="236" buyPrice="100" weight="2.90" leaveCaveAt="0" rule="Up to..." ruleValue="30" destination="strong health potion" category="a"/>
            <SupplyItem name="mana potion" id="268" buyPrice="50" weight="2.70" leaveCaveAt="0" rule="Up to..." ruleValue="100" destination="mana potion" category="a"/>
        </SupplyProfile>
    </Supplies>
    <Targeting enabled="yes" allowDiagonalMovement="yes" autoSwitchProfiles="no" nonPvPMode="no">
        <TargetingProfile name="TargetList" vocation="Knight, Paladin, Sorcerer, Druid" level="500" targetMustBeShootable="no" targetMustBeReachable="yes" isCurrentProfile="yes">
            <Priorities>
                <Priority health="80"/>
                <Priority proximity="70"/>
                <Priority danger="90"/>
                <Priority random="0"/>
                <Priority lure="30"/>
                <Priority stick="2"/>
            </Priorities>
            <Creatures>
                <Creature name="snake" amount="Any" category="" dontLoot="yes" playAlarm="no" syncSpells="no">
                    <FightingSettings>
                        <Setting index="0" hpFrom="0" hpTo="100" danger="0" onlyIfTrapped="yes" mustAttackMe="yes" action="Attack" avoidance="No Avoidance" desiredStance="Reach" distance="0" attackMode="No Change" firstSpell="" secondSpell="" thirdSpell="" fourthSpell="" spamMin="500" spamMax="1000"/>
                        <Setting index="1" hpFrom="0" hpTo="0" danger="0" onlyIfTrapped="yes" mustAttackMe="yes" action="Attack" avoidance="No Avoidance" desiredStance="No Movement" distance="3" attackMode="No Change" firstSpell="" secondSpell="" thirdSpell="" fourthSpell="" spamMin="300" spamMax="500"/>
                        <Setting index="2" hpFrom="0" hpTo="0" danger="0" onlyIfTrapped="yes" mustAttackMe="yes" action="Attack" avoidance="No Avoidance" desiredStance="No Movement" distance="3" attackMode="No Change" firstSpell="" secondSpell="" thirdSpell="" fourthSpell="" spamMin="300" spamMax="500"/>
                        <Setting index="3" hpFrom="0" hpTo="0" danger="0" onlyIfTrapped="yes" mustAttackMe="yes" action="Attack" avoidance="No Avoidance" desiredStance="No Movement" distance="3" attackMode="No Change" firstSpell="" secondSpell="" thirdSpell="" fourthSpell="" spamMin="300" spamMax="500"/>
                    </FightingSettings>
                </Creature>
                <Creature name="bat" amount="Any" category="" dontLoot="no" playAlarm="no" syncSpells="no">
                    <FightingSettings>
                        <Setting index="0" hpFrom="0" hpTo="100" danger="0" onlyIfTrapped="yes" mustAttackMe="no" action="Attack" avoidance="No Avoidance" desiredStance="Reach" distance="0" attackMode="No Change" firstSpell="" secondSpell="" thirdSpell="" fourthSpell="" spamMin="500" spamMax="1000"/>
                        <Setting index="1" hpFrom="0" hpTo="0" danger="0" onlyIfTrapped="yes" mustAttackMe="no" action="Attack" avoidance="No Avoidance" desiredStance="No Movement" distance="3" attackMode="No Change" firstSpell="" secondSpell="" thirdSpell="" fourthSpell="" spamMin="300" spamMax="500"/>
                        <Setting index="2" hpFrom="0" hpTo="0" danger="0" onlyIfTrapped="yes" mustAttackMe="no" action="Attack" avoidance="No Avoidance" desiredStance="No Movement" distance="3" attackMode="No Change" firstSpell="" secondSpell="" thirdSpell="" fourthSpell="" spamMin="300" spamMax="500"/>
                        <Setting index="3" hpFrom="0" hpTo="0" danger="0" onlyIfTrapped="yes" mustAttackMe="no" action="Attack" avoidance="No Avoidance" desiredStance="No Movement" distance="3" attackMode="No Change" firstSpell="" secondSpell="" thirdSpell="" fourthSpell="" spamMin="300" spamMax="500"/>
                    </FightingSettings>
                </Creature>
                <Creature name="slime" amount="Any" category="" dontLoot="no" playAlarm="no" syncSpells="no">
                    <FightingSettings>
                        <Setting index="0" hpFrom="0" hpTo="100" danger="0" onlyIfTrapped="no" mustAttackMe="yes" action="Attack" avoidance="No Avoidance" desiredStance="Reach" distance="0" attackMode="No Change" firstSpell="" secondSpell="" thirdSpell="" fourthSpell="" spamMin="500" spamMax="1000"/>
                        <Setting index="1" hpFrom="0" hpTo="0" danger="0" onlyIfTrapped="no" mustAttackMe="yes" action="Attack" avoidance="No Avoidance" desiredStance="No Movement" distance="3" attackMode="No Change" firstSpell="" secondSpell="" thirdSpell="" fourthSpell="" spamMin="300" spamMax="500"/>
                        <Setting index="2" hpFrom="0" hpTo="0" danger="0" onlyIfTrapped="no" mustAttackMe="yes" action="Attack" avoidance="No Avoidance" desiredStance="No Movement" distance="3" attackMode="No Change" firstSpell="" secondSpell="" thirdSpell="" fourthSpell="" spamMin="300" spamMax="500"/>
                        <Setting index="3" hpFrom="0" hpTo="0" danger="0" onlyIfTrapped="no" mustAttackMe="yes" action="Attack" avoidance="No Avoidance" desiredStance="No Movement" distance="3" attackMode="No Change" firstSpell="" secondSpell="" thirdSpell="" fourthSpell="" spamMin="300" spamMax="500"/>
                    </FightingSettings>
                </Creature>
                <Creature name="centipede" amount="Any" category="" dontLoot="no" playAlarm="no" syncSpells="no">
                    <FightingSettings>
                        <Setting index="0" hpFrom="0" hpTo="100" danger="0" onlyIfTrapped="yes" mustAttackMe="no" action="Attack" avoidance="No Avoidance" desiredStance="Reach" distance="0" attackMode="No Change" firstSpell="" secondSpell="" thirdSpell="" fourthSpell="" spamMin="500" spamMax="1000"/>
                        <Setting index="1" hpFrom="0" hpTo="0" danger="0" onlyIfTrapped="yes" mustAttackMe="no" action="Attack" avoidance="No Avoidance" desiredStance="No Movement" distance="3" attackMode="No Change" firstSpell="" secondSpell="" thirdSpell="" fourthSpell="" spamMin="300" spamMax="500"/>
                        <Setting index="2" hpFrom="0" hpTo="0" danger="0" onlyIfTrapped="yes" mustAttackMe="no" action="Attack" avoidance="No Avoidance" desiredStance="No Movement" distance="3" attackMode="No Change" firstSpell="" secondSpell="" thirdSpell="" fourthSpell="" spamMin="300" spamMax="500"/>
                        <Setting index="3" hpFrom="0" hpTo="0" danger="0" onlyIfTrapped="yes" mustAttackMe="no" action="Attack" avoidance="No Avoidance" desiredStance="No Movement" distance="3" attackMode="No Change" firstSpell="" secondSpell="" thirdSpell="" fourthSpell="" spamMin="300" spamMax="500"/>
                    </FightingSettings>
                </Creature>
                <Creature name="elf" amount="Any" category="" dontLoot="no" playAlarm="no" syncSpells="no">
                    <FightingSettings>
                        <Setting index="0" hpFrom="0" hpTo="100" danger="2" onlyIfTrapped="no" mustAttackMe="no" action="Attack" avoidance="No Avoidance" desiredStance="Reach" distance="0" attackMode="No Change" firstSpell="" secondSpell="" thirdSpell="" fourthSpell="" spamMin="500" spamMax="1000"/>
                        <Setting index="1" hpFrom="0" hpTo="0" danger="2" onlyIfTrapped="no" mustAttackMe="no" action="Attack" avoidance="No Avoidance" desiredStance="No Movement" distance="3" attackMode="No Change" firstSpell="" secondSpell="" thirdSpell="" fourthSpell="" spamMin="300" spamMax="500"/>
                        <Setting index="2" hpFrom="0" hpTo="0" danger="2" onlyIfTrapped="no" mustAttackMe="no" action="Attack" avoidance="No Avoidance" desiredStance="No Movement" distance="3" attackMode="No Change" firstSpell="" secondSpell="" thirdSpell="" fourthSpell="" spamMin="300" spamMax="500"/>
                        <Setting index="3" hpFrom="0" hpTo="0" danger="2" onlyIfTrapped="no" mustAttackMe="no" action="Attack" avoidance="No Avoidance" desiredStance="No Movement" distance="3" attackMode="No Change" firstSpell="" secondSpell="" thirdSpell="" fourthSpell="" spamMin="300" spamMax="500"/>
                    </FightingSettings>
                </Creature>
                <Creature name="firestarter" amount="Any" category="" dontLoot="no" playAlarm="no" syncSpells="no">
                    <FightingSettings>
                        <Setting index="0" hpFrom="0" hpTo="100" danger="3" onlyIfTrapped="no" mustAttackMe="no" action="Attack" avoidance="No Avoidance" desiredStance="Reach" distance="0" attackMode="No Change" firstSpell="" secondSpell="" thirdSpell="" fourthSpell="" spamMin="500" spamMax="1000"/>
                        <Setting index="1" hpFrom="0" hpTo="0" danger="3" onlyIfTrapped="no" mustAttackMe="no" action="Attack" avoidance="No Avoidance" desiredStance="No Movement" distance="3" attackMode="No Change" firstSpell="" secondSpell="" thirdSpell="" fourthSpell="" spamMin="300" spamMax="500"/>
                        <Setting index="2" hpFrom="0" hpTo="0" danger="3" onlyIfTrapped="no" mustAttackMe="no" action="Attack" avoidance="No Avoidance" desiredStance="No Movement" distance="3" attackMode="No Change" firstSpell="" secondSpell="" thirdSpell="" fourthSpell="" spamMin="300" spamMax="500"/>
                        <Setting index="3" hpFrom="0" hpTo="0" danger="3" onlyIfTrapped="no" mustAttackMe="no" action="Attack" avoidance="No Avoidance" desiredStance="No Movement" distance="3" attackMode="No Change" firstSpell="" secondSpell="" thirdSpell="" fourthSpell="" spamMin="300" spamMax="500"/>
                    </FightingSettings>
                </Creature>
                <Creature name="elf scout" amount="Any" category="" dontLoot="no" playAlarm="no" syncSpells="no">
                    <FightingSettings>
                        <Setting index="0" hpFrom="0" hpTo="100" danger="0" onlyIfTrapped="no" mustAttackMe="no" action="Attack" avoidance="No Avoidance" desiredStance="Reach" distance="0" attackMode="No Change" firstSpell="" secondSpell="" thirdSpell="" fourthSpell="" spamMin="500" spamMax="1000"/>
                        <Setting index="1" hpFrom="0" hpTo="0" danger="0" onlyIfTrapped="no" mustAttackMe="no" action="Attack" avoidance="No Avoidance" desiredStance="No Movement" distance="3" attackMode="No Change" firstSpell="" secondSpell="" thirdSpell="" fourthSpell="" spamMin="300" spamMax="500"/>
                        <Setting index="2" hpFrom="0" hpTo="0" danger="0" onlyIfTrapped="no" mustAttackMe="no" action="Attack" avoidance="No Avoidance" desiredStance="No Movement" distance="3" attackMode="No Change" firstSpell="" secondSpell="" thirdSpell="" fourthSpell="" spamMin="300" spamMax="500"/>
                        <Setting index="3" hpFrom="0" hpTo="0" danger="0" onlyIfTrapped="no" mustAttackMe="no" action="Attack" avoidance="No Avoidance" desiredStance="No Movement" distance="3" attackMode="No Change" firstSpell="" secondSpell="" thirdSpell="" fourthSpell="" spamMin="300" spamMax="500"/>
                    </FightingSettings>
                </Creature>
                <Creature name="elf arcanist" amount="Any" category="" dontLoot="no" playAlarm="no" syncSpells="no">
                    <FightingSettings>
                        <Setting index="0" hpFrom="0" hpTo="100" danger="2" onlyIfTrapped="no" mustAttackMe="no" action="Attack" avoidance="No Avoidance" desiredStance="Reach" distance="0" attackMode="No Change" firstSpell="" secondSpell="" thirdSpell="" fourthSpell="" spamMin="500" spamMax="1000"/>
                        <Setting index="1" hpFrom="0" hpTo="0" danger="2" onlyIfTrapped="no" mustAttackMe="no" action="Attack" avoidance="No Avoidance" desiredStance="No Movement" distance="3" attackMode="No Change" firstSpell="" secondSpell="" thirdSpell="" fourthSpell="" spamMin="300" spamMax="500"/>
                        <Setting index="2" hpFrom="0" hpTo="0" danger="2" onlyIfTrapped="no" mustAttackMe="no" action="Attack" avoidance="No Avoidance" desiredStance="No Movement" distance="3" attackMode="No Change" firstSpell="" secondSpell="" thirdSpell="" fourthSpell="" spamMin="300" spamMax="500"/>
                        <Setting index="3" hpFrom="0" hpTo="0" danger="2" onlyIfTrapped="no" mustAttackMe="no" action="Attack" avoidance="No Avoidance" desiredStance="No Movement" distance="3" attackMode="No Change" firstSpell="" secondSpell="" thirdSpell="" fourthSpell="" spamMin="300" spamMax="500"/>
                    </FightingSettings>
                </Creature>
                <Creature name="ghoul" amount="Any" category="" dontLoot="no" playAlarm="no" syncSpells="no">
                    <FightingSettings>
                        <Setting index="0" hpFrom="0" hpTo="100" danger="4" onlyIfTrapped="no" mustAttackMe="no" action="Attack" avoidance="No Avoidance" desiredStance="No Movement" distance="0" attackMode="No Change" firstSpell="" secondSpell="" thirdSpell="" fourthSpell="" spamMin="500" spamMax="1000"/>
                        <Setting index="1" hpFrom="0" hpTo="0" danger="4" onlyIfTrapped="no" mustAttackMe="no" action="Attack" avoidance="No Avoidance" desiredStance="No Movement" distance="3" attackMode="No Change" firstSpell="" secondSpell="" thirdSpell="" fourthSpell="" spamMin="300" spamMax="500"/>
                        <Setting index="2" hpFrom="0" hpTo="0" danger="4" onlyIfTrapped="no" mustAttackMe="no" action="Attack" avoidance="No Avoidance" desiredStance="No Movement" distance="3" attackMode="No Change" firstSpell="" secondSpell="" thirdSpell="" fourthSpell="" spamMin="300" spamMax="500"/>
                        <Setting index="3" hpFrom="0" hpTo="0" danger="4" onlyIfTrapped="no" mustAttackMe="no" action="Attack" avoidance="No Avoidance" desiredStance="No Movement" distance="3" attackMode="No Change" firstSpell="" secondSpell="" thirdSpell="" fourthSpell="" spamMin="300" spamMax="500"/>
                    </FightingSettings>
                </Creature>
                <Creature name="demon skeleton" amount="Any" category="" dontLoot="no" playAlarm="no" syncSpells="no">
                    <FightingSettings>
                        <Setting index="0" hpFrom="0" hpTo="100" danger="5" onlyIfTrapped="no" mustAttackMe="no" action="Attack" avoidance="No Avoidance" desiredStance="No Movement" distance="0" attackMode="No Change" firstSpell="" secondSpell="" thirdSpell="" fourthSpell="" spamMin="500" spamMax="1000"/>
                        <Setting index="1" hpFrom="0" hpTo="0" danger="5" onlyIfTrapped="no" mustAttackMe="no" action="Attack" avoidance="No Avoidance" desiredStance="No Movement" distance="3" attackMode="No Change" firstSpell="" secondSpell="" thirdSpell="" fourthSpell="" spamMin="300" spamMax="500"/>
                        <Setting index="2" hpFrom="0" hpTo="0" danger="5" onlyIfTrapped="no" mustAttackMe="no" action="Attack" avoidance="No Avoidance" desiredStance="No Movement" distance="3" attackMode="No Change" firstSpell="" secondSpell="" thirdSpell="" fourthSpell="" spamMin="300" spamMax="500"/>
                        <Setting index="3" hpFrom="0" hpTo="0" danger="5" onlyIfTrapped="no" mustAttackMe="no" action="Attack" avoidance="No Avoidance" desiredStance="No Movement" distance="3" attackMode="No Change" firstSpell="" secondSpell="" thirdSpell="" fourthSpell="" spamMin="300" spamMax="500"/>
                    </FightingSettings>
                </Creature>
                <Creature name="marsh stalker" amount="Any" category="" dontLoot="no" playAlarm="no" syncSpells="no">
                    <FightingSettings>
                        <Setting index="0" hpFrom="0" hpTo="100" danger="0" onlyIfTrapped="no" mustAttackMe="yes" action="Attack" avoidance="No Avoidance" desiredStance="Reach" distance="0" attackMode="No Change" firstSpell="" secondSpell="" thirdSpell="" fourthSpell="" spamMin="500" spamMax="1000"/>
                        <Setting index="1" hpFrom="0" hpTo="0" danger="0" onlyIfTrapped="no" mustAttackMe="yes" action="Attack" avoidance="No Avoidance" desiredStance="No Movement" distance="3" attackMode="No Change" firstSpell="" secondSpell="" thirdSpell="" fourthSpell="" spamMin="300" spamMax="500"/>
                        <Setting index="2" hpFrom="0" hpTo="0" danger="0" onlyIfTrapped="no" mustAttackMe="yes" action="Attack" avoidance="No Avoidance" desiredStance="No Movement" distance="3" attackMode="No Change" firstSpell="" secondSpell="" thirdSpell="" fourthSpell="" spamMin="300" spamMax="500"/>
                        <Setting index="3" hpFrom="0" hpTo="0" danger="0" onlyIfTrapped="no" mustAttackMe="yes" action="Attack" avoidance="No Avoidance" desiredStance="No Movement" distance="3" attackMode="No Change" firstSpell="" secondSpell="" thirdSpell="" fourthSpell="" spamMin="300" spamMax="500"/>
                    </FightingSettings>
                </Creature>
                <Creature name="water buffalo" amount="Any" category="" dontLoot="no" playAlarm="no" syncSpells="no">
                    <FightingSettings>
                        <Setting index="0" hpFrom="0" hpTo="100" danger="0" onlyIfTrapped="no" mustAttackMe="yes" action="Attack" avoidance="No Avoidance" desiredStance="Reach" distance="0" attackMode="No Change" firstSpell="" secondSpell="" thirdSpell="" fourthSpell="" spamMin="500" spamMax="1000"/>
                        <Setting index="1" hpFrom="0" hpTo="0" danger="0" onlyIfTrapped="no" mustAttackMe="yes" action="Attack" avoidance="No Avoidance" desiredStance="No Movement" distance="3" attackMode="No Change" firstSpell="" secondSpell="" thirdSpell="" fourthSpell="" spamMin="300" spamMax="500"/>
                        <Setting index="2" hpFrom="0" hpTo="0" danger="0" onlyIfTrapped="no" mustAttackMe="yes" action="Attack" avoidance="No Avoidance" desiredStance="No Movement" distance="3" attackMode="No Change" firstSpell="" secondSpell="" thirdSpell="" fourthSpell="" spamMin="300" spamMax="500"/>
                        <Setting index="3" hpFrom="0" hpTo="0" danger="0" onlyIfTrapped="no" mustAttackMe="yes" action="Attack" avoidance="No Avoidance" desiredStance="No Movement" distance="3" attackMode="No Change" firstSpell="" secondSpell="" thirdSpell="" fourthSpell="" spamMin="300" spamMax="500"/>
                    </FightingSettings>
                </Creature>
                <Creature name="swampling" amount="Any" category="" dontLoot="no" playAlarm="no" syncSpells="no">
                    <FightingSettings>
                        <Setting index="0" hpFrom="0" hpTo="100" danger="0" onlyIfTrapped="no" mustAttackMe="yes" action="Attack" avoidance="No Avoidance" desiredStance="Reach" distance="0" attackMode="No Change" firstSpell="" secondSpell="" thirdSpell="" fourthSpell="" spamMin="500" spamMax="1000"/>
                        <Setting index="1" hpFrom="0" hpTo="0" danger="0" onlyIfTrapped="no" mustAttackMe="yes" action="Attack" avoidance="No Avoidance" desiredStance="No Movement" distance="3" attackMode="No Change" firstSpell="" secondSpell="" thirdSpell="" fourthSpell="" spamMin="300" spamMax="500"/>
                        <Setting index="2" hpFrom="0" hpTo="0" danger="0" onlyIfTrapped="no" mustAttackMe="yes" action="Attack" avoidance="No Avoidance" desiredStance="No Movement" distance="3" attackMode="No Change" firstSpell="" secondSpell="" thirdSpell="" fourthSpell="" spamMin="300" spamMax="500"/>
                        <Setting index="3" hpFrom="0" hpTo="0" danger="0" onlyIfTrapped="no" mustAttackMe="yes" action="Attack" avoidance="No Avoidance" desiredStance="No Movement" distance="3" attackMode="No Change" firstSpell="" secondSpell="" thirdSpell="" fourthSpell="" spamMin="300" spamMax="500"/>
                    </FightingSettings>
                </Creature>
                <Creature name="toad" amount="Any" category="" dontLoot="no" playAlarm="no" syncSpells="no">
                    <FightingSettings>
                        <Setting index="0" hpFrom="0" hpTo="100" danger="0" onlyIfTrapped="no" mustAttackMe="no" action="Attack" avoidance="No Avoidance" desiredStance="Reach" distance="0" attackMode="No Change" firstSpell="" secondSpell="" thirdSpell="" fourthSpell="" spamMin="500" spamMax="1000"/>
                        <Setting index="1" hpFrom="0" hpTo="0" danger="0" onlyIfTrapped="no" mustAttackMe="no" action="Attack" avoidance="No Avoidance" desiredStance="No Movement" distance="3" attackMode="No Change" firstSpell="" secondSpell="" thirdSpell="" fourthSpell="" spamMin="300" spamMax="500"/>
                        <Setting index="2" hpFrom="0" hpTo="0" danger="0" onlyIfTrapped="no" mustAttackMe="no" action="Attack" avoidance="No Avoidance" desiredStance="No Movement" distance="3" attackMode="No Change" firstSpell="" secondSpell="" thirdSpell="" fourthSpell="" spamMin="300" spamMax="500"/>
                        <Setting index="3" hpFrom="0" hpTo="0" danger="0" onlyIfTrapped="no" mustAttackMe="no" action="Attack" avoidance="No Avoidance" desiredStance="No Movement" distance="3" attackMode="No Change" firstSpell="" secondSpell="" thirdSpell="" fourthSpell="" spamMin="300" spamMax="500"/>
                    </FightingSettings>
                </Creature>
                <Creature name="dragon" amount="Any" category="" dontLoot="no" playAlarm="no" syncSpells="no">
                    <FightingSettings>
                        <Setting index="0" hpFrom="0" hpTo="100" danger="11" onlyIfTrapped="no" mustAttackMe="no" action="Attack" avoidance="Avoid Waves" desiredStance="Approach" distance="0" attackMode="No Change" firstSpell="" secondSpell="" thirdSpell="" fourthSpell="" spamMin="500" spamMax="1000"/>
                        <Setting index="1" hpFrom="0" hpTo="0" danger="11" onlyIfTrapped="no" mustAttackMe="no" action="Attack" avoidance="No Avoidance" desiredStance="No Movement" distance="3" attackMode="No Change" firstSpell="" secondSpell="" thirdSpell="" fourthSpell="" spamMin="300" spamMax="500"/>
                        <Setting index="2" hpFrom="0" hpTo="0" danger="11" onlyIfTrapped="no" mustAttackMe="no" action="Attack" avoidance="No Avoidance" desiredStance="No Movement" distance="3" attackMode="No Change" firstSpell="" secondSpell="" thirdSpell="" fourthSpell="" spamMin="300" spamMax="500"/>
                        <Setting index="3" hpFrom="0" hpTo="0" danger="11" onlyIfTrapped="no" mustAttackMe="no" action="Attack" avoidance="No Avoidance" desiredStance="No Movement" distance="3" attackMode="No Change" firstSpell="" secondSpell="" thirdSpell="" fourthSpell="" spamMin="300" spamMax="500"/>
                    </FightingSettings>
                </Creature>
                <Creature name="cyclops" amount="Any" category="" dontLoot="no" playAlarm="no" syncSpells="no">
                    <FightingSettings>
                        <Setting index="0" hpFrom="0" hpTo="100" danger="0" onlyIfTrapped="no" mustAttackMe="no" action="Attack" avoidance="No Avoidance" desiredStance="Circle" distance="0" attackMode="No Change" firstSpell="" secondSpell="" thirdSpell="" fourthSpell="" spamMin="500" spamMax="1000"/>
                        <Setting index="1" hpFrom="0" hpTo="0" danger="0" onlyIfTrapped="no" mustAttackMe="no" action="Attack" avoidance="No Avoidance" desiredStance="No Movement" distance="3" attackMode="No Change" firstSpell="" secondSpell="" thirdSpell="" fourthSpell="" spamMin="300" spamMax="500"/>
                        <Setting index="2" hpFrom="0" hpTo="0" danger="0" onlyIfTrapped="no" mustAttackMe="no" action="Attack" avoidance="No Avoidance" desiredStance="No Movement" distance="3" attackMode="No Change" firstSpell="" secondSpell="" thirdSpell="" fourthSpell="" spamMin="300" spamMax="500"/>
                        <Setting index="3" hpFrom="0" hpTo="0" danger="0" onlyIfTrapped="no" mustAttackMe="no" action="Attack" avoidance="No Avoidance" desiredStance="No Movement" distance="3" attackMode="No Change" firstSpell="" secondSpell="" thirdSpell="" fourthSpell="" spamMin="300" spamMax="500"/>
                    </FightingSettings>
                </Creature>
                <Creature name="adventerer" amount="Any" category="" dontLoot="no" playAlarm="no" syncSpells="no">
                    <FightingSettings>
                        <Setting index="0" hpFrom="0" hpTo="100" danger="0" onlyIfTrapped="yes" mustAttackMe="no" action="Attack" avoidance="No Avoidance" desiredStance="Reach" distance="0" attackMode="No Change" firstSpell="" secondSpell="" thirdSpell="" fourthSpell="" spamMin="500" spamMax="1000"/>
                        <Setting index="1" hpFrom="0" hpTo="0" danger="0" onlyIfTrapped="yes" mustAttackMe="no" action="Attack" avoidance="No Avoidance" desiredStance="No Movement" distance="3" attackMode="No Change" firstSpell="" secondSpell="" thirdSpell="" fourthSpell="" spamMin="300" spamMax="500"/>
                        <Setting index="2" hpFrom="0" hpTo="0" danger="0" onlyIfTrapped="yes" mustAttackMe="no" action="Attack" avoidance="No Avoidance" desiredStance="No Movement" distance="3" attackMode="No Change" firstSpell="" secondSpell="" thirdSpell="" fourthSpell="" spamMin="300" spamMax="500"/>
                        <Setting index="3" hpFrom="0" hpTo="0" danger="0" onlyIfTrapped="yes" mustAttackMe="no" action="Attack" avoidance="No Avoidance" desiredStance="No Movement" distance="3" attackMode="No Change" firstSpell="" secondSpell="" thirdSpell="" fourthSpell="" spamMin="300" spamMax="500"/>
                    </FightingSettings>
                </Creature>
            </Creatures>
        </TargetingProfile>
    </Targeting>
    <OtherBots>
        <HealingPaths>
            <entryPath from="Healer/Rules/hp" to="PotionHealer/Rules/hp"/>
            <entryPath from="Healer/Rules/mana-burn" to="SpellHealer/Rules/mana burn"/>
            <entryPath from="Healer/Rules/mana-potion" to="PotionHealer/Rules/mana potion"/>
            <entryPath from="Healer/Rules/exura-ico" to="SpellHealer/Rules/exura ico"/>
        </HealingPaths>
        <TargetingPaths>
            <entryPath from="Targeting/Monsters/centipede/ListSettings/Setting0" to="Targeting/Creatures/centipede/Setting1"/>
            <entryPath from="Targeting/Monsters/elf-scout/ListSettings/Setting0" to="Targeting/Creatures/elf scout/Setting1"/>
            <entryPath from="Targeting/Monsters/demon-skeleton/ListSettings/Setting0" to="Targeting/Creatures/demon skeleton/Setting1"/>
            <entryPath from="Targeting/Monsters/marsh-stalker/ListSettings/Setting0" to="Targeting/Creatures/marsh stalker/Setting1"/>
            <entryPath from="Targeting/Monsters/adventerer/ListSettings/Setting0" to="Targeting/Creatures/adventerer/Setting1"/>
            <entryPath from="Targeting/Monsters/dragon/ListSettings/Setting0" to="Targeting/Creatures/dragon/Setting1"/>
            <entryPath from="Targeting/Monsters/swampling/ListSettings/Setting0" to="Targeting/Creatures/swampling/Setting1"/>
            <entryPath from="Targeting/Monsters/slime/ListSettings/Setting0" to="Targeting/Creatures/slime/Setting1"/>
            <entryPath from="Targeting/Monsters/water-buffalo/ListSettings/Setting0" to="Targeting/Creatures/water buffalo/Setting1"/>
            <entryPath from="Targeting/Monsters/elf-arcanist/ListSettings/Setting0" to="Targeting/Creatures/elf arcanist/Setting1"/>
            <entryPath from="Targeting/Monsters/bat/ListSettings/Setting0" to="Targeting/Creatures/bat/Setting1"/>
            <entryPath from="Targeting/Monsters/snake/ListSettings/Setting0" to="Targeting/Creatures/snake/Setting1"/>
            <entryPath from="Targeting/Monsters/firestarter/ListSettings/Setting0" to="Targeting/Creatures/firestarter/Setting1"/>
            <entryPath from="Targeting/Monsters/elf/ListSettings/Setting0" to="Targeting/Creatures/elf/Setting1"/>
            <entryPath from="Targeting/Monsters/toad/ListSettings/Setting0" to="Targeting/Creatures/toad/Setting1"/>
            <entryPath from="Targeting/Monsters/cyclops/ListSettings/Setting0" to="Targeting/Creatures/cyclops/Setting1"/>
            <entryPath from="Targeting/Monsters/ghoul/ListSettings/Setting0" to="Targeting/Creatures/ghoul/Setting1"/>
        </TargetingPaths>
    </OtherBots>
</WindbotSettings>
